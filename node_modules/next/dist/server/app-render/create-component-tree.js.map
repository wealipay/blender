{"version":3,"sources":["../../../src/server/app-render/create-component-tree.tsx"],"sourcesContent":["import type { ComponentType } from 'react'\nimport type {\n  CacheNodeSeedData,\n  LoadingModuleData,\n} from '../../shared/lib/app-router-types'\nimport type { PreloadCallbacks } from './types'\nimport {\n  isClientReference,\n  isUseCacheFunction,\n} from '../../lib/client-and-server-references'\nimport { getLayoutOrPageModule } from '../lib/app-dir-module'\nimport type { LoaderTree } from '../lib/app-dir-module'\nimport { interopDefault } from './interop-default'\nimport { parseLoaderTree } from '../../shared/lib/router/utils/parse-loader-tree'\nimport type { AppRenderContext, GetDynamicParamFromSegment } from './app-render'\nimport { createComponentStylesAndScripts } from './create-component-styles-and-scripts'\nimport { getLayerAssets } from './get-layer-assets'\nimport { hasLoadingComponentInTree } from './has-loading-component-in-tree'\nimport { validateRevalidate } from '../lib/patch-fetch'\nimport { PARALLEL_ROUTE_DEFAULT_PATH } from '../../client/components/builtin/default'\nimport { getTracer } from '../lib/trace/tracer'\nimport { NextNodeServerSpan } from '../lib/trace/constants'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport type { Params } from '../request/params'\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external'\nimport type {\n  UseCacheLayoutProps,\n  UseCachePageProps,\n} from '../use-cache/use-cache-wrapper'\nimport { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\nimport {\n  BOUNDARY_PREFIX,\n  BOUNDARY_SUFFIX,\n  BUILTIN_PREFIX,\n  getConventionPathByType,\n  isNextjsBuiltinFilePath,\n} from './segment-explorer-path'\nimport type { AppSegmentConfig } from '../../build/segment-config/app/app-segment-config'\n\n/**\n * Use the provided loader tree to create the React Component tree.\n */\nexport function createComponentTree(props: {\n  loaderTree: LoaderTree\n  parentParams: Params\n  rootLayoutIncluded: boolean\n  injectedCSS: Set<string>\n  injectedJS: Set<string>\n  injectedFontPreloadTags: Set<string>\n  ctx: AppRenderContext\n  missingSlots?: Set<string>\n  preloadCallbacks: PreloadCallbacks\n  authInterrupts: boolean\n  MetadataOutlet: ComponentType\n}): Promise<CacheNodeSeedData> {\n  return getTracer().trace(\n    NextNodeServerSpan.createComponentTree,\n    {\n      spanName: 'build component tree',\n    },\n    () => createComponentTreeInternal(props, true)\n  )\n}\n\nfunction errorMissingDefaultExport(\n  pagePath: string,\n  convention: string\n): never {\n  const normalizedPagePath = pagePath === '/' ? '' : pagePath\n  throw new Error(\n    `The default export is not a React Component in \"${normalizedPagePath}/${convention}\"`\n  )\n}\n\nconst cacheNodeKey = 'c'\n\nasync function createComponentTreeInternal(\n  {\n    loaderTree: tree,\n    parentParams,\n    rootLayoutIncluded,\n    injectedCSS,\n    injectedJS,\n    injectedFontPreloadTags,\n    ctx,\n    missingSlots,\n    preloadCallbacks,\n    authInterrupts,\n    MetadataOutlet,\n  }: {\n    loaderTree: LoaderTree\n    parentParams: Params\n    rootLayoutIncluded: boolean\n    injectedCSS: Set<string>\n    injectedJS: Set<string>\n    injectedFontPreloadTags: Set<string>\n    ctx: AppRenderContext\n    missingSlots?: Set<string>\n    preloadCallbacks: PreloadCallbacks\n    authInterrupts: boolean\n    MetadataOutlet: ComponentType | null\n  },\n  isRoot: boolean\n): Promise<CacheNodeSeedData> {\n  const {\n    renderOpts: { nextConfigOutput, experimental, cacheComponents },\n    workStore,\n    componentMod: {\n      createElement,\n      Fragment,\n      SegmentViewNode,\n      HTTPAccessFallbackBoundary,\n      LayoutRouter,\n      RenderFromTemplateContext,\n      ClientPageRoot,\n      ClientSegmentRoot,\n      createServerSearchParamsForServerPage,\n      createPrerenderSearchParamsForClientPage,\n      createServerParamsForServerSegment,\n      createPrerenderParamsForClientSegment,\n      serverHooks: { DynamicServerError },\n      Postpone,\n    },\n    pagePath,\n    getDynamicParamFromSegment,\n    isPrefetch,\n    query,\n  } = ctx\n\n  const { page, conventionPath, segment, modules, parallelRoutes } =\n    parseLoaderTree(tree)\n\n  const {\n    layout,\n    template,\n    error,\n    loading,\n    'not-found': notFound,\n    forbidden,\n    unauthorized,\n  } = modules\n\n  const injectedCSSWithCurrentLayout = new Set(injectedCSS)\n  const injectedJSWithCurrentLayout = new Set(injectedJS)\n  const injectedFontPreloadTagsWithCurrentLayout = new Set(\n    injectedFontPreloadTags\n  )\n\n  const layerAssets = getLayerAssets({\n    preloadCallbacks,\n    ctx,\n    layoutOrPagePath: conventionPath,\n    injectedCSS: injectedCSSWithCurrentLayout,\n    injectedJS: injectedJSWithCurrentLayout,\n    injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n  })\n\n  const [Template, templateStyles, templateScripts] = template\n    ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: template[1],\n        getComponent: template[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout,\n      })\n    : [Fragment]\n\n  const [ErrorComponent, errorStyles, errorScripts] = error\n    ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: error[1],\n        getComponent: error[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout,\n      })\n    : []\n\n  const [Loading, loadingStyles, loadingScripts] = loading\n    ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: loading[1],\n        getComponent: loading[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout,\n      })\n    : []\n\n  const isLayout = typeof layout !== 'undefined'\n  const isPage = typeof page !== 'undefined'\n  const { mod: layoutOrPageMod, modType } = await getTracer().trace(\n    NextNodeServerSpan.getLayoutOrPageModule,\n    {\n      hideSpan: !(isLayout || isPage),\n      spanName: 'resolve segment modules',\n      attributes: {\n        'next.segment': segment,\n      },\n    },\n    () => getLayoutOrPageModule(tree)\n  )\n\n  /**\n   * Checks if the current segment is a root layout.\n   */\n  const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded\n  /**\n   * Checks if the current segment or any level above it has a root layout.\n   */\n  const rootLayoutIncludedAtThisLevelOrAbove =\n    rootLayoutIncluded || rootLayoutAtThisLevel\n\n  const [NotFound, notFoundStyles] = notFound\n    ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: notFound[1],\n        getComponent: notFound[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout,\n      })\n    : []\n\n  const prefetchConfig = layoutOrPageMod\n    ? (layoutOrPageMod as AppSegmentConfig).unstable_prefetch\n    : undefined\n  /** Whether this segment should use a runtime prefetch instead of a static prefetch. */\n  const hasRuntimePrefetch = prefetchConfig?.mode === 'runtime'\n\n  const [Forbidden, forbiddenStyles] =\n    authInterrupts && forbidden\n      ? await createComponentStylesAndScripts({\n          ctx,\n          filePath: forbidden[1],\n          getComponent: forbidden[0],\n          injectedCSS: injectedCSSWithCurrentLayout,\n          injectedJS: injectedJSWithCurrentLayout,\n        })\n      : []\n\n  const [Unauthorized, unauthorizedStyles] =\n    authInterrupts && unauthorized\n      ? await createComponentStylesAndScripts({\n          ctx,\n          filePath: unauthorized[1],\n          getComponent: unauthorized[0],\n          injectedCSS: injectedCSSWithCurrentLayout,\n          injectedJS: injectedJSWithCurrentLayout,\n        })\n      : []\n\n  let dynamic = layoutOrPageMod?.dynamic\n\n  if (nextConfigOutput === 'export') {\n    if (!dynamic || dynamic === 'auto') {\n      dynamic = 'error'\n    } else if (dynamic === 'force-dynamic') {\n      // force-dynamic is always incompatible with 'export'. We must interrupt the build\n      throw new StaticGenBailoutError(\n        `Page with \\`dynamic = \"force-dynamic\"\\` couldn't be exported. \\`output: \"export\"\\` requires all pages be renderable statically because there is no runtime server to dynamically render routes in this output format. Learn more: https://nextjs.org/docs/app/building-your-application/deploying/static-exports`\n      )\n    }\n  }\n\n  if (typeof dynamic === 'string') {\n    // the nested most config wins so we only force-static\n    // if it's configured above any parent that configured\n    // otherwise\n    if (dynamic === 'error') {\n      workStore.dynamicShouldError = true\n    } else if (dynamic === 'force-dynamic') {\n      workStore.forceDynamic = true\n\n      // TODO: (PPR) remove this bailout once PPR is the default\n      if (workStore.isStaticGeneration && !experimental.isRoutePPREnabled) {\n        // If the postpone API isn't available, we can't postpone the render and\n        // therefore we can't use the dynamic API.\n        const err = new DynamicServerError(\n          `Page with \\`dynamic = \"force-dynamic\"\\` won't be rendered statically.`\n        )\n        workStore.dynamicUsageDescription = err.message\n        workStore.dynamicUsageStack = err.stack\n        throw err\n      }\n    } else {\n      workStore.dynamicShouldError = false\n      workStore.forceStatic = dynamic === 'force-static'\n    }\n  }\n\n  if (typeof layoutOrPageMod?.fetchCache === 'string') {\n    workStore.fetchCache = layoutOrPageMod?.fetchCache\n  }\n\n  if (typeof layoutOrPageMod?.revalidate !== 'undefined') {\n    validateRevalidate(layoutOrPageMod?.revalidate, workStore.route)\n  }\n\n  if (typeof layoutOrPageMod?.revalidate === 'number') {\n    const defaultRevalidate = layoutOrPageMod.revalidate as number\n\n    const workUnitStore = workUnitAsyncStorage.getStore()\n\n    if (workUnitStore) {\n      switch (workUnitStore.type) {\n        case 'prerender':\n        case 'prerender-runtime':\n        case 'prerender-legacy':\n        case 'prerender-ppr':\n          if (workUnitStore.revalidate > defaultRevalidate) {\n            workUnitStore.revalidate = defaultRevalidate\n          }\n          break\n        case 'request':\n          // A request store doesn't have a revalidate property.\n          break\n        // createComponentTree is not called for these stores:\n        case 'cache':\n        case 'private-cache':\n        case 'prerender-client':\n        case 'unstable-cache':\n          break\n        default:\n          workUnitStore satisfies never\n      }\n    }\n\n    if (\n      !workStore.forceStatic &&\n      workStore.isStaticGeneration &&\n      defaultRevalidate === 0 &&\n      // If the postpone API isn't available, we can't postpone the render and\n      // therefore we can't use the dynamic API.\n      !experimental.isRoutePPREnabled\n    ) {\n      const dynamicUsageDescription = `revalidate: 0 configured ${segment}`\n      workStore.dynamicUsageDescription = dynamicUsageDescription\n\n      throw new DynamicServerError(dynamicUsageDescription)\n    }\n  }\n\n  const isStaticGeneration = workStore.isStaticGeneration\n\n  // Assume the segment we're rendering contains only partial data if PPR is\n  // enabled and this is a statically generated response. This is used by the\n  // client Segment Cache after a prefetch to determine if it can skip the\n  // second request to fill in the dynamic data.\n  //\n  // It's OK for this to be `true` when the data is actually fully static, but\n  // it's not OK for this to be `false` when the data possibly contains holes.\n  // Although the value here is overly pessimistic, for prefetches, it will be\n  // replaced by a more specific value when the data is later processed into\n  // per-segment responses (see collect-segment-data.tsx)\n  //\n  // For dynamic requests, this must always be `false` because dynamic responses\n  // are never partial.\n  const isPossiblyPartialResponse =\n    isStaticGeneration && experimental.isRoutePPREnabled === true\n\n  const LayoutOrPage: ComponentType<any> | undefined = layoutOrPageMod\n    ? interopDefault(layoutOrPageMod)\n    : undefined\n\n  /**\n   * The React Component to render.\n   */\n  let MaybeComponent = LayoutOrPage\n\n  if (process.env.NODE_ENV === 'development' || isStaticGeneration) {\n    const { isValidElementType } =\n      require('next/dist/compiled/react-is') as typeof import('next/dist/compiled/react-is')\n    if (\n      typeof MaybeComponent !== 'undefined' &&\n      !isValidElementType(MaybeComponent)\n    ) {\n      errorMissingDefaultExport(pagePath, modType ?? 'page')\n    }\n\n    if (\n      typeof ErrorComponent !== 'undefined' &&\n      !isValidElementType(ErrorComponent)\n    ) {\n      errorMissingDefaultExport(pagePath, 'error')\n    }\n\n    if (typeof Loading !== 'undefined' && !isValidElementType(Loading)) {\n      errorMissingDefaultExport(pagePath, 'loading')\n    }\n\n    if (typeof NotFound !== 'undefined' && !isValidElementType(NotFound)) {\n      errorMissingDefaultExport(pagePath, 'not-found')\n    }\n\n    if (typeof Forbidden !== 'undefined' && !isValidElementType(Forbidden)) {\n      errorMissingDefaultExport(pagePath, 'forbidden')\n    }\n\n    if (\n      typeof Unauthorized !== 'undefined' &&\n      !isValidElementType(Unauthorized)\n    ) {\n      errorMissingDefaultExport(pagePath, 'unauthorized')\n    }\n  }\n\n  // Handle dynamic segment params.\n  const segmentParam = getDynamicParamFromSegment(segment)\n\n  // Create object holding the parent params and current params\n  let currentParams: Params = parentParams\n  if (segmentParam && segmentParam.value !== null) {\n    currentParams = {\n      ...parentParams,\n      [segmentParam.param]: segmentParam.value,\n    }\n  }\n\n  // Resolve the segment param\n  const isSegmentViewEnabled = !!ctx.renderOpts.dev\n  const dir =\n    (process.env.NEXT_RUNTIME === 'edge'\n      ? process.env.__NEXT_EDGE_PROJECT_DIR\n      : ctx.renderOpts.dir) || ''\n\n  const [notFoundElement, notFoundFilePath] =\n    await createBoundaryConventionElement({\n      ctx,\n      conventionName: 'not-found',\n      Component: NotFound,\n      styles: notFoundStyles,\n      tree,\n    })\n\n  const [forbiddenElement] = await createBoundaryConventionElement({\n    ctx,\n    conventionName: 'forbidden',\n    Component: Forbidden,\n    styles: forbiddenStyles,\n    tree,\n  })\n\n  const [unauthorizedElement] = await createBoundaryConventionElement({\n    ctx,\n    conventionName: 'unauthorized',\n    Component: Unauthorized,\n    styles: unauthorizedStyles,\n    tree,\n  })\n\n  // TODO: Combine this `map` traversal with the loop below that turns the array\n  // into an object.\n  const parallelRouteMap = await Promise.all(\n    Object.keys(parallelRoutes).map(\n      async (\n        parallelRouteKey\n      ): Promise<[string, React.ReactNode, CacheNodeSeedData | null]> => {\n        const isChildrenRouteKey = parallelRouteKey === 'children'\n        const parallelRoute = parallelRoutes[parallelRouteKey]\n\n        const notFoundComponent = isChildrenRouteKey\n          ? notFoundElement\n          : undefined\n\n        const forbiddenComponent = isChildrenRouteKey\n          ? forbiddenElement\n          : undefined\n\n        const unauthorizedComponent = isChildrenRouteKey\n          ? unauthorizedElement\n          : undefined\n\n        // if we're prefetching and that there's a Loading component, we bail out\n        // otherwise we keep rendering for the prefetch.\n        // We also want to bail out if there's no Loading component in the tree.\n        let childCacheNodeSeedData: CacheNodeSeedData | null = null\n\n        if (\n          // Before PPR, the way instant navigations work in Next.js is we\n          // prefetch everything up to the first route segment that defines a\n          // loading.tsx boundary. (We do the same if there's no loading\n          // boundary in the entire tree, because we don't want to prefetch too\n          // much) The rest of the tree is deferred until the actual navigation.\n          // It does not take into account whether the data is dynamic — even if\n          // the tree is completely static, it will still defer everything\n          // inside the loading boundary.\n          //\n          // This behavior predates PPR and is only relevant if the\n          // PPR flag is not enabled.\n          isPrefetch &&\n          (Loading || !hasLoadingComponentInTree(parallelRoute)) &&\n          // The approach with PPR is different — loading.tsx behaves like a\n          // regular Suspense boundary and has no special behavior.\n          //\n          // With PPR, we prefetch as deeply as possible, and only defer when\n          // dynamic data is accessed. If so, we only defer the nearest parent\n          // Suspense boundary of the dynamic data access, regardless of whether\n          // the boundary is defined by loading.tsx or a normal <Suspense>\n          // component in userspace.\n          //\n          // NOTE: In practice this usually means we'll end up prefetching more\n          // than we were before PPR, which may or may not be considered a\n          // performance regression by some apps. The plan is to address this\n          // before General Availability of PPR by introducing granular\n          // per-segment fetching, so we can reuse as much of the tree as\n          // possible during both prefetches and dynamic navigations. But during\n          // the beta period, we should be clear about this trade off in our\n          // communications.\n          !experimental.isRoutePPREnabled\n        ) {\n          // Don't prefetch this child. This will trigger a lazy fetch by the\n          // client router.\n        } else {\n          // Create the child component\n\n          if (process.env.NODE_ENV === 'development' && missingSlots) {\n            // When we detect the default fallback (which triggers a 404), we collect the missing slots\n            // to provide more helpful debug information during development mode.\n            const parsedTree = parseLoaderTree(parallelRoute)\n            if (\n              parsedTree.conventionPath?.endsWith(PARALLEL_ROUTE_DEFAULT_PATH)\n            ) {\n              missingSlots.add(parallelRouteKey)\n            }\n          }\n\n          const seedData = await createComponentTreeInternal(\n            {\n              loaderTree: parallelRoute,\n              parentParams: currentParams,\n              rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n              injectedCSS: injectedCSSWithCurrentLayout,\n              injectedJS: injectedJSWithCurrentLayout,\n              injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n              ctx,\n              missingSlots,\n              preloadCallbacks,\n              authInterrupts,\n              // `StreamingMetadataOutlet` is used to conditionally throw. In the case of parallel routes we will have more than one page\n              // but we only want to throw on the first one.\n              MetadataOutlet: isChildrenRouteKey ? MetadataOutlet : null,\n            },\n            false\n          )\n\n          childCacheNodeSeedData = seedData\n        }\n\n        const templateNode = createElement(\n          Template,\n          null,\n          createElement(RenderFromTemplateContext, null)\n        )\n\n        const templateFilePath = getConventionPathByType(tree, dir, 'template')\n        const errorFilePath = getConventionPathByType(tree, dir, 'error')\n        const loadingFilePath = getConventionPathByType(tree, dir, 'loading')\n        const globalErrorFilePath = isRoot\n          ? getConventionPathByType(tree, dir, 'global-error')\n          : undefined\n\n        const wrappedErrorStyles =\n          isSegmentViewEnabled && errorFilePath\n            ? createElement(\n                SegmentViewNode,\n                {\n                  type: 'error',\n                  pagePath: errorFilePath,\n                },\n                errorStyles\n              )\n            : errorStyles\n\n        // Add a suffix to avoid conflict with the segment view node representing rendered file.\n        // existence: not-found.tsx@boundary\n        // rendered: not-found.tsx\n        const fileNameSuffix = BOUNDARY_SUFFIX\n        const segmentViewBoundaries = isSegmentViewEnabled\n          ? createElement(\n              Fragment,\n              null,\n              notFoundFilePath &&\n                createElement(SegmentViewNode, {\n                  type: `${BOUNDARY_PREFIX}not-found`,\n                  pagePath: notFoundFilePath + fileNameSuffix,\n                }),\n              loadingFilePath &&\n                createElement(SegmentViewNode, {\n                  type: `${BOUNDARY_PREFIX}loading`,\n                  pagePath: loadingFilePath + fileNameSuffix,\n                }),\n              errorFilePath &&\n                createElement(SegmentViewNode, {\n                  type: `${BOUNDARY_PREFIX}error`,\n                  pagePath: errorFilePath + fileNameSuffix,\n                }),\n              globalErrorFilePath &&\n                createElement(SegmentViewNode, {\n                  type: `${BOUNDARY_PREFIX}global-error`,\n                  pagePath: isNextjsBuiltinFilePath(globalErrorFilePath)\n                    ? `${BUILTIN_PREFIX}global-error.js${fileNameSuffix}`\n                    : globalErrorFilePath,\n                })\n            )\n          : null\n\n        return [\n          parallelRouteKey,\n          createElement(LayoutRouter, {\n            parallelRouterKey: parallelRouteKey,\n            error: ErrorComponent,\n            errorStyles: wrappedErrorStyles,\n            errorScripts: errorScripts,\n            template:\n              isSegmentViewEnabled && templateFilePath\n                ? createElement(\n                    SegmentViewNode,\n                    {\n                      type: 'template',\n                      pagePath: templateFilePath,\n                    },\n                    templateNode\n                  )\n                : templateNode,\n            templateStyles: templateStyles,\n            templateScripts: templateScripts,\n            notFound: notFoundComponent,\n            forbidden: forbiddenComponent,\n            unauthorized: unauthorizedComponent,\n            ...(isSegmentViewEnabled && {\n              segmentViewBoundaries,\n            }),\n          }),\n          childCacheNodeSeedData,\n        ]\n      }\n    )\n  )\n\n  // Convert the parallel route map into an object after all promises have been resolved.\n  let parallelRouteProps: { [key: string]: React.ReactNode } = {}\n  let parallelRouteCacheNodeSeedData: {\n    [key: string]: CacheNodeSeedData | null\n  } = {}\n  for (const parallelRoute of parallelRouteMap) {\n    const [parallelRouteKey, parallelRouteProp, flightData] = parallelRoute\n    parallelRouteProps[parallelRouteKey] = parallelRouteProp\n    parallelRouteCacheNodeSeedData[parallelRouteKey] = flightData\n  }\n\n  let loadingElement = Loading\n    ? createElement(Loading, {\n        key: 'l',\n      })\n    : null\n  const loadingFilePath = getConventionPathByType(tree, dir, 'loading')\n  if (isSegmentViewEnabled && loadingElement) {\n    if (loadingFilePath) {\n      loadingElement = createElement(\n        SegmentViewNode,\n        {\n          key: cacheNodeKey + '-loading',\n          type: 'loading',\n          pagePath: loadingFilePath,\n        },\n        loadingElement\n      )\n    }\n  }\n\n  const loadingData: LoadingModuleData = loadingElement\n    ? [loadingElement, loadingStyles, loadingScripts]\n    : null\n\n  // When the segment does not have a layout or page we still have to add the layout router to ensure the path holds the loading component\n  if (!MaybeComponent) {\n    return [\n      createElement(\n        Fragment,\n        {\n          key: cacheNodeKey,\n        },\n        layerAssets,\n        parallelRouteProps.children\n      ),\n      parallelRouteCacheNodeSeedData,\n      loadingData,\n      isPossiblyPartialResponse,\n      hasRuntimePrefetch,\n    ]\n  }\n\n  const Component = MaybeComponent\n  // If force-dynamic is used and the current render supports postponing, we\n  // replace it with a node that will postpone the render. This ensures that the\n  // postpone is invoked during the react render phase and not during the next\n  // render phase.\n  // @TODO this does not actually do what it seems like it would or should do. The idea is that\n  // if we are rendering in a force-dynamic mode and we can postpone we should only make the segments\n  // that ask for force-dynamic to be dynamic, allowing other segments to still prerender. However\n  // because this comes after the children traversal and the static generation store is mutated every segment\n  // along the parent path of a force-dynamic segment will hit this condition effectively making the entire\n  // render force-dynamic. We should refactor this function so that we can correctly track which segments\n  // need to be dynamic\n  if (\n    workStore.isStaticGeneration &&\n    workStore.forceDynamic &&\n    experimental.isRoutePPREnabled\n  ) {\n    return [\n      createElement(\n        Fragment,\n        {\n          key: cacheNodeKey,\n        },\n        createElement(Postpone, {\n          reason: 'dynamic = \"force-dynamic\" was used',\n          route: workStore.route,\n        }),\n        layerAssets\n      ),\n      parallelRouteCacheNodeSeedData,\n      loadingData,\n      true,\n      hasRuntimePrefetch,\n    ]\n  }\n\n  const isClientComponent = isClientReference(layoutOrPageMod)\n\n  if (\n    process.env.NODE_ENV === 'development' &&\n    'params' in parallelRouteProps\n  ) {\n    // @TODO consider making this an error and running the check in build as well\n    console.error(\n      `\"params\" is a reserved prop in Layouts and Pages and cannot be used as the name of a parallel route in ${segment}`\n    )\n  }\n\n  if (isPage) {\n    const PageComponent = Component\n\n    // Assign searchParams to props if this is a page\n    let pageElement: React.ReactNode\n    if (isClientComponent) {\n      if (cacheComponents) {\n        // Params are omitted when Cache Components is enabled\n        pageElement = createElement(ClientPageRoot, {\n          Component: PageComponent,\n          serverProvidedParams: null,\n        })\n      } else if (isStaticGeneration) {\n        const promiseOfParams =\n          createPrerenderParamsForClientSegment(currentParams)\n        const promiseOfSearchParams =\n          createPrerenderSearchParamsForClientPage(workStore)\n        pageElement = createElement(ClientPageRoot, {\n          Component: PageComponent,\n          serverProvidedParams: {\n            searchParams: query,\n            params: currentParams,\n            promises: [promiseOfSearchParams, promiseOfParams],\n          },\n        })\n      } else {\n        pageElement = createElement(ClientPageRoot, {\n          Component: PageComponent,\n          serverProvidedParams: {\n            searchParams: query,\n            params: currentParams,\n            promises: null,\n          },\n        })\n      }\n    } else {\n      // If we are passing params to a server component Page we need to track\n      // their usage in case the current render mode tracks dynamic API usage.\n      const params = createServerParamsForServerSegment(\n        currentParams,\n        workStore\n      )\n\n      // If we are passing searchParams to a server component Page we need to\n      // track their usage in case the current render mode tracks dynamic API\n      // usage.\n      let searchParams = createServerSearchParamsForServerPage(query, workStore)\n\n      if (isUseCacheFunction(PageComponent)) {\n        const UseCachePageComponent: ComponentType<UseCachePageProps> =\n          PageComponent\n\n        pageElement = createElement(UseCachePageComponent, {\n          params: params,\n          searchParams: searchParams,\n          $$isPage: true,\n        })\n      } else {\n        pageElement = createElement(PageComponent, {\n          params: params,\n          searchParams: searchParams,\n        })\n      }\n    }\n\n    const isDefaultSegment = segment === DEFAULT_SEGMENT_KEY\n    const pageFilePath =\n      getConventionPathByType(tree, dir, 'page') ??\n      getConventionPathByType(tree, dir, 'defaultPage')\n    const segmentType = isDefaultSegment ? 'default' : 'page'\n    const wrappedPageElement =\n      isSegmentViewEnabled && pageFilePath\n        ? createElement(\n            SegmentViewNode,\n            {\n              key: cacheNodeKey + '-' + segmentType,\n              type: segmentType,\n              pagePath: pageFilePath,\n            },\n            pageElement\n          )\n        : pageElement\n\n    return [\n      createElement(\n        Fragment,\n        {\n          key: cacheNodeKey,\n        },\n        wrappedPageElement,\n        layerAssets,\n        MetadataOutlet ? createElement(MetadataOutlet, null) : null\n      ),\n      parallelRouteCacheNodeSeedData,\n      loadingData,\n      isPossiblyPartialResponse,\n      hasRuntimePrefetch,\n    ]\n  } else {\n    const SegmentComponent = Component\n    const isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot =\n      rootLayoutAtThisLevel &&\n      'children' in parallelRoutes &&\n      Object.keys(parallelRoutes).length > 1\n\n    let segmentNode: React.ReactNode\n\n    if (isClientComponent) {\n      let clientSegment: React.ReactNode\n      if (cacheComponents) {\n        // Params are omitted when Cache Components is enabled\n        clientSegment = createElement(ClientSegmentRoot, {\n          Component: SegmentComponent,\n          slots: parallelRouteProps,\n          serverProvidedParams: null,\n        })\n      } else if (isStaticGeneration) {\n        const promiseOfParams =\n          createPrerenderParamsForClientSegment(currentParams)\n\n        clientSegment = createElement(ClientSegmentRoot, {\n          Component: SegmentComponent,\n          slots: parallelRouteProps,\n          serverProvidedParams: {\n            params: currentParams,\n            promises: [promiseOfParams],\n          },\n        })\n      } else {\n        clientSegment = createElement(ClientSegmentRoot, {\n          Component: SegmentComponent,\n          slots: parallelRouteProps,\n          serverProvidedParams: {\n            params: currentParams,\n            promises: null,\n          },\n        })\n      }\n\n      if (isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot) {\n        let notfoundClientSegment: React.ReactNode\n        let forbiddenClientSegment: React.ReactNode\n        let unauthorizedClientSegment: React.ReactNode\n        // TODO-APP: This is a hack to support unmatched parallel routes, which will throw `notFound()`.\n        // This ensures that a `HTTPAccessFallbackBoundary` is available for when that happens,\n        // but it's not ideal, as it needlessly invokes the `NotFound` component and renders the `RootLayout` twice.\n        // We should instead look into handling the fallback behavior differently in development mode so that it doesn't\n        // rely on the `NotFound` behavior.\n        notfoundClientSegment = createErrorBoundaryClientSegmentRoot({\n          ctx,\n          ErrorBoundaryComponent: NotFound,\n          errorElement: notFoundElement,\n          ClientSegmentRoot,\n          layerAssets,\n          SegmentComponent,\n          currentParams,\n        })\n        forbiddenClientSegment = createErrorBoundaryClientSegmentRoot({\n          ctx,\n          ErrorBoundaryComponent: Forbidden,\n          errorElement: forbiddenElement,\n          ClientSegmentRoot,\n          layerAssets,\n          SegmentComponent,\n          currentParams,\n        })\n        unauthorizedClientSegment = createErrorBoundaryClientSegmentRoot({\n          ctx,\n          ErrorBoundaryComponent: Unauthorized,\n          errorElement: unauthorizedElement,\n          ClientSegmentRoot,\n          layerAssets,\n          SegmentComponent,\n          currentParams,\n        })\n        if (\n          notfoundClientSegment ||\n          forbiddenClientSegment ||\n          unauthorizedClientSegment\n        ) {\n          segmentNode = createElement(\n            HTTPAccessFallbackBoundary,\n            {\n              key: cacheNodeKey,\n              notFound: notfoundClientSegment,\n              forbidden: forbiddenClientSegment,\n              unauthorized: unauthorizedClientSegment,\n            },\n            layerAssets,\n            clientSegment\n          )\n        } else {\n          segmentNode = createElement(\n            Fragment,\n            {\n              key: cacheNodeKey,\n            },\n            layerAssets,\n            clientSegment\n          )\n        }\n      } else {\n        segmentNode = createElement(\n          Fragment,\n          {\n            key: cacheNodeKey,\n          },\n          layerAssets,\n          clientSegment\n        )\n      }\n    } else {\n      const params = createServerParamsForServerSegment(\n        currentParams,\n        workStore\n      )\n\n      let serverSegment: React.ReactNode\n\n      if (isUseCacheFunction(SegmentComponent)) {\n        const UseCacheLayoutComponent: ComponentType<UseCacheLayoutProps> =\n          SegmentComponent\n\n        serverSegment = createElement(\n          UseCacheLayoutComponent,\n          {\n            ...parallelRouteProps,\n            params: params,\n            $$isLayout: true,\n          },\n          // Force static children here so that they're validated.\n          // See https://github.com/facebook/react/pull/34846\n          parallelRouteProps.children\n        )\n      } else {\n        serverSegment = createElement(\n          SegmentComponent,\n          {\n            ...parallelRouteProps,\n            params: params,\n          },\n          // Force static children here so that they're validated.\n          // See https://github.com/facebook/react/pull/34846\n          parallelRouteProps.children\n        )\n      }\n\n      if (isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot) {\n        // TODO-APP: This is a hack to support unmatched parallel routes, which will throw `notFound()`.\n        // This ensures that a `HTTPAccessFallbackBoundary` is available for when that happens,\n        // but it's not ideal, as it needlessly invokes the `NotFound` component and renders the `RootLayout` twice.\n        // We should instead look into handling the fallback behavior differently in development mode so that it doesn't\n        // rely on the `NotFound` behavior.\n        segmentNode = createElement(\n          HTTPAccessFallbackBoundary,\n          {\n            key: cacheNodeKey,\n            notFound: notFoundElement\n              ? createElement(\n                  Fragment,\n                  null,\n                  layerAssets,\n                  createElement(\n                    SegmentComponent,\n                    {\n                      params: params,\n                    },\n                    notFoundStyles,\n                    notFoundElement\n                  )\n                )\n              : undefined,\n          },\n          layerAssets,\n          serverSegment\n        )\n      } else {\n        segmentNode = createElement(\n          Fragment,\n          {\n            key: cacheNodeKey,\n          },\n          layerAssets,\n          serverSegment\n        )\n      }\n    }\n\n    const layoutFilePath = getConventionPathByType(tree, dir, 'layout')\n    const wrappedSegmentNode =\n      isSegmentViewEnabled && layoutFilePath\n        ? createElement(\n            SegmentViewNode,\n            {\n              key: 'layout',\n              type: 'layout',\n              pagePath: layoutFilePath,\n            },\n            segmentNode\n          )\n        : segmentNode\n\n    // For layouts we just render the component\n    return [\n      wrappedSegmentNode,\n      parallelRouteCacheNodeSeedData,\n      loadingData,\n      isPossiblyPartialResponse,\n      hasRuntimePrefetch,\n    ]\n  }\n}\n\nfunction createErrorBoundaryClientSegmentRoot({\n  ctx,\n  ErrorBoundaryComponent,\n  errorElement,\n  ClientSegmentRoot,\n  layerAssets,\n  SegmentComponent,\n  currentParams,\n}: {\n  ctx: AppRenderContext\n  ErrorBoundaryComponent: ComponentType<any> | undefined\n  errorElement: React.ReactNode\n  ClientSegmentRoot: ComponentType<any>\n  layerAssets: React.ReactNode\n  SegmentComponent: ComponentType<any>\n  currentParams: Params\n}) {\n  const {\n    componentMod: { createElement, Fragment },\n  } = ctx\n  if (ErrorBoundaryComponent) {\n    const notFoundParallelRouteProps = {\n      children: errorElement,\n    }\n    return createElement(\n      Fragment,\n      null,\n      layerAssets,\n      createElement(ClientSegmentRoot, {\n        Component: SegmentComponent,\n        slots: notFoundParallelRouteProps,\n        params: currentParams,\n      })\n    )\n  }\n  return null\n}\n\nexport function getRootParams(\n  loaderTree: LoaderTree,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment\n): Params {\n  return getRootParamsImpl({}, loaderTree, getDynamicParamFromSegment)\n}\n\nfunction getRootParamsImpl(\n  parentParams: Params,\n  loaderTree: LoaderTree,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment\n): Params {\n  const {\n    segment,\n    modules: { layout },\n    parallelRoutes,\n  } = parseLoaderTree(loaderTree)\n\n  const segmentParam = getDynamicParamFromSegment(segment)\n\n  let currentParams: Params = parentParams\n  if (segmentParam && segmentParam.value !== null) {\n    currentParams = {\n      ...parentParams,\n      [segmentParam.param]: segmentParam.value,\n    }\n  }\n\n  const isRootLayout = typeof layout !== 'undefined'\n\n  if (isRootLayout) {\n    return currentParams\n  } else if (!parallelRoutes.children) {\n    // This should really be an error but there are bugs in Turbopack that cause\n    // the _not-found LoaderTree to not have any layouts. For rootParams sake\n    // this is somewhat irrelevant when you are not customizing the 404 page.\n    // If you are customizing 404\n    // TODO update rootParams to make all params optional if `/app/not-found.tsx` is defined\n    return currentParams\n  } else {\n    return getRootParamsImpl(\n      currentParams,\n      // We stop looking for root params as soon as we hit the first layout\n      // and it is not possible to use parallel route children above the root layout\n      // so every parallelRoutes object that this function can visit will necessarily\n      // have a single `children` prop and no others.\n      parallelRoutes.children,\n      getDynamicParamFromSegment\n    )\n  }\n}\n\nasync function createBoundaryConventionElement({\n  ctx,\n  conventionName,\n  Component,\n  styles,\n  tree,\n}: {\n  ctx: AppRenderContext\n  conventionName:\n    | 'not-found'\n    | 'error'\n    | 'loading'\n    | 'forbidden'\n    | 'unauthorized'\n  Component: ComponentType<any> | undefined\n  styles: React.ReactNode | undefined\n  tree: LoaderTree\n}) {\n  const {\n    componentMod: { createElement, Fragment },\n  } = ctx\n  const isSegmentViewEnabled = !!ctx.renderOpts.dev\n  const dir =\n    (process.env.NEXT_RUNTIME === 'edge'\n      ? process.env.__NEXT_EDGE_PROJECT_DIR\n      : ctx.renderOpts.dir) || ''\n  const { SegmentViewNode } = ctx.componentMod\n  const element = Component\n    ? createElement(Fragment, null, createElement(Component, null), styles)\n    : undefined\n\n  const pagePath = getConventionPathByType(tree, dir, conventionName)\n\n  const wrappedElement =\n    isSegmentViewEnabled && element\n      ? createElement(\n          SegmentViewNode,\n          {\n            key: cacheNodeKey + '-' + conventionName,\n            type: conventionName,\n            // TODO: Discovered when moving to `createElement`.\n            // `SegmentViewNode` doesn't support undefined `pagePath`\n            pagePath: pagePath!,\n          },\n          element\n        )\n      : element\n\n  return [wrappedElement, pagePath] as const\n}\n"],"names":["createComponentTree","getRootParams","props","getTracer","trace","NextNodeServerSpan","spanName","createComponentTreeInternal","errorMissingDefaultExport","pagePath","convention","normalizedPagePath","Error","cacheNodeKey","loaderTree","tree","parentParams","rootLayoutIncluded","injectedCSS","injectedJS","injectedFontPreloadTags","ctx","missingSlots","preloadCallbacks","authInterrupts","MetadataOutlet","isRoot","renderOpts","nextConfigOutput","experimental","cacheComponents","workStore","componentMod","createElement","Fragment","SegmentViewNode","HTTPAccessFallbackBoundary","LayoutRouter","RenderFromTemplateContext","ClientPageRoot","ClientSegmentRoot","createServerSearchParamsForServerPage","createPrerenderSearchParamsForClientPage","createServerParamsForServerSegment","createPrerenderParamsForClientSegment","serverHooks","DynamicServerError","Postpone","getDynamicParamFromSegment","isPrefetch","query","page","conventionPath","segment","modules","parallelRoutes","parseLoaderTree","layout","template","error","loading","notFound","forbidden","unauthorized","injectedCSSWithCurrentLayout","Set","injectedJSWithCurrentLayout","injectedFontPreloadTagsWithCurrentLayout","layerAssets","getLayerAssets","layoutOrPagePath","Template","templateStyles","templateScripts","createComponentStylesAndScripts","filePath","getComponent","ErrorComponent","errorStyles","errorScripts","Loading","loadingStyles","loadingScripts","isLayout","isPage","mod","layoutOrPageMod","modType","getLayoutOrPageModule","hideSpan","attributes","rootLayoutAtThisLevel","rootLayoutIncludedAtThisLevelOrAbove","NotFound","notFoundStyles","prefetchConfig","unstable_prefetch","undefined","hasRuntimePrefetch","mode","Forbidden","forbiddenStyles","Unauthorized","unauthorizedStyles","dynamic","StaticGenBailoutError","dynamicShouldError","forceDynamic","isStaticGeneration","isRoutePPREnabled","err","dynamicUsageDescription","message","dynamicUsageStack","stack","forceStatic","fetchCache","revalidate","validateRevalidate","route","defaultRevalidate","workUnitStore","workUnitAsyncStorage","getStore","type","isPossiblyPartialResponse","LayoutOrPage","interopDefault","MaybeComponent","process","env","NODE_ENV","isValidElementType","require","segmentParam","currentParams","value","param","isSegmentViewEnabled","dev","dir","NEXT_RUNTIME","__NEXT_EDGE_PROJECT_DIR","notFoundElement","notFoundFilePath","createBoundaryConventionElement","conventionName","Component","styles","forbiddenElement","unauthorizedElement","parallelRouteMap","Promise","all","Object","keys","map","parallelRouteKey","isChildrenRouteKey","parallelRoute","notFoundComponent","forbiddenComponent","unauthorizedComponent","childCacheNodeSeedData","hasLoadingComponentInTree","parsedTree","endsWith","PARALLEL_ROUTE_DEFAULT_PATH","add","seedData","templateNode","templateFilePath","getConventionPathByType","errorFilePath","loadingFilePath","globalErrorFilePath","wrappedErrorStyles","fileNameSuffix","BOUNDARY_SUFFIX","segmentViewBoundaries","BOUNDARY_PREFIX","isNextjsBuiltinFilePath","BUILTIN_PREFIX","parallelRouterKey","parallelRouteProps","parallelRouteCacheNodeSeedData","parallelRouteProp","flightData","loadingElement","key","loadingData","children","reason","isClientComponent","isClientReference","console","PageComponent","pageElement","serverProvidedParams","promiseOfParams","promiseOfSearchParams","searchParams","params","promises","isUseCacheFunction","UseCachePageComponent","$$isPage","isDefaultSegment","DEFAULT_SEGMENT_KEY","pageFilePath","segmentType","wrappedPageElement","SegmentComponent","isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot","length","segmentNode","clientSegment","slots","notfoundClientSegment","forbiddenClientSegment","unauthorizedClientSegment","createErrorBoundaryClientSegmentRoot","ErrorBoundaryComponent","errorElement","serverSegment","UseCacheLayoutComponent","$$isLayout","layoutFilePath","wrappedSegmentNode","notFoundParallelRouteProps","getRootParamsImpl","isRootLayout","element","wrappedElement"],"mappings":"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","ignoreList":[0]}