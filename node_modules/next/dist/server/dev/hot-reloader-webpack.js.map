{"version":3,"sources":["../../../src/server/dev/hot-reloader-webpack.ts"],"sourcesContent":["import type { NextConfigComplete } from '../config-shared'\nimport type { CustomRoutes } from '../../lib/load-custom-routes'\nimport type { Duplex } from 'stream'\nimport type { Telemetry } from '../../telemetry/storage'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { UrlObject } from 'url'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\n\nimport { type webpack, StringXor } from 'next/dist/compiled/webpack/webpack'\nimport {\n  getOverlayMiddleware,\n  getSourceMapMiddleware,\n  getOriginalStackFrames,\n} from './middleware-webpack'\nimport { WebpackHotMiddleware } from './hot-middleware'\nimport { join, relative, isAbsolute, posix, dirname } from 'path'\nimport {\n  createEntrypoints,\n  createPagesMapping,\n  finalizeEntrypoint,\n  getClientEntry,\n  getEdgeServerEntry,\n  getAppEntry,\n  runDependingOnPageType,\n  getInstrumentationEntry,\n} from '../../build/entries'\nimport { getStaticInfoIncludingLayouts } from '../../build/get-static-info-including-layouts'\nimport { watchCompilers } from '../../build/output'\nimport * as Log from '../../build/output/log'\nimport getBaseWebpackConfig, {\n  getCacheDirectories,\n  loadProjectInfo,\n} from '../../build/webpack-config'\nimport { APP_DIR_ALIAS, WEBPACK_LAYERS } from '../../lib/constants'\nimport { recursiveDeleteSyncWithAsyncRetries } from '../../lib/recursive-delete'\nimport {\n  BLOCKED_PAGES,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  COMPILER_NAMES,\n  RSC_MODULE_TYPES,\n} from '../../shared/lib/constants'\nimport type { __ApiPreviewProps } from '../api-utils'\nimport { findPageFile } from '../lib/find-page-file'\nimport {\n  BUILDING,\n  getEntries,\n  EntryTypes,\n  getInvalidator,\n  onDemandEntryHandler,\n} from './on-demand-entry-handler'\nimport { denormalizePagePath } from '../../shared/lib/page-path/denormalize-page-path'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport getRouteFromEntrypoint from '../get-route-from-entrypoint'\nimport {\n  difference,\n  isInstrumentationHookFile,\n  isMiddlewareFile,\n  isMiddlewareFilename,\n} from '../../build/utils'\nimport { DecodeError } from '../../shared/lib/utils'\nimport { type Span, trace } from '../../trace'\nimport { getProperError } from '../../lib/is-error'\nimport ws from 'next/dist/compiled/ws'\nimport { existsSync, promises as fs } from 'fs'\nimport type { UnwrapPromise } from '../../lib/coalesced-function'\nimport type { VersionInfo } from './parse-version-info'\nimport { isAPIRoute } from '../../lib/is-api-route'\nimport { getRouteLoaderEntry } from '../../build/webpack/loaders/next-route-loader'\nimport {\n  isInternalComponent,\n  isNonRoutePagesPage,\n} from '../../lib/is-internal-component'\nimport { RouteKind } from '../route-kind'\nimport {\n  HMR_MESSAGE_SENT_TO_BROWSER,\n  type NextJsHotReloaderInterface,\n} from './hot-reloader-types'\nimport type { HmrMessageSentToBrowser } from './hot-reloader-types'\nimport type { WebpackError } from 'webpack'\nimport { PAGE_TYPES } from '../../lib/page-types'\nimport { FAST_REFRESH_RUNTIME_RELOAD } from './messages'\nimport { getNodeDebugType } from '../lib/utils'\nimport { getNextErrorFeedbackMiddleware } from '../../next-devtools/server/get-next-error-feedback-middleware'\nimport { getDevOverlayFontMiddleware } from '../../next-devtools/server/font/get-dev-overlay-font-middleware'\nimport { getDisableDevIndicatorMiddleware } from '../../next-devtools/server/dev-indicator-middleware'\nimport getWebpackBundler from '../../shared/lib/get-webpack-bundler'\nimport { getRestartDevServerMiddleware } from '../../next-devtools/server/restart-dev-server-middleware'\nimport { checkFileSystemCacheInvalidationAndCleanup } from '../../build/webpack/cache-invalidation'\nimport {\n  receiveBrowserLogsWebpack,\n  handleClientFileLogs,\n} from './browser-logs/receive-logs'\nimport {\n  devToolsConfigMiddleware,\n  getDevToolsConfig,\n} from '../../next-devtools/server/devtools-config-middleware'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport {\n  connectReactDebugChannel,\n  deleteReactDebugChannel,\n  setReactDebugChannel,\n  type ReactDebugChannelForBrowser,\n} from './debug-channel'\nimport {\n  getVersionInfo,\n  matchNextPageBundleRequest,\n} from './hot-reloader-shared-utils'\nimport { getMcpMiddleware } from '../mcp/get-mcp-middleware'\nimport { setStackFrameResolver } from '../mcp/tools/utils/format-errors'\nimport { recordMcpTelemetry } from '../mcp/mcp-telemetry-tracker'\nimport { getFileLogger } from './browser-logs/file-logger'\nimport type { ServerCacheStatus } from '../../next-devtools/dev-overlay/cache-indicator'\nimport type { Lockfile } from '../../build/lockfile'\n\nconst MILLISECONDS_IN_NANOSECOND = BigInt(1_000_000)\n\nfunction diff(a: Set<any>, b: Set<any>) {\n  return new Set([...a].filter((v) => !b.has(v)))\n}\n\nconst wsServer = new ws.Server({ noServer: true })\n\nexport async function renderScriptError(\n  res: ServerResponse,\n  error: Error,\n  { verbose = true } = {}\n): Promise<{ finished: true | undefined }> {\n  // Asks CDNs and others to not to cache the errored page\n  res.setHeader(\n    'Cache-Control',\n    'no-cache, no-store, max-age=0, must-revalidate'\n  )\n\n  if ((error as any).code === 'ENOENT') {\n    return { finished: undefined }\n  }\n\n  if (verbose) {\n    console.error(error.stack)\n  }\n  res.statusCode = 500\n  res.end('500 - Internal Error')\n  return { finished: true }\n}\n\nfunction addCorsSupport(req: IncomingMessage, res: ServerResponse) {\n  // Only rewrite CORS handling when URL matches a hot-reloader middleware\n  if (!req.url!.startsWith('/__next')) {\n    return { preflight: false }\n  }\n\n  if (!req.headers.origin) {\n    return { preflight: false }\n  }\n\n  res.setHeader('Access-Control-Allow-Origin', req.headers.origin)\n  res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET')\n  // Based on https://github.com/primus/access-control/blob/4cf1bc0e54b086c91e6aa44fb14966fa5ef7549c/index.js#L158\n  if (req.headers['access-control-request-headers']) {\n    res.setHeader(\n      'Access-Control-Allow-Headers',\n      req.headers['access-control-request-headers'] as string\n    )\n  }\n\n  if (req.method === 'OPTIONS') {\n    res.writeHead(200)\n    res.end()\n    return { preflight: true }\n  }\n\n  return { preflight: false }\n}\n\n// Iteratively look up the issuer till it ends up at the root\nfunction findEntryModule(\n  module: webpack.Module,\n  compilation: webpack.Compilation\n): any {\n  for (;;) {\n    const issuer = compilation.moduleGraph.getIssuer(module)\n    if (!issuer) return module\n    module = issuer\n  }\n}\n\nfunction erroredPages(compilation: webpack.Compilation) {\n  const failedPages: { [page: string]: WebpackError[] } = {}\n  for (const error of compilation.errors) {\n    if (!error.module) {\n      continue\n    }\n\n    const entryModule = findEntryModule(error.module, compilation)\n    const { name } = entryModule\n    if (!name) {\n      continue\n    }\n\n    // Only pages have to be reloaded\n    const enhancedName = getRouteFromEntrypoint(name)\n\n    if (!enhancedName) {\n      continue\n    }\n\n    if (!failedPages[enhancedName]) {\n      failedPages[enhancedName] = []\n    }\n\n    failedPages[enhancedName].push(error)\n  }\n\n  return failedPages\n}\n\nexport default class HotReloaderWebpack implements NextJsHotReloaderInterface {\n  private hasAppRouterEntrypoints: boolean\n  private hasPagesRouterEntrypoints: boolean\n  private dir: string\n  private buildId: string\n  private encryptionKey: string\n  private middlewares: ((\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: () => void\n  ) => Promise<void>)[]\n  private pagesDir?: string\n  private distDir: string\n  private webpackHotMiddleware?: WebpackHotMiddleware\n  private config: NextConfigComplete\n  private clientStats: webpack.Stats | null\n  private clientError: Error | null = null\n  private serverError: Error | null = null\n  private hmrServerError: Error | null = null\n  private serverPrevDocumentHash: string | null\n  private serverChunkNames?: Set<string>\n  private prevChunkNames?: Set<any>\n  private onDemandEntries?: ReturnType<typeof onDemandEntryHandler>\n  private previewProps: __ApiPreviewProps\n  private watcher: any\n  private rewrites: CustomRoutes['rewrites']\n  private fallbackWatcher: any\n  private hotReloaderSpan: Span\n  private pagesMapping: { [key: string]: string } = {}\n  private appDir?: string\n  private telemetry: Telemetry\n  private resetFetch: () => void\n  private lockfile: Lockfile | undefined\n  private versionInfo: VersionInfo = {\n    staleness: 'unknown',\n    installed: '0.0.0',\n  }\n  private devtoolsFrontendUrl: string | undefined\n  private reloadAfterInvalidation: boolean = false\n  private isSrcDir: boolean\n  private cacheStatusesByRequestId = new Map<string, ServerCacheStatus>()\n\n  public serverStats: webpack.Stats | null\n  public edgeServerStats: webpack.Stats | null\n  public multiCompiler?: webpack.MultiCompiler\n  public activeWebpackConfigs?: Array<\n    UnwrapPromise<ReturnType<typeof getBaseWebpackConfig>>\n  >\n\n  constructor(\n    dir: string,\n    {\n      config,\n      isSrcDir,\n      pagesDir,\n      distDir,\n      buildId,\n      encryptionKey,\n      previewProps,\n      rewrites,\n      appDir,\n      telemetry,\n      resetFetch,\n      lockfile,\n      onDevServerCleanup,\n    }: {\n      config: NextConfigComplete\n      isSrcDir: boolean\n      pagesDir?: string\n      distDir: string\n      buildId: string\n      encryptionKey: string\n      previewProps: __ApiPreviewProps\n      rewrites: CustomRoutes['rewrites']\n      appDir?: string\n      telemetry: Telemetry\n      resetFetch: () => void\n      lockfile: Lockfile | undefined\n      onDevServerCleanup: ((listener: () => Promise<void>) => void) | undefined\n    }\n  ) {\n    this.hasAppRouterEntrypoints = false\n    this.hasPagesRouterEntrypoints = false\n    this.buildId = buildId\n    this.encryptionKey = encryptionKey\n    this.dir = dir\n    this.isSrcDir = isSrcDir\n    this.middlewares = []\n    this.pagesDir = pagesDir\n    this.appDir = appDir\n    this.distDir = distDir\n    this.clientStats = null\n    this.serverStats = null\n    this.edgeServerStats = null\n    this.serverPrevDocumentHash = null\n    this.telemetry = telemetry\n    this.resetFetch = resetFetch\n    this.lockfile = lockfile\n\n    this.config = config\n    this.previewProps = previewProps\n    this.rewrites = rewrites\n    this.hotReloaderSpan = trace('hot-reloader', undefined, {\n      version: process.env.__NEXT_VERSION as string,\n    })\n    // Ensure the hotReloaderSpan is flushed immediately as it's the parentSpan for all processing\n    // of the current `next dev` invocation.\n    this.hotReloaderSpan.stop()\n\n    // Initialize log monitor for file logging\n    // Enable logging by default in development mode\n    const mcpServerEnabled = !!config.experimental.mcpServer\n    const fileLogger = getFileLogger()\n    fileLogger.initialize(this.distDir, mcpServerEnabled)\n\n    onDevServerCleanup?.(async () => {\n      await lockfile?.unlock()\n    })\n  }\n\n  public async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlObject\n  ): Promise<{ finished?: true }> {\n    // Usually CORS support is not needed for the hot-reloader (this is dev only feature)\n    // With when the app runs for multi-zones support behind a proxy,\n    // the current page is trying to access this URL via assetPrefix.\n    // That's when the CORS support is needed.\n    const { preflight } = addCorsSupport(req, res)\n    if (preflight) {\n      return {}\n    }\n\n    // When a request comes in that is a page bundle, e.g. /_next/static/<buildid>/pages/index.js\n    // we have to compile the page using on-demand-entries, this middleware will handle doing that\n    // by adding the page to on-demand-entries, waiting till it's done\n    // and then the bundle will be served like usual by the actual route in server/index.js\n    const handlePageBundleRequest = async (\n      pageBundleRes: ServerResponse,\n      parsedPageBundleUrl: UrlObject\n    ): Promise<{ finished?: true }> => {\n      const { pathname } = parsedPageBundleUrl\n      if (!pathname) return {}\n\n      const params = matchNextPageBundleRequest(pathname)\n      if (!params) return {}\n\n      let decodedPagePath: string\n\n      try {\n        decodedPagePath = `/${params.path\n          .map((param: string) => decodeURIComponent(param))\n          .join('/')}`\n      } catch (_) {\n        throw new DecodeError('failed to decode param')\n      }\n\n      const page = denormalizePagePath(decodedPagePath)\n\n      if (page === '/_error' || BLOCKED_PAGES.indexOf(page) === -1) {\n        try {\n          await this.ensurePage({ page, clientOnly: true, url: req.url })\n        } catch (error) {\n          return await renderScriptError(pageBundleRes, getProperError(error))\n        }\n\n        const errors = await this.getCompilationErrors(page)\n        if (errors.length > 0) {\n          return await renderScriptError(pageBundleRes, errors[0], {\n            verbose: false,\n          })\n        }\n      }\n\n      return {}\n    }\n\n    const { finished } = await handlePageBundleRequest(res, parsedUrl)\n\n    for (const middleware of this.middlewares) {\n      let calledNext = false\n\n      await middleware(req, res, () => {\n        calledNext = true\n      })\n\n      if (!calledNext) {\n        return { finished: true }\n      }\n    }\n\n    return { finished }\n  }\n\n  public setHmrServerError(error: Error | null): void {\n    this.hmrServerError = error\n  }\n\n  public clearHmrServerError(): void {\n    if (this.hmrServerError) {\n      this.setHmrServerError(null)\n      this.send({\n        type: HMR_MESSAGE_SENT_TO_BROWSER.RELOAD_PAGE,\n        data: 'clear hmr server error',\n      })\n    }\n  }\n\n  protected async refreshServerComponents(hash: string): Promise<void> {\n    this.send({\n      type: HMR_MESSAGE_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n      hash,\n      // TODO: granular reloading of changes\n      // entrypoints: serverComponentChanges,\n    })\n  }\n\n  public onHMR(\n    req: IncomingMessage,\n    _socket: Duplex,\n    head: Buffer,\n    callback: (\n      client: ws.WebSocket,\n      context: { isLegacyClient: boolean }\n    ) => void\n  ) {\n    wsServer.handleUpgrade(req, req.socket, head, (client) => {\n      const requestId = req.url\n        ? new URL(req.url, 'http://n').searchParams.get('id')\n        : null\n\n      if (!this.webpackHotMiddleware) {\n        throw new InvariantError('Did not start HotReloaderWebpack.')\n      }\n\n      this.webpackHotMiddleware.onHMR(client, requestId)\n      this.onDemandEntries?.onHMR(client, () => this.hmrServerError)\n\n      const enableCacheComponents = this.config.cacheComponents\n      // Clients with a request ID are inferred App Router clients. If Cache\n      // Components is not enabled, we consider those legacy clients. Pages\n      // Router clients are also considered legacy clients. TODO: Maybe mark\n      // clients as App Router / Pages Router clients explicitly, instead of\n      // inferring it from the presence of a request ID.\n      const isLegacyClient = !requestId || !enableCacheComponents\n\n      callback(client, { isLegacyClient })\n\n      client.addEventListener('message', async ({ data }) => {\n        data = typeof data !== 'string' ? data.toString() : data\n\n        try {\n          const payload = JSON.parse(data)\n\n          let traceChild:\n            | {\n                name: string\n                startTime?: bigint\n                endTime?: bigint\n                attrs?: Record<string, number | string | undefined | string[]>\n              }\n            | undefined\n\n          switch (payload.event) {\n            case 'span-end': {\n              traceChild = {\n                name: payload.spanName,\n                startTime:\n                  BigInt(Math.floor(payload.startTime)) *\n                  MILLISECONDS_IN_NANOSECOND,\n                attrs: payload.attributes,\n                endTime:\n                  BigInt(Math.floor(payload.endTime)) *\n                  MILLISECONDS_IN_NANOSECOND,\n              }\n              break\n            }\n            case 'client-hmr-latency': {\n              traceChild = {\n                name: payload.event,\n                startTime:\n                  BigInt(payload.startTime) * MILLISECONDS_IN_NANOSECOND,\n                endTime: BigInt(payload.endTime) * MILLISECONDS_IN_NANOSECOND,\n                attrs: {\n                  updatedModules: payload.updatedModules.map((m: string) =>\n                    m\n                      .replace(`(${WEBPACK_LAYERS.appPagesBrowser})/`, '')\n                      .replace(/^\\.\\//, '[project]/')\n                  ),\n                  page: payload.page,\n                  isPageHidden: payload.isPageHidden,\n                },\n              }\n              break\n            }\n            case 'client-reload-page':\n            case 'client-success': {\n              traceChild = {\n                name: payload.event,\n              }\n              break\n            }\n            case 'client-error': {\n              traceChild = {\n                name: payload.event,\n                attrs: { errorCount: payload.errorCount },\n              }\n              break\n            }\n            case 'client-warning': {\n              traceChild = {\n                name: payload.event,\n                attrs: { warningCount: payload.warningCount },\n              }\n              break\n            }\n            case 'client-removed-page':\n            case 'client-added-page': {\n              traceChild = {\n                name: payload.event,\n                attrs: { page: payload.page || '' },\n              }\n              break\n            }\n            case 'client-full-reload': {\n              const { event, stackTrace, hadRuntimeError } = payload\n\n              traceChild = {\n                name: event,\n                attrs: { stackTrace: stackTrace ?? '' },\n              }\n\n              if (hadRuntimeError) {\n                Log.warn(FAST_REFRESH_RUNTIME_RELOAD)\n                break\n              }\n\n              let fileMessage = ''\n              if (stackTrace) {\n                const file = /Aborted because (.+) is not accepted/.exec(\n                  stackTrace\n                )?.[1]\n                if (file) {\n                  // `file` is filepath in `pages/` but it can be a webpack url.\n                  // If it's a webpack loader URL, it will include the app-pages layer\n                  if (file.startsWith(`(${WEBPACK_LAYERS.appPagesBrowser})/`)) {\n                    const fileUrl = new URL(file, 'file://')\n                    const cwd = process.cwd()\n                    const modules = fileUrl.searchParams\n                      .getAll('modules')\n                      .map((filepath) => filepath.slice(cwd.length + 1))\n                      .filter(\n                        (filepath) => !filepath.startsWith('node_modules')\n                      )\n\n                    if (modules.length > 0) {\n                      fileMessage = ` when ${modules.join(', ')} changed`\n                    }\n                  } else if (\n                    // Handle known webpack layers\n                    file.startsWith(`(${WEBPACK_LAYERS.pagesDirBrowser})/`)\n                  ) {\n                    const cleanedFilePath = file.slice(\n                      `(${WEBPACK_LAYERS.pagesDirBrowser})/`.length\n                    )\n\n                    fileMessage = ` when ${cleanedFilePath} changed`\n                  } else {\n                    fileMessage = ` when ${file} changed`\n                  }\n                }\n              }\n\n              Log.warn(\n                `Fast Refresh had to perform a full reload${fileMessage}. Read more: https://nextjs.org/docs/messages/fast-refresh-reload`\n              )\n              break\n            }\n            case 'browser-logs': {\n              if (this.config.experimental.browserDebugInfoInTerminal) {\n                await receiveBrowserLogsWebpack({\n                  entries: payload.entries,\n                  router: payload.router,\n                  sourceType: payload.sourceType,\n                  clientStats: () => this.clientStats,\n                  serverStats: () => this.serverStats,\n                  edgeServerStats: () => this.edgeServerStats,\n                  rootDirectory: this.dir,\n                  distDir: this.distDir,\n                  config: this.config.experimental.browserDebugInfoInTerminal,\n                })\n              }\n              break\n            }\n            case 'client-file-logs': {\n              // Always log to file regardless of terminal flag\n              await handleClientFileLogs(payload.logs)\n              break\n            }\n            case 'ping': {\n              // Handle ping events to keep WebSocket connections alive\n              // No-op - just acknowledge the ping\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          if (traceChild) {\n            this.hotReloaderSpan.manualTraceChild(\n              traceChild.name,\n              traceChild.startTime,\n              traceChild.endTime,\n              { ...traceChild.attrs, clientId: payload.id }\n            )\n          }\n        } catch (_) {\n          // invalid WebSocket message\n        }\n      })\n\n      if (requestId) {\n        connectReactDebugChannel(\n          requestId,\n          this.sendToClient.bind(this, client)\n        )\n        if (enableCacheComponents) {\n          const status = this.cacheStatusesByRequestId.get(requestId)\n          if (status) {\n            this.sendToClient(client, {\n              type: HMR_MESSAGE_SENT_TO_BROWSER.CACHE_INDICATOR,\n              state: status,\n            })\n            this.cacheStatusesByRequestId.delete(requestId)\n          }\n        }\n      }\n\n      client.on('close', () => {\n        this.webpackHotMiddleware?.deleteClient(client, requestId)\n\n        if (requestId) {\n          deleteReactDebugChannel(requestId)\n        }\n      })\n    })\n  }\n\n  private async clean(span: Span): Promise<void> {\n    return span\n      .traceChild('clean')\n      .traceAsyncFn(() =>\n        recursiveDeleteSyncWithAsyncRetries(\n          join(this.dir, this.config.distDir),\n          /^(cache|lock)/\n        )\n      )\n  }\n\n  private async getWebpackConfig(span: Span) {\n    const webpackConfigSpan = span.traceChild('get-webpack-config')\n\n    const pageExtensions = this.config.pageExtensions\n\n    return webpackConfigSpan.traceAsyncFn(async () => {\n      const pagePaths = !this.pagesDir\n        ? ([] as (string | null)[])\n        : await webpackConfigSpan\n            .traceChild('get-page-paths')\n            .traceAsyncFn(() =>\n              Promise.all([\n                findPageFile(this.pagesDir!, '/_app', pageExtensions, false),\n                findPageFile(\n                  this.pagesDir!,\n                  '/_document',\n                  pageExtensions,\n                  false\n                ),\n              ])\n            )\n\n      this.pagesMapping = await webpackConfigSpan\n        .traceChild('create-pages-mapping')\n        .traceAsyncFn(() =>\n          createPagesMapping({\n            isDev: true,\n            pageExtensions: this.config.pageExtensions,\n            pagesType: PAGE_TYPES.PAGES,\n            pagePaths: pagePaths.filter(\n              (i: string | null): i is string => typeof i === 'string'\n            ),\n            pagesDir: this.pagesDir,\n            appDir: this.appDir,\n            appDirOnly: Boolean(this.appDir && !this.pagesDir),\n          })\n        )\n\n      const entrypoints = await webpackConfigSpan\n        .traceChild('create-entrypoints')\n        .traceAsyncFn(() =>\n          createEntrypoints({\n            appDir: this.appDir,\n            buildId: this.buildId,\n            config: this.config,\n            envFiles: [],\n            isDev: true,\n            pages: this.pagesMapping,\n            pagesDir: this.pagesDir,\n            previewMode: this.previewProps,\n            rootDir: this.dir,\n            pageExtensions: this.config.pageExtensions,\n          })\n        )\n\n      const commonWebpackOptions = {\n        dev: true,\n        buildId: this.buildId,\n        encryptionKey: this.encryptionKey,\n        config: this.config,\n        pagesDir: this.pagesDir,\n        rewrites: this.rewrites,\n        originalRewrites: this.config._originalRewrites,\n        originalRedirects: this.config._originalRedirects,\n        runWebpackSpan: this.hotReloaderSpan,\n        appDir: this.appDir,\n        previewProps: this.previewProps,\n      }\n\n      return webpackConfigSpan\n        .traceChild('generate-webpack-config')\n        .traceAsyncFn(async () => {\n          const info = await loadProjectInfo({\n            dir: this.dir,\n            config: commonWebpackOptions.config,\n            dev: true,\n          })\n          return Promise.all([\n            // order is important here\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.client,\n              entrypoints: entrypoints.client,\n              ...info,\n            }),\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.server,\n              entrypoints: entrypoints.server,\n              ...info,\n            }),\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.edgeServer,\n              entrypoints: entrypoints.edgeServer,\n              ...info,\n            }),\n          ])\n        })\n    })\n  }\n\n  public async buildFallbackError(): Promise<void> {\n    if (this.fallbackWatcher) return\n\n    const info = await loadProjectInfo({\n      dir: this.dir,\n      config: this.config,\n      dev: true,\n    })\n    const fallbackConfig = await getBaseWebpackConfig(this.dir, {\n      previewProps: this.previewProps,\n      runWebpackSpan: this.hotReloaderSpan,\n      dev: true,\n      compilerType: COMPILER_NAMES.client,\n      config: this.config,\n      buildId: this.buildId,\n      encryptionKey: this.encryptionKey,\n      appDir: this.appDir,\n      pagesDir: this.pagesDir,\n      rewrites: {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      },\n      originalRewrites: {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      },\n      originalRedirects: [],\n      isDevFallback: true,\n      entrypoints: (\n        await createEntrypoints({\n          appDir: this.appDir,\n          buildId: this.buildId,\n          config: this.config,\n          envFiles: [],\n          isDev: true,\n          pages: {\n            '/_app': 'next/dist/pages/_app',\n            '/_error': 'next/dist/pages/_error',\n          },\n          pagesDir: this.pagesDir,\n          previewMode: this.previewProps,\n          rootDir: this.dir,\n          pageExtensions: this.config.pageExtensions,\n        })\n      ).client,\n      ...info,\n    })\n\n    const fallbackCompiler = getWebpackBundler()(fallbackConfig)\n\n    this.fallbackWatcher = await new Promise((resolve) => {\n      let bootedFallbackCompiler = false\n      fallbackCompiler.watch(\n        // @ts-ignore webpack supports an array of watchOptions when using a multiCompiler\n        fallbackConfig.watchOptions,\n        // Errors are handled separately\n        (_err: any) => {\n          if (!bootedFallbackCompiler) {\n            bootedFallbackCompiler = true\n            resolve(true)\n          }\n        }\n      )\n    })\n  }\n\n  private async tracedGetVersionInfo(span: Span) {\n    const versionInfoSpan = span.traceChild('get-version-info')\n    return versionInfoSpan.traceAsyncFn<VersionInfo>(async () =>\n      getVersionInfo()\n    )\n  }\n\n  public async start(): Promise<void> {\n    const startSpan = this.hotReloaderSpan.traceChild('start')\n    startSpan.stop() // Stop immediately to create an artificial parent span\n\n    this.versionInfo = await this.tracedGetVersionInfo(startSpan)\n\n    const nodeDebugType = getNodeDebugType()\n    if (nodeDebugType && !this.devtoolsFrontendUrl) {\n      const debugPort = process.debugPort\n      let debugInfo\n      try {\n        // It requires to use 127.0.0.1 instead of localhost for server-side fetching.\n        const debugInfoList = await fetch(\n          `http://127.0.0.1:${debugPort}/json/list`\n        ).then((res) => res.json())\n        // There will be only one item for current process, so always get the first item.\n        debugInfo = debugInfoList[0]\n      } catch {}\n      if (debugInfo) {\n        this.devtoolsFrontendUrl = debugInfo.devtoolsFrontendUrl\n      }\n    }\n\n    await this.clean(startSpan)\n    // Ensure distDir exists before writing package.json\n    await fs.mkdir(this.distDir, { recursive: true })\n\n    const initialDevToolsConfig = await getDevToolsConfig(this.distDir)\n\n    const distPackageJsonPath = join(this.distDir, 'package.json')\n    // Ensure commonjs handling is used for files in the distDir (generally .next)\n    // Files outside of the distDir can be \"type\": \"module\"\n    await fs.writeFile(distPackageJsonPath, '{\"type\": \"commonjs\"}')\n\n    this.activeWebpackConfigs = await this.getWebpackConfig(startSpan)\n\n    for (const config of this.activeWebpackConfigs) {\n      const defaultEntry = config.entry\n      config.entry = async (...args) => {\n        const outputPath = this.multiCompiler?.outputPath || ''\n        const entries = getEntries(outputPath)\n        // @ts-ignore entry is always a function\n        const entrypoints = await defaultEntry(...args)\n        const isClientCompilation = config.name === COMPILER_NAMES.client\n        const isNodeServerCompilation = config.name === COMPILER_NAMES.server\n        const isEdgeServerCompilation =\n          config.name === COMPILER_NAMES.edgeServer\n\n        await Promise.all(\n          Object.keys(entries).map(async (entryKey) => {\n            const entryData = entries[entryKey]\n            const { bundlePath, dispose } = entryData\n\n            const result =\n              /^(client|server|edge-server)@(app|pages|root)@(.*)/g.exec(\n                entryKey\n              )\n            const [, key /* pageType */, , page] = result! // this match should always happen\n\n            if (key === COMPILER_NAMES.client && !isClientCompilation) return\n            if (key === COMPILER_NAMES.server && !isNodeServerCompilation)\n              return\n            if (key === COMPILER_NAMES.edgeServer && !isEdgeServerCompilation)\n              return\n\n            const isEntry = entryData.type === EntryTypes.ENTRY\n            const isChildEntry = entryData.type === EntryTypes.CHILD_ENTRY\n\n            // Check if the page was removed or disposed and remove it\n            if (isEntry) {\n              const pageExists =\n                !dispose && existsSync(entryData.absolutePagePath)\n              if (!pageExists) {\n                delete entries[entryKey]\n                return\n              }\n            }\n\n            // For child entries, if it has an entry file and it's gone, remove it\n            if (isChildEntry) {\n              if (entryData.absoluteEntryFilePath) {\n                const pageExists =\n                  !dispose && existsSync(entryData.absoluteEntryFilePath)\n                if (!pageExists) {\n                  delete entries[entryKey]\n                  return\n                }\n              }\n            }\n\n            // Ensure _error is considered a `pages` page.\n            if (page === '/_error') {\n              this.hasPagesRouterEntrypoints = true\n            }\n\n            const hasAppDir = !!this.appDir\n            const isAppPath = hasAppDir && bundlePath.startsWith('app/')\n            const staticInfo = isEntry\n              ? await getStaticInfoIncludingLayouts({\n                  isInsideAppDir: isAppPath,\n                  pageExtensions: this.config.pageExtensions,\n                  pageFilePath: entryData.absolutePagePath,\n                  appDir: this.appDir,\n                  config: this.config,\n                  isDev: true,\n                  page,\n                })\n              : undefined\n\n            const isServerComponent =\n              isAppPath && staticInfo?.rsc !== RSC_MODULE_TYPES.client\n\n            const pageType: PAGE_TYPES = entryData.bundlePath.startsWith(\n              'pages/'\n            )\n              ? PAGE_TYPES.PAGES\n              : entryData.bundlePath.startsWith('app/')\n                ? PAGE_TYPES.APP\n                : PAGE_TYPES.ROOT\n\n            if (pageType === 'pages') {\n              this.hasPagesRouterEntrypoints = true\n            }\n            if (pageType === 'app') {\n              this.hasAppRouterEntrypoints = true\n            }\n\n            const isInstrumentation =\n              isInstrumentationHookFile(page) && pageType === PAGE_TYPES.ROOT\n\n            let pageRuntime = staticInfo?.runtime\n\n            runDependingOnPageType({\n              page,\n              pageRuntime,\n              pageType,\n              onEdgeServer: () => {\n                // TODO-APP: verify if child entry should support.\n                if (!isEdgeServerCompilation || !isEntry) return\n                entries[entryKey].status = BUILDING\n\n                if (isInstrumentation) {\n                  const normalizedBundlePath = bundlePath.replace('src/', '')\n                  entrypoints[normalizedBundlePath] = finalizeEntrypoint({\n                    compilerType: COMPILER_NAMES.edgeServer,\n                    name: normalizedBundlePath,\n                    value: getInstrumentationEntry({\n                      absolutePagePath: entryData.absolutePagePath,\n                      isEdgeServer: true,\n                      isDev: true,\n                    }),\n                    isServerComponent: true,\n                    hasAppDir,\n                  })\n                  return\n                }\n                const appDirLoader = isAppPath\n                  ? getAppEntry({\n                      name: bundlePath,\n                      page,\n                      appPaths: entryData.appPaths,\n                      pagePath: posix.join(\n                        APP_DIR_ALIAS,\n                        relative(\n                          this.appDir!,\n                          entryData.absolutePagePath\n                        ).replace(/\\\\/g, '/')\n                      ),\n                      appDir: this.appDir!,\n                      pageExtensions: this.config.pageExtensions,\n                      rootDir: this.dir,\n                      isDev: true,\n                      tsconfigPath: this.config.typescript.tsconfigPath,\n                      basePath: this.config.basePath,\n                      assetPrefix: this.config.assetPrefix,\n                      nextConfigOutput: this.config.output,\n                      preferredRegion: staticInfo?.preferredRegion,\n                      middlewareConfig: Buffer.from(\n                        JSON.stringify(staticInfo?.middleware || {})\n                      ).toString('base64'),\n                      isGlobalNotFoundEnabled: this.config.experimental\n                        .globalNotFound\n                        ? true\n                        : undefined,\n                    }).import\n                  : undefined\n\n                entrypoints[bundlePath] = finalizeEntrypoint({\n                  compilerType: COMPILER_NAMES.edgeServer,\n                  name: bundlePath,\n                  value: getEdgeServerEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    rootDir: this.dir,\n                    buildId: this.buildId,\n                    bundlePath,\n                    config: this.config,\n                    isDev: true,\n                    page,\n                    pages: this.pagesMapping,\n                    isServerComponent,\n                    appDirLoader,\n                    pagesType: isAppPath ? PAGE_TYPES.APP : PAGE_TYPES.PAGES,\n                    preferredRegion: staticInfo?.preferredRegion,\n                  }),\n                  hasAppDir,\n                })\n              },\n              onClient: () => {\n                if (!isClientCompilation) return\n                if (isChildEntry) {\n                  entries[entryKey].status = BUILDING\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    name: bundlePath,\n                    compilerType: COMPILER_NAMES.client,\n                    value: entryData.request,\n                    hasAppDir,\n                  })\n                } else {\n                  entries[entryKey].status = BUILDING\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    name: bundlePath,\n                    compilerType: COMPILER_NAMES.client,\n                    value: getClientEntry({\n                      absolutePagePath: entryData.absolutePagePath,\n                      page,\n                    }),\n                    hasAppDir,\n                  })\n                }\n              },\n              onServer: () => {\n                // TODO-APP: verify if child entry should support.\n                if (!isNodeServerCompilation || !isEntry) return\n                entries[entryKey].status = BUILDING\n                let relativeRequest = relative(\n                  config.context!,\n                  entryData.absolutePagePath\n                )\n                if (\n                  !isAbsolute(relativeRequest) &&\n                  !relativeRequest.startsWith('../')\n                ) {\n                  relativeRequest = `./${relativeRequest}`\n                }\n\n                let value: { import: string; layer?: string } | string\n                if (isInstrumentation) {\n                  value = getInstrumentationEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    isEdgeServer: false,\n                    isDev: true,\n                  })\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    compilerType: COMPILER_NAMES.server,\n                    name: bundlePath,\n                    isServerComponent: true,\n                    value,\n                    hasAppDir,\n                  })\n                } else if (isMiddlewareFile(page)) {\n                  value = getEdgeServerEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    rootDir: this.dir,\n                    buildId: this.buildId,\n                    bundlePath,\n                    config: this.config,\n                    isDev: true,\n                    page,\n                    pages: this.pagesMapping,\n                    isServerComponent,\n                    pagesType: PAGE_TYPES.PAGES,\n                    preferredRegion: staticInfo?.preferredRegion,\n                  })\n                } else if (isAppPath) {\n                  // This path normalization is critical for webpack to resolve the next internals as entry.\n                  const pagePath = entryData.absolutePagePath.startsWith(\n                    dirname(require.resolve('next/package.json'))\n                  )\n                    ? entryData.absolutePagePath\n                    : posix.join(\n                        APP_DIR_ALIAS,\n                        relative(\n                          this.appDir!,\n                          entryData.absolutePagePath\n                        ).replace(/\\\\/g, '/')\n                      )\n                  value = getAppEntry({\n                    name: bundlePath,\n                    page,\n                    appPaths: entryData.appPaths,\n                    pagePath,\n                    appDir: this.appDir!,\n                    pageExtensions: this.config.pageExtensions,\n                    rootDir: this.dir,\n                    isDev: true,\n                    tsconfigPath: this.config.typescript.tsconfigPath,\n                    basePath: this.config.basePath,\n                    assetPrefix: this.config.assetPrefix,\n                    nextConfigOutput: this.config.output,\n                    preferredRegion: staticInfo?.preferredRegion,\n                    middlewareConfig: Buffer.from(\n                      JSON.stringify(staticInfo?.middleware || {})\n                    ).toString('base64'),\n                    isGlobalNotFoundEnabled: this.config.experimental\n                      .globalNotFound\n                      ? true\n                      : undefined,\n                  })\n                } else if (isAPIRoute(page)) {\n                  value = getRouteLoaderEntry({\n                    kind: RouteKind.PAGES_API,\n                    page,\n                    absolutePagePath: relativeRequest,\n                    preferredRegion: staticInfo?.preferredRegion,\n                    middlewareConfig: staticInfo?.middleware || {},\n                  })\n                } else if (\n                  !isMiddlewareFile(page) &&\n                  !isInternalComponent(relativeRequest) &&\n                  !isNonRoutePagesPage(page) &&\n                  !isInstrumentation\n                ) {\n                  value = getRouteLoaderEntry({\n                    kind: RouteKind.PAGES,\n                    page,\n                    pages: this.pagesMapping,\n                    absolutePagePath: relativeRequest,\n                    preferredRegion: staticInfo?.preferredRegion,\n                    middlewareConfig: staticInfo?.middleware ?? {},\n                  })\n                } else {\n                  value = relativeRequest\n                }\n\n                entrypoints[bundlePath] = finalizeEntrypoint({\n                  compilerType: COMPILER_NAMES.server,\n                  name: bundlePath,\n                  isServerComponent,\n                  value,\n                  hasAppDir,\n                })\n              },\n            })\n          })\n        )\n        if (!this.hasPagesRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_MAIN]\n          delete entrypoints['pages/_app']\n          delete entrypoints['pages/_error']\n          delete entrypoints['/_error']\n          delete entrypoints['pages/_document']\n        }\n        // Remove React Refresh entrypoint chunk as `app` doesn't require it.\n        if (!this.hasPagesRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH]\n        }\n        if (!this.hasAppRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_MAIN_APP]\n        }\n\n        return entrypoints\n      }\n    }\n\n    // Enable building of client compilation before server compilation in development\n    // @ts-ignore webpack 5\n    this.activeWebpackConfigs.parallelism = 1\n\n    await Promise.all(\n      Array.from(getCacheDirectories(this.activeWebpackConfigs)).map(\n        checkFileSystemCacheInvalidationAndCleanup\n      )\n    )\n    this.multiCompiler = getWebpackBundler()(\n      this.activeWebpackConfigs\n    ) as unknown as webpack.MultiCompiler\n\n    // Copy over the filesystem so that it is shared between all compilers.\n    const inputFileSystem = this.multiCompiler.compilers[0].inputFileSystem\n    for (const compiler of this.multiCompiler.compilers) {\n      compiler.inputFileSystem = inputFileSystem\n      // This is set for the initial compile. After that Watching class in webpack adds it.\n      compiler.fsStartTime = Date.now()\n      // Ensure NodeEnvironmentPlugin doesn't purge the inputFileSystem. Purging is handled in `done` below.\n      compiler.hooks.beforeRun.intercept({\n        register(tapInfo: any) {\n          if (tapInfo.name === 'NodeEnvironmentPlugin') {\n            return null\n          }\n          return tapInfo\n        },\n      })\n    }\n\n    this.multiCompiler.hooks.done.tap('NextjsHotReloader', () => {\n      inputFileSystem?.purge?.()\n    })\n    watchCompilers(\n      this.multiCompiler.compilers[0],\n      this.multiCompiler.compilers[1],\n      this.multiCompiler.compilers[2]\n    )\n\n    // Watch for changes to client/server page files so we can tell when just\n    // the server file changes and trigger a reload for GS(S)P pages\n    const changedClientPages = new Set<string>()\n    const changedServerPages = new Set<string>()\n    const changedEdgeServerPages = new Set<string>()\n\n    const changedServerComponentPages = new Set<string>()\n    const changedCSSImportPages = new Set<string>()\n\n    const prevClientPageHashes = new Map<string, string>()\n    const prevServerPageHashes = new Map<string, string>()\n    const prevEdgeServerPageHashes = new Map<string, string>()\n    const prevCSSImportModuleHashes = new Map<string, string>()\n\n    const pageExtensionRegex = new RegExp(\n      `\\\\.(?:${this.config.pageExtensions.join('|')})$`\n    )\n\n    const trackPageChanges =\n      (\n        pageHashMap: Map<string, string>,\n        changedItems: Set<string>,\n        serverComponentChangedItems?: Set<string>\n      ) =>\n      (stats: webpack.Compilation) => {\n        try {\n          stats.entrypoints.forEach((entry, key) => {\n            if (\n              key.startsWith('pages/') ||\n              key.startsWith('app/') ||\n              isMiddlewareFilename(key)\n            ) {\n              // TODO this doesn't handle on demand loaded chunks\n              entry.chunks.forEach((chunk) => {\n                if (chunk.id === key) {\n                  const modsIterable: any =\n                    stats.chunkGraph.getChunkModulesIterable(chunk)\n\n                  let hasCSSModuleChanges = false\n                  let chunksHash = new StringXor()\n                  let chunksHashServerLayer = new StringXor()\n\n                  modsIterable.forEach((mod: any) => {\n                    if (\n                      mod.resource &&\n                      mod.resource.replace(/\\\\/g, '/').includes(key) &&\n                      // Shouldn't match CSS modules, etc.\n                      pageExtensionRegex.test(mod.resource)\n                    ) {\n                      // use original source to calculate hash since mod.hash\n                      // includes the source map in development which changes\n                      // every time for both server and client so we calculate\n                      // the hash without the source map for the page module\n                      const hash = (\n                        require('crypto') as typeof import('crypto')\n                      )\n                        .createHash('sha1')\n                        .update(mod.originalSource().buffer())\n                        .digest()\n                        .toString('hex')\n\n                      if (\n                        mod.layer === WEBPACK_LAYERS.reactServerComponents &&\n                        mod?.buildInfo?.rsc?.type !== 'client'\n                      ) {\n                        chunksHashServerLayer.add(hash)\n                      }\n\n                      chunksHash.add(hash)\n                    } else {\n                      // for non-pages we can use the module hash directly\n                      const hash = stats.chunkGraph.getModuleHash(\n                        mod,\n                        chunk.runtime\n                      )\n\n                      if (\n                        mod.layer === WEBPACK_LAYERS.reactServerComponents &&\n                        mod?.buildInfo?.rsc?.type !== 'client'\n                      ) {\n                        chunksHashServerLayer.add(hash)\n                      }\n\n                      chunksHash.add(hash)\n\n                      // Both CSS import changes from server and client\n                      // components are tracked.\n                      if (\n                        key.startsWith('app/') &&\n                        /\\.(css|scss|sass)$/.test(mod.resource || '')\n                      ) {\n                        const resourceKey = mod.layer + ':' + mod.resource\n                        const prevHash =\n                          prevCSSImportModuleHashes.get(resourceKey)\n                        if (prevHash && prevHash !== hash) {\n                          hasCSSModuleChanges = true\n                        }\n                        prevCSSImportModuleHashes.set(resourceKey, hash)\n                      }\n                    }\n                  })\n\n                  const prevHash = pageHashMap.get(key)\n                  const curHash = chunksHash.toString()\n                  if (prevHash && prevHash !== curHash) {\n                    changedItems.add(key)\n                  }\n                  pageHashMap.set(key, curHash)\n\n                  if (serverComponentChangedItems) {\n                    const serverKey =\n                      WEBPACK_LAYERS.reactServerComponents + ':' + key\n                    const prevServerHash = pageHashMap.get(serverKey)\n                    const curServerHash = chunksHashServerLayer.toString()\n                    if (prevServerHash && prevServerHash !== curServerHash) {\n                      serverComponentChangedItems.add(key)\n                    }\n                    pageHashMap.set(serverKey, curServerHash)\n                  }\n\n                  if (hasCSSModuleChanges) {\n                    changedCSSImportPages.add(key)\n                  }\n                }\n              })\n            }\n          })\n        } catch (err) {\n          console.error(err)\n        }\n      }\n\n    this.multiCompiler.compilers[0].hooks.emit.tap(\n      'NextjsHotReloaderForClient',\n      trackPageChanges(prevClientPageHashes, changedClientPages)\n    )\n    this.multiCompiler.compilers[1].hooks.emit.tap(\n      'NextjsHotReloaderForServer',\n      trackPageChanges(\n        prevServerPageHashes,\n        changedServerPages,\n        changedServerComponentPages\n      )\n    )\n    this.multiCompiler.compilers[2].hooks.emit.tap(\n      'NextjsHotReloaderForServer',\n      trackPageChanges(\n        prevEdgeServerPageHashes,\n        changedEdgeServerPages,\n        changedServerComponentPages\n      )\n    )\n\n    // This plugin watches for changes to _document.js and notifies the client side that it should reload the page\n    this.multiCompiler.compilers[1].hooks.failed.tap(\n      'NextjsHotReloaderForServer',\n      (err: Error) => {\n        this.serverError = err\n        this.serverStats = null\n        this.serverChunkNames = undefined\n      }\n    )\n\n    this.multiCompiler.compilers[2].hooks.done.tap(\n      'NextjsHotReloaderForServer',\n      (stats) => {\n        this.serverError = null\n        this.edgeServerStats = stats\n      }\n    )\n\n    this.multiCompiler.compilers[1].hooks.done.tap(\n      'NextjsHotReloaderForServer',\n      (stats) => {\n        this.serverError = null\n        this.serverStats = stats\n\n        if (!this.pagesDir) {\n          return\n        }\n\n        const { compilation } = stats\n\n        // We only watch `_document` for changes on the server compilation\n        // the rest of the files will be triggered by the client compilation\n        const documentChunk = compilation.namedChunks.get('pages/_document')\n        // If the document chunk can't be found we do nothing\n        if (!documentChunk) {\n          return\n        }\n\n        // Initial value\n        if (this.serverPrevDocumentHash === null) {\n          this.serverPrevDocumentHash = documentChunk.hash || null\n          return\n        }\n\n        // If _document.js didn't change we don't trigger a reload.\n        if (documentChunk.hash === this.serverPrevDocumentHash) {\n          return\n        }\n\n        // As document chunk will change if new app pages are joined,\n        // since react bundle is different it will effect the chunk hash.\n        // So we diff the chunk changes, if there's only new app page chunk joins,\n        // then we don't trigger a reload by checking pages/_document chunk change.\n        if (this.appDir) {\n          const chunkNames = new Set(compilation.namedChunks.keys())\n          const diffChunkNames = difference<string>(\n            this.serverChunkNames || new Set(),\n            chunkNames\n          )\n\n          if (\n            diffChunkNames.length === 0 ||\n            diffChunkNames.every((chunkName) => chunkName.startsWith('app/'))\n          ) {\n            return\n          }\n          this.serverChunkNames = chunkNames\n        }\n\n        this.serverPrevDocumentHash = documentChunk.hash || null\n\n        // Notify reload to reload the page, as _document.js was changed (different hash)\n        this.send({\n          type: HMR_MESSAGE_SENT_TO_BROWSER.RELOAD_PAGE,\n          data: '_document has changed',\n        })\n      }\n    )\n\n    this.multiCompiler.hooks.done.tap('NextjsHotReloaderForServer', (stats) => {\n      const reloadAfterInvalidation = this.reloadAfterInvalidation\n      this.reloadAfterInvalidation = false\n\n      const serverOnlyChanges = difference<string>(\n        changedServerPages,\n        changedClientPages\n      )\n\n      const edgeServerOnlyChanges = difference<string>(\n        changedEdgeServerPages,\n        changedClientPages\n      )\n\n      const pageChanges = serverOnlyChanges\n        .concat(edgeServerOnlyChanges)\n        .filter((key) => key.startsWith('pages/'))\n\n      const middlewareChanges = [\n        ...Array.from(changedEdgeServerPages),\n        ...Array.from(changedServerPages),\n      ].filter((name) => isMiddlewareFilename(name))\n\n      if (middlewareChanges.length > 0) {\n        this.send({\n          type: HMR_MESSAGE_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n        })\n      }\n\n      if (pageChanges.length > 0) {\n        this.send({\n          type: HMR_MESSAGE_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n          pages: serverOnlyChanges.map((pg) =>\n            denormalizePagePath(pg.slice('pages'.length))\n          ),\n        })\n      }\n\n      if (\n        changedServerComponentPages.size ||\n        changedCSSImportPages.size ||\n        reloadAfterInvalidation\n      ) {\n        this.resetFetch()\n        this.refreshServerComponents(stats.hash)\n      }\n\n      changedClientPages.clear()\n      changedServerPages.clear()\n      changedEdgeServerPages.clear()\n      changedServerComponentPages.clear()\n      changedCSSImportPages.clear()\n    })\n\n    this.multiCompiler.compilers[0].hooks.failed.tap(\n      'NextjsHotReloaderForClient',\n      (err: Error) => {\n        this.clientError = err\n        this.clientStats = null\n      }\n    )\n    this.multiCompiler.compilers[0].hooks.done.tap(\n      'NextjsHotReloaderForClient',\n      (stats) => {\n        this.clientError = null\n        this.clientStats = stats\n\n        const { compilation } = stats\n        const chunkNames = new Set(\n          [...compilation.namedChunks.keys()].filter(\n            (name) => !!getRouteFromEntrypoint(name)\n          )\n        )\n\n        if (this.prevChunkNames) {\n          // detect chunks which have to be replaced with a new template\n          // e.g, pages/index.js <-> pages/_error.js\n          const addedPages = diff(chunkNames, this.prevChunkNames!)\n          const removedPages = diff(this.prevChunkNames!, chunkNames)\n\n          if (addedPages.size > 0) {\n            for (const addedPage of addedPages) {\n              const page = getRouteFromEntrypoint(addedPage)\n              this.send({\n                type: HMR_MESSAGE_SENT_TO_BROWSER.ADDED_PAGE,\n                data: [page],\n              })\n            }\n          }\n\n          if (removedPages.size > 0) {\n            for (const removedPage of removedPages) {\n              const page = getRouteFromEntrypoint(removedPage)\n              this.send({\n                type: HMR_MESSAGE_SENT_TO_BROWSER.REMOVED_PAGE,\n                data: [page],\n              })\n            }\n          }\n        }\n\n        this.prevChunkNames = chunkNames\n      }\n    )\n\n    this.webpackHotMiddleware = new WebpackHotMiddleware(\n      this.multiCompiler.compilers,\n      this.versionInfo,\n      this.devtoolsFrontendUrl,\n      this.config,\n      initialDevToolsConfig\n    )\n\n    let booted = false\n\n    this.watcher = await new Promise((resolve) => {\n      const watcher = this.multiCompiler?.watch(\n        // @ts-ignore webpack supports an array of watchOptions when using a multiCompiler\n        this.activeWebpackConfigs.map((config) => config.watchOptions!),\n        // Errors are handled separately\n        (_err: any) => {\n          if (!booted) {\n            booted = true\n            resolve(watcher)\n          }\n        }\n      )\n    })\n\n    this.onDemandEntries = onDemandEntryHandler({\n      hotReloader: this,\n      multiCompiler: this.multiCompiler,\n      pagesDir: this.pagesDir,\n      appDir: this.appDir,\n      rootDir: this.dir,\n      nextConfig: this.config,\n      ...(this.config.onDemandEntries as {\n        maxInactiveAge: number\n        pagesBufferLength: number\n      }),\n    })\n\n    this.middlewares = [\n      getOverlayMiddleware({\n        rootDirectory: this.dir,\n        isSrcDir: this.isSrcDir,\n        clientStats: () => this.clientStats,\n        serverStats: () => this.serverStats,\n        edgeServerStats: () => this.edgeServerStats,\n      }),\n      getSourceMapMiddleware({\n        clientStats: () => this.clientStats,\n        serverStats: () => this.serverStats,\n        edgeServerStats: () => this.edgeServerStats,\n      }),\n      getNextErrorFeedbackMiddleware(this.telemetry),\n      getDevOverlayFontMiddleware(),\n      getDisableDevIndicatorMiddleware(),\n      getRestartDevServerMiddleware({\n        telemetry: this.telemetry,\n        webpackCacheDirectories:\n          this.activeWebpackConfigs != null\n            ? getCacheDirectories(this.activeWebpackConfigs)\n            : undefined,\n      }),\n      devToolsConfigMiddleware({\n        distDir: this.distDir,\n        sendUpdateSignal: (data) => {\n          // Update the in-memory devToolsConfig value\n          // which will be used for the next onHMR call.\n          this.webpackHotMiddleware?.updateDevToolsConfig(data)\n\n          this.send({\n            type: HMR_MESSAGE_SENT_TO_BROWSER.DEVTOOLS_CONFIG,\n            data,\n          })\n        },\n      }),\n      ...(this.config.experimental.mcpServer\n        ? [\n            getMcpMiddleware({\n              projectPath: this.dir,\n              distDir: this.distDir,\n              sendHmrMessage: (message) => this.send(message),\n              getActiveConnectionCount: () =>\n                this.webpackHotMiddleware?.getClientCount() ?? 0,\n              getDevServerUrl: () => process.env.__NEXT_PRIVATE_ORIGIN,\n            }),\n          ]\n        : []),\n    ]\n\n    setStackFrameResolver(async (request) => {\n      return getOriginalStackFrames({\n        isServer: request.isServer,\n        isEdgeServer: request.isEdgeServer,\n        isAppDirectory: request.isAppDirectory,\n        frames: request.frames,\n        clientStats: () => this.clientStats,\n        serverStats: () => this.serverStats,\n        edgeServerStats: () => this.edgeServerStats,\n        rootDirectory: this.dir,\n      })\n    })\n  }\n\n  public invalidate(\n    { reloadAfterInvalidation }: { reloadAfterInvalidation: boolean } = {\n      reloadAfterInvalidation: false,\n    }\n  ) {\n    // Cache the `reloadAfterInvalidation` flag, and use it to reload the page when compilation is done\n    this.reloadAfterInvalidation = reloadAfterInvalidation\n    const outputPath = this.multiCompiler?.outputPath\n    if (outputPath) {\n      getInvalidator(outputPath)?.invalidate()\n    }\n  }\n\n  public async getCompilationErrors(page: string) {\n    const getErrors = ({ compilation }: webpack.Stats) => {\n      const failedPages = erroredPages(compilation)\n      const normalizedPage = normalizePathSep(page)\n      // If there is an error related to the requesting page we display it instead of the first error\n      return failedPages[normalizedPage]?.length > 0\n        ? failedPages[normalizedPage]\n        : compilation.errors\n    }\n\n    if (this.clientError) {\n      return [this.clientError]\n    } else if (this.serverError) {\n      return [this.serverError]\n    } else if (this.clientStats?.hasErrors()) {\n      return getErrors(this.clientStats)\n    } else if (this.serverStats?.hasErrors()) {\n      return getErrors(this.serverStats)\n    } else if (this.edgeServerStats?.hasErrors()) {\n      return getErrors(this.edgeServerStats)\n    } else {\n      return []\n    }\n  }\n\n  public send(message: HmrMessageSentToBrowser): void {\n    this.webpackHotMiddleware!.publish(message)\n  }\n\n  public sendToClient(client: ws, message: HmrMessageSentToBrowser): void {\n    this.webpackHotMiddleware!.publishToClient(client, message)\n  }\n\n  public sendToLegacyClients(message: HmrMessageSentToBrowser): void {\n    this.webpackHotMiddleware!.publishToLegacyClients(message)\n  }\n\n  public setCacheStatus(\n    status: ServerCacheStatus,\n    htmlRequestId: string,\n    requestId: string\n  ): void {\n    const client = this.webpackHotMiddleware?.getClient(htmlRequestId)\n    if (client !== undefined) {\n      this.sendToClient(client, {\n        type: HMR_MESSAGE_SENT_TO_BROWSER.CACHE_INDICATOR,\n        state: status,\n      })\n    } else {\n      // If the client is not connected, store the status so that we can send it\n      // when the client connects.\n      this.cacheStatusesByRequestId.set(requestId, status)\n    }\n  }\n\n  public setReactDebugChannel(\n    debugChannel: ReactDebugChannelForBrowser,\n    htmlRequestId: string,\n    requestId: string\n  ): void {\n    // Store the debug channel, regardless of whether the client is connected.\n    setReactDebugChannel(requestId, debugChannel)\n\n    // If the client is connected, we can connect the debug channel immediately.\n    // Otherwise, we'll do that when the client connects.\n    const client = this.webpackHotMiddleware?.getClient(htmlRequestId)\n\n    if (client) {\n      connectReactDebugChannel(requestId, this.sendToClient.bind(this, client))\n    }\n  }\n\n  public async ensurePage({\n    page,\n    clientOnly,\n    appPaths,\n    definition,\n    isApp,\n    url,\n  }: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    isApp?: boolean\n    definition?: RouteDefinition\n    url?: string\n  }): Promise<void> {\n    return this.hotReloaderSpan\n      .traceChild('ensure-page', {\n        inputPage: page,\n      })\n      .traceAsyncFn(async () => {\n        // Make sure we don't re-build or dispose prebuilt pages\n        if (page !== '/_error' && BLOCKED_PAGES.indexOf(page) !== -1) {\n          return\n        }\n        const error = clientOnly\n          ? this.clientError\n          : this.serverError || this.clientError\n        if (error) {\n          throw error\n        }\n\n        return this.onDemandEntries?.ensurePage({\n          page,\n          appPaths,\n          definition,\n          isApp,\n          url,\n        })\n      })\n  }\n\n  public close() {\n    // Report MCP telemetry if MCP server is enabled\n    recordMcpTelemetry(this.telemetry)\n\n    this.webpackHotMiddleware?.close()\n  }\n}\n"],"names":["HotReloaderWebpack","renderScriptError","MILLISECONDS_IN_NANOSECOND","BigInt","diff","a","b","Set","filter","v","has","wsServer","ws","Server","noServer","res","error","verbose","setHeader","code","finished","undefined","console","stack","statusCode","end","addCorsSupport","req","url","startsWith","preflight","headers","origin","method","writeHead","findEntryModule","module","compilation","issuer","moduleGraph","getIssuer","erroredPages","failedPages","errors","entryModule","name","enhancedName","getRouteFromEntrypoint","push","constructor","dir","config","isSrcDir","pagesDir","distDir","buildId","encryptionKey","previewProps","rewrites","appDir","telemetry","resetFetch","lockfile","onDevServerCleanup","clientError","serverError","hmrServerError","pagesMapping","versionInfo","staleness","installed","reloadAfterInvalidation","cacheStatusesByRequestId","Map","hasAppRouterEntrypoints","hasPagesRouterEntrypoints","middlewares","clientStats","serverStats","edgeServerStats","serverPrevDocumentHash","hotReloaderSpan","trace","version","process","env","__NEXT_VERSION","stop","mcpServerEnabled","experimental","mcpServer","fileLogger","getFileLogger","initialize","unlock","run","parsedUrl","handlePageBundleRequest","pageBundleRes","parsedPageBundleUrl","pathname","params","matchNextPageBundleRequest","decodedPagePath","path","map","param","decodeURIComponent","join","_","DecodeError","page","denormalizePagePath","BLOCKED_PAGES","indexOf","ensurePage","clientOnly","getProperError","getCompilationErrors","length","middleware","calledNext","setHmrServerError","clearHmrServerError","send","type","HMR_MESSAGE_SENT_TO_BROWSER","RELOAD_PAGE","data","refreshServerComponents","hash","SERVER_COMPONENT_CHANGES","onHMR","_socket","head","callback","handleUpgrade","socket","client","requestId","URL","searchParams","get","webpackHotMiddleware","InvariantError","onDemandEntries","enableCacheComponents","cacheComponents","isLegacyClient","addEventListener","toString","payload","JSON","parse","traceChild","event","spanName","startTime","Math","floor","attrs","attributes","endTime","updatedModules","m","replace","WEBPACK_LAYERS","appPagesBrowser","isPageHidden","errorCount","warningCount","stackTrace","hadRuntimeError","Log","warn","FAST_REFRESH_RUNTIME_RELOAD","fileMessage","file","exec","fileUrl","cwd","modules","getAll","filepath","slice","pagesDirBrowser","cleanedFilePath","browserDebugInfoInTerminal","receiveBrowserLogsWebpack","entries","router","sourceType","rootDirectory","handleClientFileLogs","logs","manualTraceChild","clientId","id","connectReactDebugChannel","sendToClient","bind","status","CACHE_INDICATOR","state","delete","on","deleteClient","deleteReactDebugChannel","clean","span","traceAsyncFn","recursiveDeleteSyncWithAsyncRetries","getWebpackConfig","webpackConfigSpan","pageExtensions","pagePaths","Promise","all","findPageFile","createPagesMapping","isDev","pagesType","PAGE_TYPES","PAGES","i","appDirOnly","Boolean","entrypoints","createEntrypoints","envFiles","pages","previewMode","rootDir","commonWebpackOptions","dev","originalRewrites","_originalRewrites","originalRedirects","_originalRedirects","runWebpackSpan","info","loadProjectInfo","getBaseWebpackConfig","compilerType","COMPILER_NAMES","server","edgeServer","buildFallbackError","fallbackWatcher","fallbackConfig","beforeFiles","afterFiles","fallback","isDevFallback","fallbackCompiler","getWebpackBundler","resolve","bootedFallbackCompiler","watch","watchOptions","_err","tracedGetVersionInfo","versionInfoSpan","getVersionInfo","start","startSpan","nodeDebugType","getNodeDebugType","devtoolsFrontendUrl","debugPort","debugInfo","debugInfoList","fetch","then","json","fs","mkdir","recursive","initialDevToolsConfig","getDevToolsConfig","distPackageJsonPath","writeFile","activeWebpackConfigs","defaultEntry","entry","args","outputPath","multiCompiler","getEntries","isClientCompilation","isNodeServerCompilation","isEdgeServerCompilation","Object","keys","entryKey","entryData","bundlePath","dispose","result","key","isEntry","EntryTypes","ENTRY","isChildEntry","CHILD_ENTRY","pageExists","existsSync","absolutePagePath","absoluteEntryFilePath","hasAppDir","isAppPath","staticInfo","getStaticInfoIncludingLayouts","isInsideAppDir","pageFilePath","isServerComponent","rsc","RSC_MODULE_TYPES","pageType","APP","ROOT","isInstrumentation","isInstrumentationHookFile","pageRuntime","runtime","runDependingOnPageType","onEdgeServer","BUILDING","normalizedBundlePath","finalizeEntrypoint","value","getInstrumentationEntry","isEdgeServer","appDirLoader","getAppEntry","appPaths","pagePath","posix","APP_DIR_ALIAS","relative","tsconfigPath","typescript","basePath","assetPrefix","nextConfigOutput","output","preferredRegion","middlewareConfig","Buffer","from","stringify","isGlobalNotFoundEnabled","globalNotFound","import","getEdgeServerEntry","onClient","request","getClientEntry","onServer","relativeRequest","context","isAbsolute","isMiddlewareFile","dirname","require","isAPIRoute","getRouteLoaderEntry","kind","RouteKind","PAGES_API","isInternalComponent","isNonRoutePagesPage","CLIENT_STATIC_FILES_RUNTIME_MAIN","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","parallelism","Array","getCacheDirectories","checkFileSystemCacheInvalidationAndCleanup","inputFileSystem","compilers","compiler","fsStartTime","Date","now","hooks","beforeRun","intercept","register","tapInfo","done","tap","purge","watchCompilers","changedClientPages","changedServerPages","changedEdgeServerPages","changedServerComponentPages","changedCSSImportPages","prevClientPageHashes","prevServerPageHashes","prevEdgeServerPageHashes","prevCSSImportModuleHashes","pageExtensionRegex","RegExp","trackPageChanges","pageHashMap","changedItems","serverComponentChangedItems","stats","forEach","isMiddlewareFilename","chunks","chunk","modsIterable","chunkGraph","getChunkModulesIterable","hasCSSModuleChanges","chunksHash","StringXor","chunksHashServerLayer","mod","resource","includes","test","createHash","update","originalSource","buffer","digest","layer","reactServerComponents","buildInfo","add","getModuleHash","resourceKey","prevHash","set","curHash","serverKey","prevServerHash","curServerHash","err","emit","failed","serverChunkNames","documentChunk","namedChunks","chunkNames","diffChunkNames","difference","every","chunkName","serverOnlyChanges","edgeServerOnlyChanges","pageChanges","concat","middlewareChanges","MIDDLEWARE_CHANGES","SERVER_ONLY_CHANGES","pg","size","clear","prevChunkNames","addedPages","removedPages","addedPage","ADDED_PAGE","removedPage","REMOVED_PAGE","WebpackHotMiddleware","booted","watcher","onDemandEntryHandler","hotReloader","nextConfig","getOverlayMiddleware","getSourceMapMiddleware","getNextErrorFeedbackMiddleware","getDevOverlayFontMiddleware","getDisableDevIndicatorMiddleware","getRestartDevServerMiddleware","webpackCacheDirectories","devToolsConfigMiddleware","sendUpdateSignal","updateDevToolsConfig","DEVTOOLS_CONFIG","getMcpMiddleware","projectPath","sendHmrMessage","message","getActiveConnectionCount","getClientCount","getDevServerUrl","__NEXT_PRIVATE_ORIGIN","setStackFrameResolver","getOriginalStackFrames","isServer","isAppDirectory","frames","invalidate","getInvalidator","getErrors","normalizedPage","normalizePathSep","hasErrors","publish","publishToClient","sendToLegacyClients","publishToLegacyClients","setCacheStatus","htmlRequestId","getClient","setReactDebugChannel","debugChannel","definition","isApp","inputPage","close","recordMcpTelemetry"],"mappings":"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","ignoreList":[0]}