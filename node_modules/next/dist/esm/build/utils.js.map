{"version":3,"sources":["../../src/build/utils.ts"],"sourcesContent":["import type { NextConfigComplete } from '../server/config-shared'\nimport type { ExperimentalPPRConfig } from '../server/lib/experimental/ppr'\nimport { checkIsRoutePPREnabled } from '../server/lib/experimental/ppr'\nimport type { AssetBinding } from './webpack/loaders/get-module-build-info'\nimport type { ServerRuntime } from '../types'\nimport type { BuildManifest } from '../server/get-page-files'\nimport type {\n  CustomRoutes,\n  Header,\n  Redirect,\n  Rewrite,\n} from '../lib/load-custom-routes'\nimport type {\n  EdgeFunctionDefinition,\n  MiddlewareManifest,\n} from './webpack/plugins/middleware-plugin'\nimport type { WebpackLayerName } from '../lib/constants'\nimport {\n  INSTRUMENTATION_HOOK_FILENAME,\n  MIDDLEWARE_FILENAME,\n  SERVER_PROPS_GET_INIT_PROPS_CONFLICT,\n  SERVER_PROPS_SSG_CONFLICT,\n  SSG_GET_INITIAL_PROPS_CONFLICT,\n  WEBPACK_LAYERS,\n  PROXY_FILENAME,\n} from '../lib/constants'\nimport type {\n  AppPageModule,\n  AppPageRouteModule,\n} from '../server/route-modules/app-page/module'\nimport type { NextComponentType } from '../shared/lib/utils'\n\nimport '../server/require-hook'\nimport '../server/node-polyfill-crypto'\nimport '../server/node-environment'\n\nimport { bold, cyan, green, red, underline, yellow } from '../lib/picocolors'\nimport textTable from 'next/dist/compiled/text-table'\nimport path from 'path'\nimport { promises as fs } from 'fs'\nimport { isValidElementType } from 'next/dist/compiled/react-is'\nimport stripAnsi from 'next/dist/compiled/strip-ansi'\nimport browserslist from 'next/dist/compiled/browserslist'\nimport {\n  MODERN_BROWSERSLIST_TARGET,\n  UNDERSCORE_GLOBAL_ERROR_ROUTE,\n  UNDERSCORE_GLOBAL_ERROR_ROUTE_ENTRY,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n} from '../shared/lib/constants'\nimport { isDynamicRoute } from '../shared/lib/router/utils/is-dynamic'\nimport { findPageFile } from '../server/lib/find-page-file'\nimport { isEdgeRuntime } from '../lib/is-edge-runtime'\nimport * as Log from './output/log'\nimport type { LoadComponentsReturnType } from '../server/load-components'\nimport { loadComponents } from '../server/load-components'\nimport { trace } from '../trace'\nimport { setHttpClientAndAgentOptions } from '../server/setup-http-agent-env'\nimport { Sema } from 'next/dist/compiled/async-sema'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { getRuntimeContext } from '../server/web/sandbox'\nimport { RouteKind } from '../server/route-kind'\nimport type { PageExtensions } from './page-extensions-type'\nimport type { FallbackMode } from '../lib/fallback'\nimport type { OutgoingHttpHeaders } from 'http'\nimport type { AppSegmentConfig } from './segment-config/app/app-segment-config'\nimport type { AppSegment } from './segment-config/app/app-segments'\nimport { collectSegments } from './segment-config/app/app-segments'\nimport { createIncrementalCache } from '../export/helpers/create-incremental-cache'\nimport { collectRootParamKeys } from './segment-config/app/collect-root-param-keys'\nimport { buildAppStaticPaths } from './static-paths/app'\nimport { buildPagesStaticPaths } from './static-paths/pages'\nimport type { PrerenderedRoute } from './static-paths/types'\nimport type { CacheControl } from '../server/lib/cache-control'\nimport { formatExpire, formatRevalidate } from './output/format'\nimport type { AppRouteRouteModule } from '../server/route-modules/app-route/module'\nimport { formatIssue, isRelevantWarning } from '../shared/lib/turbopack/utils'\nimport type { TurbopackResult } from './swc/types'\n\nexport type ROUTER_TYPE = 'pages' | 'app'\n\n// Use `print()` for expected console output\nconst print = console.log\n\nconst RESERVED_PAGE = /^\\/(_app|_error|_document|api(\\/|$))/\n\nexport function unique<T>(main: ReadonlyArray<T>, sub: ReadonlyArray<T>): T[] {\n  return [...new Set([...main, ...sub])]\n}\n\nexport function difference<T>(\n  main: ReadonlyArray<T> | ReadonlySet<T>,\n  sub: ReadonlyArray<T> | ReadonlySet<T>\n): T[] {\n  const a = new Set(main)\n  const b = new Set(sub)\n  return [...a].filter((x) => !b.has(x))\n}\n\nexport function isMiddlewareFilename(file?: string | null) {\n  return (\n    file === MIDDLEWARE_FILENAME ||\n    file === `src/${MIDDLEWARE_FILENAME}` ||\n    file === PROXY_FILENAME ||\n    file === `src/${PROXY_FILENAME}`\n  )\n}\n\nexport function isInstrumentationHookFilename(file?: string | null) {\n  return (\n    file === INSTRUMENTATION_HOOK_FILENAME ||\n    file === `src/${INSTRUMENTATION_HOOK_FILENAME}`\n  )\n}\n\nconst filterAndSortList = (\n  list: ReadonlyArray<string>,\n  routeType: ROUTER_TYPE,\n  hasCustomApp: boolean\n) => {\n  let pages: string[]\n  if (routeType === 'app') {\n    // filter out static app route of /favicon.ico and /_global-error\n    pages = list.filter((e) => {\n      if (e === '/favicon.ico') return false\n      // Hide static /_global-error from build output\n      if (e === '/_global-error') return false\n      return true\n    })\n  } else {\n    // filter built-in pages\n    pages = list\n      .slice()\n      .filter(\n        (e) =>\n          !(\n            e === '/_document' ||\n            e === '/_error' ||\n            (!hasCustomApp && e === '/_app')\n          )\n      )\n  }\n  return pages.sort((a, b) => a.localeCompare(b))\n}\n\nexport interface PageInfo {\n  originalAppPath: string | undefined\n  isStatic: boolean\n  isSSG: boolean\n  /**\n   * If true, it means that the route has partial prerendering enabled.\n   */\n  isRoutePPREnabled: boolean\n  ssgPageRoutes: string[] | null\n  initialCacheControl: CacheControl | undefined\n  pageDuration: number | undefined\n  ssgPageDurations: number[] | undefined\n  runtime: ServerRuntime\n  hasEmptyStaticShell?: boolean\n  hasPostponed?: boolean\n  isDynamicAppRoute?: boolean\n}\n\nexport type PageInfos = Map<string, PageInfo>\n\nexport interface RoutesUsingEdgeRuntime {\n  [route: string]: 0\n}\n\nexport function collectRoutesUsingEdgeRuntime(\n  input: PageInfos\n): RoutesUsingEdgeRuntime {\n  const routesUsingEdgeRuntime: RoutesUsingEdgeRuntime = {}\n  for (const [route, info] of input.entries()) {\n    if (isEdgeRuntime(info.runtime)) {\n      routesUsingEdgeRuntime[route] = 0\n    }\n  }\n\n  return routesUsingEdgeRuntime\n}\n\n/**\n * Processes and categorizes build issues, then logs them as warnings, errors, or fatal errors.\n * Stops execution if fatal issues are encountered.\n *\n * @param entrypoints - The result object containing build issues to process.\n * @param isDev - A flag indicating if the build is running in development mode.\n * @return This function does not return a value but logs or throws errors based on the issues.\n * @throws {Error} If a fatal issue is encountered, this function throws an error. In development mode, we only throw on\n *                 'fatal' and 'bug' issues. In production mode, we also throw on 'error' issues.\n */\nexport function printBuildErrors(\n  entrypoints: TurbopackResult,\n  isDev: boolean\n): void {\n  // Issues that we want to stop the server from executing\n  const topLevelFatalIssues = []\n  // Issues that are true errors, but we believe we can keep running and allow the user to address the issue\n  const topLevelErrors = []\n  // Issues that are warnings but should not affect the running of the build\n  const topLevelWarnings = []\n\n  // Track seen formatted error messages to avoid duplicates\n  const seenFatalIssues = new Set<string>()\n  const seenErrors = new Set<string>()\n  const seenWarnings = new Set<string>()\n\n  for (const issue of entrypoints.issues) {\n    // We only want to completely shut down the server\n    if (issue.severity === 'fatal' || issue.severity === 'bug') {\n      const formatted = formatIssue(issue)\n      if (!seenFatalIssues.has(formatted)) {\n        seenFatalIssues.add(formatted)\n        topLevelFatalIssues.push(formatted)\n      }\n    } else if (isRelevantWarning(issue)) {\n      const formatted = formatIssue(issue)\n      if (!seenWarnings.has(formatted)) {\n        seenWarnings.add(formatted)\n        topLevelWarnings.push(formatted)\n      }\n    } else if (issue.severity === 'error') {\n      const formatted = formatIssue(issue)\n      if (isDev) {\n        // We want to treat errors as recoverable in development\n        // so that we can show the errors in the site and allow users\n        // to respond to the errors when necessary. In production builds\n        // though we want to error out and stop the build process.\n        if (!seenErrors.has(formatted)) {\n          seenErrors.add(formatted)\n          topLevelErrors.push(formatted)\n        }\n      } else {\n        if (!seenFatalIssues.has(formatted)) {\n          seenFatalIssues.add(formatted)\n          topLevelFatalIssues.push(formatted)\n        }\n      }\n    }\n  }\n  // TODO: print in order by source location so issues from the same file are displayed together and then add a summary at the end about the number of warnings/errors\n  if (topLevelWarnings.length > 0) {\n    console.warn(\n      `Turbopack build encountered ${\n        topLevelWarnings.length\n      } warnings:\\n${topLevelWarnings.join('\\n')}`\n    )\n  }\n\n  if (topLevelErrors.length > 0) {\n    console.error(\n      `Turbopack build encountered ${\n        topLevelErrors.length\n      } errors:\\n${topLevelErrors.join('\\n')}`\n    )\n  }\n\n  if (topLevelFatalIssues.length > 0) {\n    throw new Error(\n      `Turbopack build failed with ${\n        topLevelFatalIssues.length\n      } errors:\\n${topLevelFatalIssues.join('\\n')}`\n    )\n  }\n}\n\nexport async function printTreeView(\n  lists: {\n    pages: ReadonlyArray<string>\n    app: ReadonlyArray<string> | undefined\n  },\n  pageInfos: Map<string, PageInfo>,\n  {\n    pagesDir,\n    pageExtensions,\n    middlewareManifest,\n    useStaticPages404,\n    hasGSPAndRevalidateZero,\n  }: {\n    pagesDir?: string\n    pageExtensions: PageExtensions\n    buildManifest: BuildManifest\n    middlewareManifest: MiddlewareManifest\n    useStaticPages404: boolean\n    hasGSPAndRevalidateZero: Set<string>\n  }\n) {\n  // Can be overridden for test purposes to omit the build duration output.\n  const MIN_DURATION = process.env.__NEXT_PRIVATE_DETERMINISTIC_BUILD_OUTPUT\n    ? Infinity // Don't ever log build durations.\n    : 300\n\n  const getPrettyDuration = (_duration: number): string => {\n    const duration = `${_duration} ms`\n    // green for 300-1000ms\n    if (_duration < 1000) return green(duration)\n    // yellow for 1000-2000ms\n    if (_duration < 2000) return yellow(duration)\n    // red for >= 2000ms\n    return red(bold(duration))\n  }\n\n  // Check if we have a custom app.\n  const hasCustomApp = !!(\n    pagesDir && (await findPageFile(pagesDir, '/_app', pageExtensions, false))\n  )\n\n  // Collect all the symbols we use so we can print the icons out.\n  const usedSymbols = new Set()\n\n  const messages: string[][] = []\n\n  const printFileTree = async ({\n    list,\n    routerType,\n  }: {\n    list: ReadonlyArray<string>\n    routerType: ROUTER_TYPE\n  }) => {\n    const filteredPages = filterAndSortList(list, routerType, hasCustomApp)\n    if (filteredPages.length === 0) {\n      return\n    }\n\n    let showRevalidate = false\n    let showExpire = false\n\n    for (const page of filteredPages) {\n      const cacheControl = pageInfos.get(page)?.initialCacheControl\n\n      if (cacheControl?.revalidate) {\n        showRevalidate = true\n      }\n\n      if (cacheControl?.expire) {\n        showExpire = true\n      }\n\n      if (showRevalidate && showExpire) {\n        break\n      }\n    }\n\n    messages.push(\n      [\n        routerType === 'app' ? 'Route (app)' : 'Route (pages)',\n        showRevalidate ? 'Revalidate' : '',\n        showExpire ? 'Expire' : '',\n      ]\n        .filter((entry) => entry !== '')\n        .map((entry) => underline(entry))\n    )\n\n    filteredPages.forEach((item, i, arr) => {\n      const border =\n        i === 0\n          ? arr.length === 1\n            ? '─'\n            : '┌'\n          : i === arr.length - 1\n            ? '└'\n            : '├'\n\n      const pageInfo = pageInfos.get(item)\n      const totalDuration =\n        (pageInfo?.pageDuration || 0) +\n        (pageInfo?.ssgPageDurations?.reduce((a, b) => a + (b || 0), 0) || 0)\n\n      let symbol: string\n\n      if (item === '/_app' || item === '/_app.server') {\n        symbol = ' '\n      } else if (isEdgeRuntime(pageInfo?.runtime)) {\n        symbol = 'ƒ'\n      } else if (pageInfo?.isRoutePPREnabled) {\n        if (\n          // If the page has an empty static shell, then it's equivalent to a\n          // dynamic page\n          pageInfo?.hasEmptyStaticShell ||\n          // ensure we don't mark dynamic paths that postponed as being dynamic\n          // since in this case we're able to partially prerender it\n          (pageInfo.isDynamicAppRoute && !pageInfo.hasPostponed)\n        ) {\n          symbol = 'ƒ'\n        } else if (!pageInfo?.hasPostponed) {\n          symbol = '○'\n        } else {\n          symbol = '◐'\n        }\n      } else if (pageInfo?.isStatic) {\n        symbol = '○'\n      } else if (pageInfo?.isSSG) {\n        symbol = '●'\n      } else {\n        symbol = 'ƒ'\n      }\n\n      if (hasGSPAndRevalidateZero.has(item)) {\n        usedSymbols.add('ƒ')\n        messages.push([\n          `${border} ƒ ${item}${\n            totalDuration > MIN_DURATION\n              ? ` (${getPrettyDuration(totalDuration)})`\n              : ''\n          }`,\n          showRevalidate && pageInfo?.initialCacheControl\n            ? formatRevalidate(pageInfo.initialCacheControl)\n            : '',\n          showExpire && pageInfo?.initialCacheControl\n            ? formatExpire(pageInfo.initialCacheControl)\n            : '',\n        ])\n      }\n\n      usedSymbols.add(symbol)\n\n      messages.push([\n        `${border} ${symbol} ${item}${\n          totalDuration > MIN_DURATION\n            ? ` (${getPrettyDuration(totalDuration)})`\n            : ''\n        }`,\n        showRevalidate && pageInfo?.initialCacheControl\n          ? formatRevalidate(pageInfo.initialCacheControl)\n          : '',\n        showExpire && pageInfo?.initialCacheControl\n          ? formatExpire(pageInfo.initialCacheControl)\n          : '',\n      ])\n\n      if (pageInfo?.ssgPageRoutes?.length) {\n        const totalRoutes = pageInfo.ssgPageRoutes.length\n        const contSymbol = i === arr.length - 1 ? ' ' : '│'\n\n        // HERE\n\n        let routes: { route: string; duration: number; avgDuration?: number }[]\n        if (pageInfo.ssgPageDurations?.some((d) => d > MIN_DURATION)) {\n          const previewPages = totalRoutes === 8 ? 8 : Math.min(totalRoutes, 7)\n          const routesWithDuration = pageInfo.ssgPageRoutes\n            .map((route, idx) => ({\n              route,\n              duration: pageInfo.ssgPageDurations![idx] || 0,\n            }))\n            .sort(({ duration: a }, { duration: b }) =>\n              // Sort by duration\n              // keep too small durations in original order at the end\n              a <= MIN_DURATION && b <= MIN_DURATION ? 0 : b - a\n            )\n          routes = routesWithDuration.slice(0, previewPages)\n          const remainingRoutes = routesWithDuration.slice(previewPages)\n          if (remainingRoutes.length) {\n            const remaining = remainingRoutes.length\n            const avgDuration = Math.round(\n              remainingRoutes.reduce(\n                (total, { duration }) => total + duration,\n                0\n              ) / remainingRoutes.length\n            )\n            routes.push({\n              route: `[+${remaining} more paths]`,\n              duration: 0,\n              avgDuration,\n            })\n          }\n        } else {\n          const previewPages = totalRoutes === 4 ? 4 : Math.min(totalRoutes, 3)\n          routes = pageInfo.ssgPageRoutes\n            .slice(0, previewPages)\n            .map((route) => ({ route, duration: 0 }))\n          if (totalRoutes > previewPages) {\n            const remaining = totalRoutes - previewPages\n            routes.push({ route: `[+${remaining} more paths]`, duration: 0 })\n          }\n        }\n\n        routes.forEach(\n          ({ route, duration, avgDuration }, index, { length }) => {\n            const innerSymbol = index === length - 1 ? '└' : '├'\n\n            const initialCacheControl =\n              pageInfos.get(route)?.initialCacheControl\n\n            messages.push([\n              `${contSymbol} ${innerSymbol} ${route}${\n                duration > MIN_DURATION\n                  ? ` (${getPrettyDuration(duration)})`\n                  : ''\n              }${\n                avgDuration && avgDuration > MIN_DURATION\n                  ? ` (avg ${getPrettyDuration(avgDuration)})`\n                  : ''\n              }`,\n              showRevalidate && initialCacheControl\n                ? formatRevalidate(initialCacheControl)\n                : '',\n              showExpire && initialCacheControl\n                ? formatExpire(initialCacheControl)\n                : '',\n            ])\n          }\n        )\n      }\n    })\n  }\n\n  // If enabled, then print the tree for the app directory.\n  if (lists.app) {\n    await printFileTree({\n      routerType: 'app',\n      list: lists.app,\n    })\n\n    messages.push(['', '', '', ''])\n  }\n\n  pageInfos.set('/404', {\n    ...(pageInfos.get('/404') || pageInfos.get('/_error'))!,\n    isStatic: useStaticPages404,\n  })\n\n  // If there's no app /_notFound page present, then the 404 is still using the pages/404\n  if (\n    !lists.pages.includes('/404') &&\n    !lists.app?.includes(UNDERSCORE_NOT_FOUND_ROUTE)\n  ) {\n    lists.pages = [...lists.pages, '/404']\n  }\n\n  // Print the tree view for the pages directory.\n  await printFileTree({\n    routerType: 'pages',\n    list: lists.pages,\n  })\n\n  const middlewareInfo = middlewareManifest.middleware?.['/']\n  if (middlewareInfo?.files.length > 0) {\n    messages.push([])\n    messages.push(['ƒ Proxy (Middleware)'])\n  }\n\n  print(\n    textTable(messages, {\n      align: ['l', 'r', 'r', 'r'],\n      stringLength: (str) => stripAnsi(str).length,\n    })\n  )\n\n  const staticFunctionInfo = lists.app\n    ? 'generateStaticParams'\n    : 'getStaticProps'\n  print()\n  print(\n    textTable(\n      [\n        usedSymbols.has('○') && [\n          '○',\n          '(Static)',\n          'prerendered as static content',\n        ],\n        usedSymbols.has('●') && [\n          '●',\n          '(SSG)',\n          `prerendered as static HTML (uses ${cyan(staticFunctionInfo)})`,\n        ],\n        usedSymbols.has('◐') && [\n          '◐',\n          '(Partial Prerender)',\n          'prerendered as static HTML with dynamic server-streamed content',\n        ],\n        usedSymbols.has('ƒ') && ['ƒ', '(Dynamic)', `server-rendered on demand`],\n      ].filter((x) => x) as [string, string, string][],\n      {\n        align: ['l', 'l', 'l'],\n        stringLength: (str) => stripAnsi(str).length,\n      }\n    )\n  )\n\n  print()\n}\n\nexport function printCustomRoutes({\n  redirects,\n  rewrites,\n  headers,\n}: CustomRoutes) {\n  const printRoutes = (\n    routes: Redirect[] | Rewrite[] | Header[],\n    type: 'Redirects' | 'Rewrites' | 'Headers'\n  ) => {\n    const isRedirects = type === 'Redirects'\n    const isHeaders = type === 'Headers'\n    print(underline(type))\n\n    /*\n        ┌ source\n        ├ permanent/statusCode\n        └ destination\n     */\n    const routesStr = (routes as any[])\n      .map((route: { source: string }) => {\n        let routeStr = `┌ source: ${route.source}\\n`\n\n        if (!isHeaders) {\n          const r = route as Rewrite\n          routeStr += `${isRedirects ? '├' : '└'} destination: ${\n            r.destination\n          }\\n`\n        }\n        if (isRedirects) {\n          const r = route as Redirect\n          routeStr += `└ ${\n            r.statusCode\n              ? `status: ${r.statusCode}`\n              : `permanent: ${r.permanent}`\n          }\\n`\n        }\n\n        if (isHeaders) {\n          const r = route as Header\n          routeStr += `└ headers:\\n`\n\n          for (let i = 0; i < r.headers.length; i++) {\n            const header = r.headers[i]\n            const last = i === headers.length - 1\n\n            routeStr += `  ${last ? '└' : '├'} ${header.key}: ${header.value}\\n`\n          }\n        }\n\n        return routeStr\n      })\n      .join('\\n')\n\n    print(`${routesStr}\\n`)\n  }\n\n  print()\n  if (redirects.length) {\n    printRoutes(redirects, 'Redirects')\n  }\n  if (headers.length) {\n    printRoutes(headers, 'Headers')\n  }\n\n  const combinedRewrites = [\n    ...rewrites.beforeFiles,\n    ...rewrites.afterFiles,\n    ...rewrites.fallback,\n  ]\n  if (combinedRewrites.length) {\n    printRoutes(combinedRewrites, 'Rewrites')\n  }\n}\n\ntype PageIsStaticResult = {\n  isRoutePPREnabled?: boolean\n  isStatic?: boolean\n  hasServerProps?: boolean\n  hasStaticProps?: boolean\n  prerenderedRoutes: PrerenderedRoute[] | undefined\n  prerenderFallbackMode: FallbackMode | undefined\n  rootParamKeys: readonly string[] | undefined\n  isNextImageImported?: boolean\n  traceIncludes?: string[]\n  traceExcludes?: string[]\n  appConfig?: AppSegmentConfig\n}\n\nexport async function isPageStatic({\n  dir,\n  page,\n  distDir,\n  configFileName,\n  httpAgentOptions,\n  locales,\n  defaultLocale,\n  parentId,\n  pageRuntime,\n  edgeInfo,\n  pageType,\n  cacheComponents,\n  authInterrupts,\n  originalAppPath,\n  isrFlushToDisk,\n  cacheMaxMemorySize,\n  nextConfigOutput,\n  cacheHandler,\n  cacheHandlers,\n  cacheLifeProfiles,\n  pprConfig,\n  buildId,\n  sriEnabled,\n}: {\n  dir: string\n  page: string\n  distDir: string\n  cacheComponents: boolean\n  authInterrupts: boolean\n  configFileName: string\n  httpAgentOptions: NextConfigComplete['httpAgentOptions']\n  locales?: readonly string[]\n  defaultLocale?: string\n  parentId?: any\n  edgeInfo?: any\n  pageType?: 'pages' | 'app'\n  pageRuntime?: ServerRuntime\n  originalAppPath?: string\n  isrFlushToDisk?: boolean\n  cacheMaxMemorySize: number\n  cacheHandler?: string\n  cacheHandlers?: Record<string, string | undefined>\n  cacheLifeProfiles?: {\n    [profile: string]: import('../server/use-cache/cache-life').CacheLife\n  }\n  nextConfigOutput: 'standalone' | 'export' | undefined\n  pprConfig: ExperimentalPPRConfig | undefined\n  buildId: string\n  sriEnabled: boolean\n}): Promise<PageIsStaticResult> {\n  // Skip page data collection for synthetic _global-error routes\n  if (page === UNDERSCORE_GLOBAL_ERROR_ROUTE) {\n    return {\n      isStatic: true,\n      isRoutePPREnabled: false,\n      prerenderFallbackMode: undefined,\n      prerenderedRoutes: undefined,\n      rootParamKeys: undefined,\n      hasStaticProps: false,\n      hasServerProps: false,\n      isNextImageImported: false,\n      appConfig: {},\n    }\n  }\n\n  await createIncrementalCache({\n    cacheHandler,\n    cacheHandlers,\n    distDir,\n    dir,\n    flushToDisk: isrFlushToDisk,\n    cacheMaxMemorySize,\n  })\n\n  const isPageStaticSpan = trace('is-page-static-utils', parentId)\n  return isPageStaticSpan\n    .traceAsyncFn(async (): Promise<PageIsStaticResult> => {\n      setHttpClientAndAgentOptions({\n        httpAgentOptions,\n      })\n\n      let componentsResult: LoadComponentsReturnType\n      let prerenderedRoutes: PrerenderedRoute[] | undefined\n      let prerenderFallbackMode: FallbackMode | undefined\n      let appConfig: AppSegmentConfig = {}\n      let rootParamKeys: readonly string[] | undefined\n      const pathIsEdgeRuntime = isEdgeRuntime(pageRuntime)\n\n      if (pathIsEdgeRuntime) {\n        const runtime = await getRuntimeContext({\n          paths: edgeInfo.files.map((file: string) => path.join(distDir, file)),\n          edgeFunctionEntry: {\n            ...edgeInfo,\n            wasm: (edgeInfo.wasm ?? []).map((binding: AssetBinding) => ({\n              ...binding,\n              filePath: path.join(distDir, binding.filePath),\n            })),\n          },\n          name: edgeInfo.name,\n          useCache: true,\n          distDir,\n        })\n        const mod = (\n          await runtime.context._ENTRIES[`middleware_${edgeInfo.name}`]\n        ).ComponentMod\n\n        // This is not needed during require.\n        const buildManifest = {} as BuildManifest\n\n        componentsResult = {\n          Component: mod.default,\n          Document: mod.Document,\n          App: mod.App,\n          routeModule: mod.routeModule,\n          page,\n          ComponentMod: mod,\n          pageConfig: mod.config || {},\n          buildManifest,\n          reactLoadableManifest: {},\n          getServerSideProps: mod.getServerSideProps,\n          getStaticPaths: mod.getStaticPaths,\n          getStaticProps: mod.getStaticProps,\n        }\n      } else {\n        componentsResult = await loadComponents({\n          distDir,\n          page: originalAppPath || page,\n          isAppPath: pageType === 'app',\n          isDev: false,\n          sriEnabled,\n          needsManifestsForLegacyReasons: true,\n        })\n      }\n\n      const { Component, routeModule } = componentsResult\n\n      const Comp = Component as NextComponentType | undefined\n\n      let isRoutePPREnabled: boolean = false\n\n      if (pageType === 'app') {\n        const ComponentMod: AppPageModule = componentsResult.ComponentMod\n\n        let segments: AppSegment[]\n        try {\n          segments = await collectSegments(\n            // We know this is an app page or app route module because we\n            // checked above that the page type is 'app'.\n            routeModule as AppPageRouteModule | AppRouteRouteModule\n          )\n        } catch (err) {\n          throw new Error(`Failed to collect configuration for ${page}`, {\n            cause: err,\n          })\n        }\n\n        appConfig =\n          originalAppPath === UNDERSCORE_GLOBAL_ERROR_ROUTE_ENTRY\n            ? {}\n            : reduceAppConfig(segments)\n\n        if (appConfig.dynamic === 'force-static' && pathIsEdgeRuntime) {\n          Log.warn(\n            `Page \"${page}\" is using runtime = 'edge' which is currently incompatible with dynamic = 'force-static'. Please remove either \"runtime\" or \"force-static\" for correct behavior`\n          )\n        }\n\n        rootParamKeys = collectRootParamKeys(routeModule)\n\n        // A page supports partial prerendering if it is an app page and either\n        // the whole app has PPR enabled or this page has PPR enabled when we're\n        // in incremental mode.\n        isRoutePPREnabled =\n          routeModule.definition.kind === RouteKind.APP_PAGE &&\n          checkIsRoutePPREnabled(pprConfig)\n\n        // If force dynamic was set and we don't have PPR enabled, then set the\n        // revalidate to 0.\n        // TODO: (PPR) remove this once PPR is enabled by default\n        if (appConfig.dynamic === 'force-dynamic' && !isRoutePPREnabled) {\n          appConfig.revalidate = 0\n        }\n\n        // If the page is dynamic and we're not in edge runtime, then we need to\n        // build the static paths. The edge runtime doesn't support static\n        // paths.\n        if (isDynamicRoute(page) && !pathIsEdgeRuntime) {\n          ;({ prerenderedRoutes, fallbackMode: prerenderFallbackMode } =\n            await buildAppStaticPaths({\n              dir,\n              page,\n              cacheComponents,\n              authInterrupts,\n              segments,\n              distDir,\n              requestHeaders: {},\n              isrFlushToDisk,\n              cacheMaxMemorySize,\n              cacheHandler,\n              cacheLifeProfiles,\n              ComponentMod,\n              nextConfigOutput,\n              isRoutePPREnabled,\n              buildId,\n              rootParamKeys,\n            }))\n        }\n      } else {\n        if (!Comp || !isValidElementType(Comp) || typeof Comp === 'string') {\n          throw new Error('INVALID_DEFAULT_EXPORT')\n        }\n      }\n\n      const hasGetInitialProps = !!Comp?.getInitialProps\n      const hasStaticProps = !!componentsResult.getStaticProps\n      const hasStaticPaths = !!componentsResult.getStaticPaths\n      const hasServerProps = !!componentsResult.getServerSideProps\n\n      // A page cannot be prerendered _and_ define a data requirement. That's\n      // contradictory!\n      if (hasGetInitialProps && hasStaticProps) {\n        throw new Error(SSG_GET_INITIAL_PROPS_CONFLICT)\n      }\n\n      if (hasGetInitialProps && hasServerProps) {\n        throw new Error(SERVER_PROPS_GET_INIT_PROPS_CONFLICT)\n      }\n\n      if (hasStaticProps && hasServerProps) {\n        throw new Error(SERVER_PROPS_SSG_CONFLICT)\n      }\n\n      const pageIsDynamic = isDynamicRoute(page)\n      // A page cannot have static parameters if it is not a dynamic page.\n      if (hasStaticProps && hasStaticPaths && !pageIsDynamic) {\n        throw new Error(\n          `getStaticPaths can only be used with dynamic pages, not '${page}'.` +\n            `\\nLearn more: https://nextjs.org/docs/routing/dynamic-routes`\n        )\n      }\n\n      if (hasStaticProps && pageIsDynamic && !hasStaticPaths) {\n        throw new Error(\n          `getStaticPaths is required for dynamic SSG pages and is missing for '${page}'.` +\n            `\\nRead more: https://nextjs.org/docs/messages/invalid-getstaticpaths-value`\n        )\n      }\n\n      if (hasStaticProps && hasStaticPaths) {\n        ;({ prerenderedRoutes, fallbackMode: prerenderFallbackMode } =\n          await buildPagesStaticPaths({\n            page,\n            locales,\n            defaultLocale,\n            configFileName,\n            getStaticPaths: componentsResult.getStaticPaths!,\n          }))\n      }\n\n      const isNextImageImported = (globalThis as any).__NEXT_IMAGE_IMPORTED\n\n      let isStatic = false\n      if (!hasStaticProps && !hasGetInitialProps && !hasServerProps) {\n        isStatic = true\n      }\n\n      // When PPR is enabled, any route may be completely static, so\n      // mark this route as static.\n      if (isRoutePPREnabled) {\n        isStatic = true\n      }\n\n      return {\n        isStatic,\n        isRoutePPREnabled,\n        prerenderFallbackMode,\n        prerenderedRoutes,\n        rootParamKeys,\n        hasStaticProps,\n        hasServerProps,\n        isNextImageImported,\n        appConfig,\n      }\n    })\n    .catch((err) => {\n      if (err.message === 'INVALID_DEFAULT_EXPORT') {\n        throw err\n      }\n      console.error(err)\n      throw new Error(`Failed to collect page data for ${page}`)\n    })\n}\n\ntype ReducedAppConfig = Pick<\n  AppSegmentConfig,\n  | 'revalidate'\n  | 'dynamic'\n  | 'fetchCache'\n  | 'preferredRegion'\n  | 'runtime'\n  | 'maxDuration'\n>\n\n/**\n * Collect the app config from the generate param segments. This only gets a\n * subset of the config options.\n *\n * @param segments the generate param segments\n * @returns the reduced app config\n */\nexport function reduceAppConfig(\n  segments: Pick<AppSegment, 'config'>[]\n): ReducedAppConfig {\n  const config: ReducedAppConfig = {}\n\n  for (const segment of segments) {\n    const {\n      dynamic,\n      fetchCache,\n      preferredRegion,\n      revalidate,\n      runtime,\n      maxDuration,\n    } = segment.config || {}\n\n    // TODO: should conflicting configs here throw an error\n    // e.g. if layout defines one region but page defines another\n\n    if (typeof preferredRegion !== 'undefined') {\n      config.preferredRegion = preferredRegion\n    }\n\n    if (typeof dynamic !== 'undefined') {\n      config.dynamic = dynamic\n    }\n\n    if (typeof fetchCache !== 'undefined') {\n      config.fetchCache = fetchCache\n    }\n\n    if (typeof revalidate !== 'undefined') {\n      config.revalidate = revalidate\n    }\n\n    // Any revalidate number overrides false, and shorter revalidate overrides\n    // longer (initially).\n    if (\n      typeof revalidate === 'number' &&\n      (typeof config.revalidate !== 'number' || revalidate < config.revalidate)\n    ) {\n      config.revalidate = revalidate\n    }\n\n    if (typeof runtime !== 'undefined') {\n      config.runtime = runtime\n    }\n\n    if (typeof maxDuration !== 'undefined') {\n      config.maxDuration = maxDuration\n    }\n  }\n\n  return config\n}\n\nexport async function hasCustomGetInitialProps({\n  page,\n  distDir,\n  checkingApp,\n  sriEnabled,\n}: {\n  page: string\n  distDir: string\n  checkingApp: boolean\n  sriEnabled: boolean\n}): Promise<boolean> {\n  const { ComponentMod } = await loadComponents({\n    distDir,\n    page: page,\n    isAppPath: false,\n    isDev: false,\n    sriEnabled,\n    needsManifestsForLegacyReasons: true,\n  })\n  let mod = ComponentMod\n\n  if (checkingApp) {\n    mod = (await mod._app) || mod.default || mod\n  } else {\n    mod = mod.default || mod\n  }\n  mod = await mod\n  return mod.getInitialProps !== mod.origGetInitialProps\n}\n\nexport async function getDefinedNamedExports({\n  page,\n  distDir,\n  sriEnabled,\n}: {\n  page: string\n  distDir: string\n  sriEnabled: boolean\n}): Promise<ReadonlyArray<string>> {\n  const { ComponentMod } = await loadComponents({\n    distDir,\n    page: page,\n    isAppPath: false,\n    isDev: false,\n    sriEnabled,\n    needsManifestsForLegacyReasons: true,\n  })\n\n  return Object.keys(ComponentMod).filter((key) => {\n    return typeof ComponentMod[key] !== 'undefined'\n  })\n}\n\nexport function detectConflictingPaths(\n  combinedPages: string[],\n  ssgPages: Set<string>,\n  additionalGeneratedSSGPaths: Map<string, string[]>\n) {\n  const conflictingPaths = new Map<\n    string,\n    Array<{\n      path: string\n      page: string\n    }>\n  >()\n\n  const dynamicSsgPages = [...ssgPages].filter((page) => isDynamicRoute(page))\n  const additionalSsgPathsByPath: {\n    [page: string]: { [path: string]: string }\n  } = {}\n\n  additionalGeneratedSSGPaths.forEach((paths, pathsPage) => {\n    additionalSsgPathsByPath[pathsPage] ||= {}\n    paths.forEach((curPath) => {\n      const currentPath = curPath.toLowerCase()\n      additionalSsgPathsByPath[pathsPage][currentPath] = curPath\n    })\n  })\n\n  additionalGeneratedSSGPaths.forEach((paths, pathsPage) => {\n    paths.forEach((curPath) => {\n      const lowerPath = curPath.toLowerCase()\n      let conflictingPage = combinedPages.find(\n        (page) => page.toLowerCase() === lowerPath\n      )\n\n      if (conflictingPage) {\n        conflictingPaths.set(lowerPath, [\n          { path: curPath, page: pathsPage },\n          { path: conflictingPage, page: conflictingPage },\n        ])\n      } else {\n        let conflictingPath: string | undefined\n\n        conflictingPage = dynamicSsgPages.find((page) => {\n          if (page === pathsPage) return false\n\n          conflictingPath =\n            additionalGeneratedSSGPaths.get(page) == null\n              ? undefined\n              : additionalSsgPathsByPath[page][lowerPath]\n          return conflictingPath\n        })\n\n        if (conflictingPage && conflictingPath) {\n          conflictingPaths.set(lowerPath, [\n            { path: curPath, page: pathsPage },\n            { path: conflictingPath, page: conflictingPage },\n          ])\n        }\n      }\n    })\n  })\n\n  if (conflictingPaths.size > 0) {\n    let conflictingPathsOutput = ''\n\n    conflictingPaths.forEach((pathItems) => {\n      pathItems.forEach((pathItem, idx) => {\n        const isDynamic = pathItem.page !== pathItem.path\n\n        if (idx > 0) {\n          conflictingPathsOutput += 'conflicts with '\n        }\n\n        conflictingPathsOutput += `path: \"${pathItem.path}\"${\n          isDynamic ? ` from page: \"${pathItem.page}\" ` : ' '\n        }`\n      })\n      conflictingPathsOutput += '\\n'\n    })\n\n    Log.error(\n      'Conflicting paths returned from getStaticPaths, paths must be unique per page.\\n' +\n        'See more info here: https://nextjs.org/docs/messages/conflicting-ssg-paths\\n\\n' +\n        conflictingPathsOutput\n    )\n    process.exit(1)\n  }\n}\n\nexport async function copyTracedFiles(\n  dir: string,\n  distDir: string,\n  pageKeys: readonly string[],\n  appPageKeys: readonly string[] | undefined,\n  tracingRoot: string,\n  serverConfig: NextConfigComplete,\n  middlewareManifest: MiddlewareManifest,\n  hasNodeMiddleware: boolean,\n  hasInstrumentationHook: boolean,\n  staticPages: Set<string>\n) {\n  const outputPath = path.join(distDir, 'standalone')\n\n  // Clean up standalone directory first.\n  await fs.rm(outputPath, { recursive: true, force: true })\n\n  let moduleType = false\n  const nextConfig = {\n    ...serverConfig,\n    distDir: `./${path.relative(dir, distDir)}`,\n  }\n  try {\n    const packageJsonPath = path.join(distDir, '../package.json')\n    const packageJsonContent = await fs.readFile(packageJsonPath, 'utf8')\n    const packageJson = JSON.parse(packageJsonContent)\n    moduleType = packageJson.type === 'module'\n\n    // we always copy the package.json to the standalone\n    // folder to ensure any resolving logic is maintained\n    const packageJsonOutputPath = path.join(\n      outputPath,\n      path.relative(tracingRoot, dir),\n      'package.json'\n    )\n    await fs.mkdir(path.dirname(packageJsonOutputPath), { recursive: true })\n    await fs.writeFile(packageJsonOutputPath, packageJsonContent)\n  } catch {}\n  const copiedFiles = new Set()\n\n  async function handleTraceFiles(traceFilePath: string) {\n    const traceData = JSON.parse(await fs.readFile(traceFilePath, 'utf8')) as {\n      files: string[]\n    }\n    const copySema = new Sema(10, { capacity: traceData.files.length })\n    const traceFileDir = path.dirname(traceFilePath)\n\n    await Promise.all(\n      traceData.files.map(async (relativeFile) => {\n        await copySema.acquire()\n\n        const tracedFilePath = path.join(traceFileDir, relativeFile)\n        const fileOutputPath = path.join(\n          outputPath,\n          path.relative(tracingRoot, tracedFilePath)\n        )\n\n        if (!copiedFiles.has(fileOutputPath)) {\n          copiedFiles.add(fileOutputPath)\n\n          await fs.mkdir(path.dirname(fileOutputPath), { recursive: true })\n          const symlink = await fs.readlink(tracedFilePath).catch(() => null)\n\n          if (symlink) {\n            try {\n              await fs.symlink(symlink, fileOutputPath)\n            } catch (e: any) {\n              if (e.code !== 'EEXIST') {\n                throw e\n              }\n            }\n          } else {\n            await fs.copyFile(tracedFilePath, fileOutputPath)\n          }\n        }\n\n        await copySema.release()\n      })\n    )\n  }\n\n  async function handleEdgeFunction(page: EdgeFunctionDefinition) {\n    async function handleFile(file: string) {\n      const originalPath = path.join(distDir, file)\n      const fileOutputPath = path.join(\n        outputPath,\n        path.relative(tracingRoot, distDir),\n        file\n      )\n      await fs.mkdir(path.dirname(fileOutputPath), { recursive: true })\n      await fs.copyFile(originalPath, fileOutputPath)\n    }\n    await Promise.all([\n      page.files.map(handleFile),\n      page.wasm?.map((file) => handleFile(file.filePath)),\n      page.assets?.map((file) => handleFile(file.filePath)),\n    ])\n  }\n\n  const edgeFunctionHandlers: Promise<any>[] = []\n\n  for (const middleware of Object.values(middlewareManifest.middleware)) {\n    if (isMiddlewareFilename(middleware.name)) {\n      edgeFunctionHandlers.push(handleEdgeFunction(middleware))\n    }\n  }\n\n  for (const page of Object.values(middlewareManifest.functions)) {\n    edgeFunctionHandlers.push(handleEdgeFunction(page))\n  }\n\n  await Promise.all(edgeFunctionHandlers)\n\n  for (const page of pageKeys) {\n    if (middlewareManifest.functions.hasOwnProperty(page)) {\n      continue\n    }\n    const route = normalizePagePath(page)\n\n    if (staticPages.has(route)) {\n      continue\n    }\n\n    const pageFile = path.join(\n      distDir,\n      'server',\n      'pages',\n      `${normalizePagePath(page)}.js`\n    )\n    const pageTraceFile = `${pageFile}.nft.json`\n    await handleTraceFiles(pageTraceFile).catch((err) => {\n      if (err.code !== 'ENOENT' || (page !== '/404' && page !== '/500')) {\n        Log.warn(`Failed to copy traced files for ${pageFile}`, err)\n      }\n    })\n  }\n\n  if (hasNodeMiddleware) {\n    const middlewareFile = path.join(distDir, 'server', 'middleware.js')\n    const middlewareTrace = `${middlewareFile}.nft.json`\n    await handleTraceFiles(middlewareTrace)\n  }\n\n  if (appPageKeys) {\n    for (const page of appPageKeys) {\n      if (middlewareManifest.functions.hasOwnProperty(page)) {\n        continue\n      }\n      const pageFile = path.join(distDir, 'server', 'app', `${page}.js`)\n      const pageTraceFile = `${pageFile}.nft.json`\n      await handleTraceFiles(pageTraceFile).catch((err) => {\n        Log.warn(`Failed to copy traced files for ${pageFile}`, err)\n      })\n    }\n  }\n\n  if (hasInstrumentationHook) {\n    await handleTraceFiles(\n      path.join(distDir, 'server', 'instrumentation.js.nft.json')\n    )\n  }\n\n  await handleTraceFiles(path.join(distDir, 'next-server.js.nft.json'))\n  const serverOutputPath = path.join(\n    outputPath,\n    path.relative(tracingRoot, dir),\n    'server.js'\n  )\n  await fs.mkdir(path.dirname(serverOutputPath), { recursive: true })\n\n  await fs.writeFile(\n    serverOutputPath,\n    `${\n      moduleType\n        ? `performance.mark('next-start');\nimport path from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport module from 'node:module'\nconst require = module.createRequire(import.meta.url)\nconst __dirname = fileURLToPath(new URL('.', import.meta.url))\n`\n        : `const path = require('path')`\n    }\n\nconst dir = path.join(__dirname)\n\nprocess.env.NODE_ENV = 'production'\nprocess.chdir(__dirname)\n\nconst currentPort = parseInt(process.env.PORT, 10) || 3000\nconst hostname = process.env.HOSTNAME || '0.0.0.0'\n\nlet keepAliveTimeout = parseInt(process.env.KEEP_ALIVE_TIMEOUT, 10)\nconst nextConfig = ${JSON.stringify(nextConfig)}\n\nprocess.env.__NEXT_PRIVATE_STANDALONE_CONFIG = JSON.stringify(nextConfig)\n\nrequire('next')\nconst { startServer } = require('next/dist/server/lib/start-server')\n\nif (\n  Number.isNaN(keepAliveTimeout) ||\n  !Number.isFinite(keepAliveTimeout) ||\n  keepAliveTimeout < 0\n) {\n  keepAliveTimeout = undefined\n}\n\nstartServer({\n  dir,\n  isDev: false,\n  config: nextConfig,\n  hostname,\n  port: currentPort,\n  allowRetry: false,\n  keepAliveTimeout,\n}).catch((err) => {\n  console.error(err);\n  process.exit(1);\n});`\n  )\n}\n\nexport function isReservedPage(page: string) {\n  return RESERVED_PAGE.test(page)\n}\n\nexport function isAppBuiltinPage(page: string) {\n  return /next[\\\\/]dist[\\\\/](esm[\\\\/])?client[\\\\/]components[\\\\/]builtin[\\\\/]/.test(\n    page\n  )\n}\n\nexport function isCustomErrorPage(page: string) {\n  return page === '/404' || page === '/500'\n}\n\nexport function isMiddlewareFile(file: string) {\n  return (\n    file === `/${MIDDLEWARE_FILENAME}` ||\n    file === `/src/${MIDDLEWARE_FILENAME}` ||\n    file === `/${PROXY_FILENAME}` ||\n    file === `/src/${PROXY_FILENAME}`\n  )\n}\n\nexport function isProxyFile(file: string) {\n  return file === `/${PROXY_FILENAME}` || file === `/src/${PROXY_FILENAME}`\n}\n\nexport function isInstrumentationHookFile(file: string) {\n  return (\n    file === `/${INSTRUMENTATION_HOOK_FILENAME}` ||\n    file === `/src/${INSTRUMENTATION_HOOK_FILENAME}`\n  )\n}\n\nexport function getPossibleInstrumentationHookFilenames(\n  folder: string,\n  extensions: string[]\n) {\n  const files = []\n  for (const extension of extensions) {\n    files.push(\n      path.join(folder, `${INSTRUMENTATION_HOOK_FILENAME}.${extension}`),\n      path.join(folder, `src`, `${INSTRUMENTATION_HOOK_FILENAME}.${extension}`)\n    )\n  }\n\n  return files\n}\n\nexport function getPossibleMiddlewareFilenames(\n  folder: string,\n  extensions: string[]\n) {\n  return extensions.flatMap((extension) => [\n    path.join(folder, `${MIDDLEWARE_FILENAME}.${extension}`),\n    path.join(folder, `${PROXY_FILENAME}.${extension}`),\n  ])\n}\n\nexport class NestedMiddlewareError extends Error {\n  constructor(\n    nestedFileNames: string[],\n    mainDir: string,\n    pagesOrAppDir: string\n  ) {\n    super(\n      `Nested Middleware is not allowed, found:\\n` +\n        `${nestedFileNames.map((file) => `pages${file}`).join('\\n')}\\n` +\n        `Please move your code to a single file at ${path.join(\n          path.posix.sep,\n          path.relative(mainDir, path.resolve(pagesOrAppDir, '..')),\n          'middleware'\n        )} instead.\\n` +\n        `Read More - https://nextjs.org/docs/messages/nested-middleware`\n    )\n  }\n}\n\nexport function getSupportedBrowsers(\n  dir: string,\n  isDevelopment: boolean\n): string[] {\n  let browsers: any\n  try {\n    const browsersListConfig = browserslist.loadConfig({\n      path: dir,\n      env: isDevelopment ? 'development' : 'production',\n    })\n    // Running `browserslist` resolves `extends` and other config features into a list of browsers\n    if (browsersListConfig && browsersListConfig.length > 0) {\n      browsers = browserslist(browsersListConfig)\n    }\n  } catch {}\n\n  // When user has browserslist use that target\n  if (browsers && browsers.length > 0) {\n    return browsers\n  }\n\n  // Uses modern browsers as the default.\n  return MODERN_BROWSERSLIST_TARGET\n}\n\nexport function shouldUseReactServerCondition(\n  layer: WebpackLayerName | null | undefined\n): boolean {\n  return Boolean(\n    layer && WEBPACK_LAYERS.GROUP.serverOnly.includes(layer as any)\n  )\n}\n\nexport function isWebpackClientOnlyLayer(\n  layer: WebpackLayerName | null | undefined\n): boolean {\n  return Boolean(\n    layer && WEBPACK_LAYERS.GROUP.clientOnly.includes(layer as any)\n  )\n}\n\nexport function isWebpackDefaultLayer(\n  layer: WebpackLayerName | null | undefined\n): boolean {\n  return (\n    layer === null ||\n    layer === undefined ||\n    layer === WEBPACK_LAYERS.pagesDirBrowser ||\n    layer === WEBPACK_LAYERS.pagesDirEdge ||\n    layer === WEBPACK_LAYERS.pagesDirNode\n  )\n}\n\nexport function isWebpackBundledLayer(\n  layer: WebpackLayerName | null | undefined\n): boolean {\n  return Boolean(layer && WEBPACK_LAYERS.GROUP.bundled.includes(layer as any))\n}\n\nexport function isWebpackAppPagesLayer(\n  layer: WebpackLayerName | null | undefined\n): boolean {\n  return Boolean(layer && WEBPACK_LAYERS.GROUP.appPages.includes(layer as any))\n}\n\nexport function collectMeta({\n  status,\n  headers,\n}: {\n  status?: number\n  headers?: OutgoingHttpHeaders\n}): {\n  status?: number\n  headers?: Record<string, string>\n} {\n  const meta: {\n    status?: number\n    headers?: Record<string, string>\n  } = {}\n\n  if (status !== 200) {\n    meta.status = status\n  }\n\n  if (headers && Object.keys(headers).length) {\n    meta.headers = {}\n\n    // normalize header values as initialHeaders\n    // must be Record<string, string>\n    for (const key in headers) {\n      // set-cookie is already handled - the middleware cookie setting case\n      // isn't needed for the prerender manifest since it can't read cookies\n      if (key === 'x-middleware-set-cookie') continue\n\n      let value = headers[key]\n\n      if (Array.isArray(value)) {\n        if (key === 'set-cookie') {\n          value = value.join(',')\n        } else {\n          value = value[value.length - 1]\n        }\n      }\n\n      if (typeof value === 'string') {\n        meta.headers[key] = value\n      }\n    }\n  }\n\n  return meta\n}\n\nexport const RSPACK_DEFAULT_LAYERS_REGEX = new RegExp(\n  `^(|${[WEBPACK_LAYERS.pagesDirBrowser, WEBPACK_LAYERS.pagesDirEdge, WEBPACK_LAYERS.pagesDirNode].join('|')})$`\n)\n"],"names":["checkIsRoutePPREnabled","INSTRUMENTATION_HOOK_FILENAME","MIDDLEWARE_FILENAME","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","SSG_GET_INITIAL_PROPS_CONFLICT","WEBPACK_LAYERS","PROXY_FILENAME","bold","cyan","green","red","underline","yellow","textTable","path","promises","fs","isValidElementType","stripAnsi","browserslist","MODERN_BROWSERSLIST_TARGET","UNDERSCORE_GLOBAL_ERROR_ROUTE","UNDERSCORE_GLOBAL_ERROR_ROUTE_ENTRY","UNDERSCORE_NOT_FOUND_ROUTE","isDynamicRoute","findPageFile","isEdgeRuntime","Log","loadComponents","trace","setHttpClientAndAgentOptions","Sema","normalizePagePath","getRuntimeContext","RouteKind","collectSegments","createIncrementalCache","collectRootParamKeys","buildAppStaticPaths","buildPagesStaticPaths","formatExpire","formatRevalidate","formatIssue","isRelevantWarning","print","console","log","RESERVED_PAGE","unique","main","sub","Set","difference","a","b","filter","x","has","isMiddlewareFilename","file","isInstrumentationHookFilename","filterAndSortList","list","routeType","hasCustomApp","pages","e","slice","sort","localeCompare","collectRoutesUsingEdgeRuntime","input","routesUsingEdgeRuntime","route","info","entries","runtime","printBuildErrors","entrypoints","isDev","topLevelFatalIssues","topLevelErrors","topLevelWarnings","seenFatalIssues","seenErrors","seenWarnings","issue","issues","severity","formatted","add","push","length","warn","join","error","Error","printTreeView","lists","pageInfos","pagesDir","pageExtensions","middlewareManifest","useStaticPages404","hasGSPAndRevalidateZero","MIN_DURATION","process","env","__NEXT_PRIVATE_DETERMINISTIC_BUILD_OUTPUT","Infinity","getPrettyDuration","_duration","duration","usedSymbols","messages","printFileTree","routerType","filteredPages","showRevalidate","showExpire","page","cacheControl","get","initialCacheControl","revalidate","expire","entry","map","forEach","item","i","arr","pageInfo","border","totalDuration","pageDuration","ssgPageDurations","reduce","symbol","isRoutePPREnabled","hasEmptyStaticShell","isDynamicAppRoute","hasPostponed","isStatic","isSSG","ssgPageRoutes","totalRoutes","contSymbol","routes","some","d","previewPages","Math","min","routesWithDuration","idx","remainingRoutes","remaining","avgDuration","round","total","index","innerSymbol","app","set","includes","middlewareInfo","middleware","files","align","stringLength","str","staticFunctionInfo","printCustomRoutes","redirects","rewrites","headers","printRoutes","type","isRedirects","isHeaders","routesStr","routeStr","source","r","destination","statusCode","permanent","header","last","key","value","combinedRewrites","beforeFiles","afterFiles","fallback","isPageStatic","dir","distDir","configFileName","httpAgentOptions","locales","defaultLocale","parentId","pageRuntime","edgeInfo","pageType","cacheComponents","authInterrupts","originalAppPath","isrFlushToDisk","cacheMaxMemorySize","nextConfigOutput","cacheHandler","cacheHandlers","cacheLifeProfiles","pprConfig","buildId","sriEnabled","prerenderFallbackMode","undefined","prerenderedRoutes","rootParamKeys","hasStaticProps","hasServerProps","isNextImageImported","appConfig","flushToDisk","isPageStaticSpan","traceAsyncFn","componentsResult","pathIsEdgeRuntime","paths","edgeFunctionEntry","wasm","binding","filePath","name","useCache","mod","context","_ENTRIES","ComponentMod","buildManifest","Component","default","Document","App","routeModule","pageConfig","config","reactLoadableManifest","getServerSideProps","getStaticPaths","getStaticProps","isAppPath","needsManifestsForLegacyReasons","Comp","segments","err","cause","reduceAppConfig","dynamic","definition","kind","APP_PAGE","fallbackMode","requestHeaders","hasGetInitialProps","getInitialProps","hasStaticPaths","pageIsDynamic","globalThis","__NEXT_IMAGE_IMPORTED","catch","message","segment","fetchCache","preferredRegion","maxDuration","hasCustomGetInitialProps","checkingApp","_app","origGetInitialProps","getDefinedNamedExports","Object","keys","detectConflictingPaths","combinedPages","ssgPages","additionalGeneratedSSGPaths","conflictingPaths","Map","dynamicSsgPages","additionalSsgPathsByPath","pathsPage","curPath","currentPath","toLowerCase","lowerPath","conflictingPage","find","conflictingPath","size","conflictingPathsOutput","pathItems","pathItem","isDynamic","exit","copyTracedFiles","pageKeys","appPageKeys","tracingRoot","serverConfig","hasNodeMiddleware","hasInstrumentationHook","staticPages","outputPath","rm","recursive","force","moduleType","nextConfig","relative","packageJsonPath","packageJsonContent","readFile","packageJson","JSON","parse","packageJsonOutputPath","mkdir","dirname","writeFile","copiedFiles","handleTraceFiles","traceFilePath","traceData","copySema","capacity","traceFileDir","Promise","all","relativeFile","acquire","tracedFilePath","fileOutputPath","symlink","readlink","code","copyFile","release","handleEdgeFunction","handleFile","originalPath","assets","edgeFunctionHandlers","values","functions","hasOwnProperty","pageFile","pageTraceFile","middlewareFile","middlewareTrace","serverOutputPath","stringify","isReservedPage","test","isAppBuiltinPage","isCustomErrorPage","isMiddlewareFile","isProxyFile","isInstrumentationHookFile","getPossibleInstrumentationHookFilenames","folder","extensions","extension","getPossibleMiddlewareFilenames","flatMap","NestedMiddlewareError","constructor","nestedFileNames","mainDir","pagesOrAppDir","posix","sep","resolve","getSupportedBrowsers","isDevelopment","browsers","browsersListConfig","loadConfig","shouldUseReactServerCondition","layer","Boolean","GROUP","serverOnly","isWebpackClientOnlyLayer","clientOnly","isWebpackDefaultLayer","pagesDirBrowser","pagesDirEdge","pagesDirNode","isWebpackBundledLayer","bundled","isWebpackAppPagesLayer","appPages","collectMeta","status","meta","Array","isArray","RSPACK_DEFAULT_LAYERS_REGEX","RegExp"],"mappings":"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","ignoreList":[0]}