{"version":3,"sources":["../../../../src/server/lib/router-utils/setup-dev-bundler.ts"],"sourcesContent":["import type { NextConfigComplete } from '../../config-shared'\nimport type { FilesystemDynamicRoute } from './filesystem'\nimport type { UnwrapPromise } from '../../../lib/coalesced-function'\nimport type { ProxyMatcher } from '../../../build/analysis/get-page-static-info'\nimport type { RoutesManifest } from '../../../build'\nimport type { MiddlewareRouteMatch } from '../../../shared/lib/router/utils/middleware-route-matcher'\nimport type { PropagateToWorkersField } from './types'\nimport type { NextJsHotReloaderInterface } from '../../dev/hot-reloader-types'\n\nimport { createDefineEnv } from '../../../build/swc'\nimport fs from 'fs'\nimport url from 'url'\nimport path from 'path'\nimport qs from 'querystring'\nimport Watchpack from 'next/dist/compiled/watchpack'\nimport findUp from 'next/dist/compiled/find-up'\nimport { buildCustomRoute } from './filesystem'\nimport * as Log from '../../../build/output/log'\nimport { setGlobal } from '../../../trace/shared'\nimport type { Telemetry } from '../../../telemetry/storage'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport { createValidFileMatcher } from '../find-page-file'\nimport {\n  EVENT_BUILD_FEATURE_USAGE,\n  eventCliSession,\n} from '../../../telemetry/events'\nimport { getSortedRoutes } from '../../../shared/lib/router/utils'\nimport { sortByPageExts } from '../../../build/sort-by-page-exts'\nimport { verifyTypeScriptSetup } from '../../../lib/verify-typescript-setup'\nimport { verifyPartytownSetup } from '../../../lib/verify-partytown-setup'\nimport { getNamedRouteRegex } from '../../../shared/lib/router/utils/route-regex'\nimport { normalizeAppPath } from '../../../shared/lib/router/utils/app-paths'\nimport { buildDataRoute } from './build-data-route'\nimport { getRouteMatcher } from '../../../shared/lib/router/utils/route-matcher'\nimport { normalizePathSep } from '../../../shared/lib/page-path/normalize-path-sep'\nimport { createClientRouterFilter } from '../../../lib/create-client-router-filter'\nimport { absolutePathToPage } from '../../../shared/lib/page-path/absolute-path-to-page'\nimport { generateInterceptionRoutesRewrites } from '../../../lib/generate-interception-routes-rewrites'\n\nimport {\n  CLIENT_STATIC_FILES_PATH,\n  DEV_CLIENT_PAGES_MANIFEST,\n  DEV_CLIENT_MIDDLEWARE_MANIFEST,\n  PHASE_DEVELOPMENT_SERVER,\n  TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST,\n  ROUTES_MANIFEST,\n  PRERENDER_MANIFEST,\n} from '../../../shared/lib/constants'\n\nimport { getMiddlewareRouteMatcher } from '../../../shared/lib/router/utils/middleware-route-matcher'\n\nimport {\n  isMiddlewareFile,\n  NestedMiddlewareError,\n  isInstrumentationHookFile,\n  getPossibleMiddlewareFilenames,\n  getPossibleInstrumentationHookFilenames,\n} from '../../../build/utils'\nimport { devPageFiles } from '../../../build/webpack/plugins/next-types-plugin/shared'\nimport type { LazyRenderServerInstance } from '../router-server'\nimport { HMR_MESSAGE_SENT_TO_BROWSER } from '../../dev/hot-reloader-types'\nimport { PAGE_TYPES } from '../../../lib/page-types'\nimport { generateEncryptionKeyBase64 } from '../../app-render/encryption-utils-server'\nimport {\n  isMetadataRouteFile,\n  isStaticMetadataFile,\n} from '../../../lib/metadata/is-metadata-route'\nimport { normalizeMetadataPageToRoute } from '../../../lib/metadata/get-metadata-route'\nimport { JsConfigPathsPlugin } from '../../../build/webpack/plugins/jsconfig-paths-plugin'\nimport { store as consoleStore } from '../../../build/output/store'\nimport {\n  isFileSystemCacheEnabledForDev,\n  ModuleBuildError,\n} from '../../../shared/lib/turbopack/utils'\nimport { getDefineEnv } from '../../../build/define-env'\nimport { TurbopackInternalError } from '../../../shared/lib/turbopack/internal-error'\nimport { normalizePath } from '../../../lib/normalize-path'\nimport {\n  JSON_CONTENT_TYPE_HEADER,\n  MIDDLEWARE_FILENAME,\n  PROXY_FILENAME,\n} from '../../../lib/constants'\nimport {\n  createRouteTypesManifest,\n  writeRouteTypesManifest,\n  writeValidatorFile,\n} from './route-types-utils'\nimport { isParallelRouteSegment } from '../../../shared/lib/segment'\nimport { ensureLeadingSlash } from '../../../shared/lib/page-path/ensure-leading-slash'\nimport { Lockfile } from '../../../build/lockfile'\nimport { deobfuscateText } from '../../../shared/lib/magic-identifier'\n\nexport type SetupOpts = {\n  renderServer: LazyRenderServerInstance\n  dir: string\n  turbo?: boolean\n  appDir?: string\n  pagesDir?: string\n  telemetry: Telemetry\n  isCustomServer?: boolean\n  fsChecker: UnwrapPromise<\n    ReturnType<typeof import('./filesystem').setupFsCheck>\n  >\n  nextConfig: NextConfigComplete\n  port: number\n  onDevServerCleanup: ((listener: () => Promise<void>) => void) | undefined\n  resetFetch: () => void\n}\n\nexport interface DevRoutesManifest {\n  version: number\n  caseSensitive: RoutesManifest['caseSensitive']\n  basePath: RoutesManifest['basePath']\n  rewrites: RoutesManifest['rewrites']\n  redirects: RoutesManifest['redirects']\n  headers: RoutesManifest['headers']\n  i18n: RoutesManifest['i18n']\n  skipProxyUrlNormalize: RoutesManifest['skipProxyUrlNormalize']\n}\n\nexport type ServerFields = {\n  actualMiddlewareFile?: string | undefined\n  actualInstrumentationHookFile?: string | undefined\n  appPathRoutes?: Record<string, string | string[]>\n  middleware?:\n    | {\n        page: string\n        match: MiddlewareRouteMatch\n        matchers?: ProxyMatcher[]\n      }\n    | undefined\n  hasAppNotFound?: boolean\n  interceptionRoutes?: ReturnType<\n    typeof import('./filesystem').buildCustomRoute\n  >[]\n  setIsrStatus?: (key: string, value: boolean | undefined) => void\n  resetFetch?: () => void\n}\n\nasync function verifyTypeScript(opts: SetupOpts) {\n  const verifyResult = await verifyTypeScriptSetup({\n    dir: opts.dir,\n    distDir: opts.nextConfig.distDir,\n    intentDirs: [opts.pagesDir, opts.appDir].filter(Boolean) as string[],\n    typeCheckPreflight: false,\n    tsconfigPath: opts.nextConfig.typescript.tsconfigPath,\n    disableStaticImages: opts.nextConfig.images.disableStaticImages,\n    hasAppDir: !!opts.appDir,\n    hasPagesDir: !!opts.pagesDir,\n    isolatedDevBuild: opts.nextConfig.experimental.isolatedDevBuild,\n  })\n\n  if (verifyResult.version) {\n    return true\n  }\n  return false\n}\n\nexport async function propagateServerField(\n  opts: SetupOpts,\n  field: PropagateToWorkersField,\n  args: any\n) {\n  await opts.renderServer?.instance?.propagateServerField(opts.dir, field, args)\n}\n\nasync function startWatcher(\n  opts: SetupOpts & {\n    isSrcDir: boolean\n  }\n) {\n  const { nextConfig, appDir, pagesDir, dir, resetFetch } = opts\n  const { useFileSystemPublicRoutes } = nextConfig\n\n  const distDir = path.join(opts.dir, opts.nextConfig.distDir)\n\n  setGlobal('distDir', distDir)\n  setGlobal('phase', PHASE_DEVELOPMENT_SERVER)\n\n  let lockfile\n  if (opts.nextConfig.experimental.lockDistDir) {\n    fs.mkdirSync(distDir, { recursive: true })\n    lockfile = await Lockfile.acquireWithRetriesOrExit(\n      path.join(distDir, 'lock'),\n      'next dev'\n    )\n  }\n\n  const validFileMatcher = createValidFileMatcher(\n    nextConfig.pageExtensions,\n    appDir\n  )\n\n  const serverFields: ServerFields = {}\n\n  // Update logging state once based on next.config.js when initializing\n  consoleStore.setState({\n    logging: nextConfig.logging !== false,\n  })\n\n  const hotReloader: NextJsHotReloaderInterface = opts.turbo\n    ? await (async () => {\n        const createHotReloaderTurbopack = (\n          require('../../dev/hot-reloader-turbopack') as typeof import('../../dev/hot-reloader-turbopack')\n        ).createHotReloaderTurbopack\n        return await createHotReloaderTurbopack(\n          opts,\n          serverFields,\n          distDir,\n          resetFetch,\n          lockfile\n        )\n      })()\n    : await (async () => {\n        const HotReloaderWebpack = (\n          require('../../dev/hot-reloader-webpack') as typeof import('../../dev/hot-reloader-webpack')\n        ).default\n        return new HotReloaderWebpack(opts.dir, {\n          isSrcDir: opts.isSrcDir,\n          appDir,\n          pagesDir,\n          distDir,\n          config: opts.nextConfig,\n          buildId: 'development',\n          encryptionKey: await generateEncryptionKeyBase64({\n            isBuild: false,\n            distDir,\n          }),\n          telemetry: opts.telemetry,\n          rewrites: opts.fsChecker.rewrites,\n          previewProps: opts.fsChecker.prerenderManifest.preview,\n          resetFetch,\n          lockfile,\n          onDevServerCleanup: opts.onDevServerCleanup,\n        })\n      })()\n\n  await hotReloader.start()\n\n  // have to write this after starting hot-reloader since that\n  // cleans the dist dir\n  const distTypesDir = path.join(distDir, 'types')\n  await writeRouteTypesManifest(\n    {\n      appRoutes: {},\n      pageRoutes: {},\n      layoutRoutes: {},\n      appRouteHandlerRoutes: {},\n      redirectRoutes: {},\n      rewriteRoutes: {},\n      appPagePaths: new Set(),\n      pagesRouterPagePaths: new Set(),\n      layoutPaths: new Set(),\n      appRouteHandlers: new Set(),\n      pageApiRoutes: new Set(),\n      filePathToRoute: new Map(),\n    },\n    path.join(distTypesDir, 'routes.d.ts'),\n    opts.nextConfig\n  )\n\n  const routesManifestPath = path.join(distDir, ROUTES_MANIFEST)\n  const routesManifest: DevRoutesManifest = {\n    version: 3,\n    caseSensitive: !!nextConfig.experimental.caseSensitiveRoutes,\n    basePath: nextConfig.basePath,\n    rewrites: opts.fsChecker.rewrites,\n    redirects: opts.fsChecker.redirects,\n    headers: opts.fsChecker.headers,\n    i18n: nextConfig.i18n || undefined,\n    skipProxyUrlNormalize: nextConfig.skipProxyUrlNormalize,\n  }\n  await fs.promises.writeFile(\n    routesManifestPath,\n    JSON.stringify(routesManifest)\n  )\n\n  const prerenderManifestPath = path.join(distDir, PRERENDER_MANIFEST)\n  await fs.promises.writeFile(\n    prerenderManifestPath,\n    JSON.stringify(opts.fsChecker.prerenderManifest, null, 2)\n  )\n\n  if (opts.nextConfig.experimental.nextScriptWorkers) {\n    await verifyPartytownSetup(\n      opts.dir,\n      path.join(distDir, CLIENT_STATIC_FILES_PATH)\n    )\n  }\n\n  opts.fsChecker.ensureCallback(async function ensure(item) {\n    if (item.type === 'appFile' || item.type === 'pageFile') {\n      await hotReloader.ensurePage({\n        clientOnly: false,\n        page: item.itemPath,\n        isApp: item.type === 'appFile',\n        definition: undefined,\n      })\n    }\n  })\n\n  let resolved = false\n  let prevSortedRoutes: string[] = []\n\n  await new Promise<void>(async (resolve, reject) => {\n    if (pagesDir) {\n      // Watchpack doesn't emit an event for an empty directory\n      fs.readdir(pagesDir, (_, files) => {\n        if (files?.length) {\n          return\n        }\n\n        if (!resolved) {\n          resolve()\n          resolved = true\n        }\n      })\n    }\n\n    const pages = pagesDir ? [pagesDir] : []\n    const app = appDir ? [appDir] : []\n    const directories = [...pages, ...app]\n\n    const rootDir = pagesDir || appDir\n    const files = [\n      ...getPossibleMiddlewareFilenames(\n        path.join(rootDir!, '..'),\n        nextConfig.pageExtensions\n      ),\n      ...getPossibleInstrumentationHookFilenames(\n        path.join(rootDir!, '..'),\n        nextConfig.pageExtensions\n      ),\n    ]\n    let nestedMiddleware: string[] = []\n\n    const envFiles = [\n      '.env.development.local',\n      '.env.local',\n      '.env.development',\n      '.env',\n    ].map((file) => path.join(dir, file))\n\n    files.push(...envFiles)\n\n    // tsconfig/jsconfig paths hot-reloading\n    const tsconfigPaths = [\n      path.join(dir, 'tsconfig.json'),\n      path.join(dir, 'jsconfig.json'),\n    ] as const\n    files.push(...tsconfigPaths)\n\n    const wp = new Watchpack({\n      // Watchpack default is 200ms which adds 200ms of dead time on bootup.\n      aggregateTimeout: 5, // Matches webpack-config.ts.\n      ignored: (pathname: string) => {\n        return (\n          !files.some((file) => file.startsWith(pathname)) &&\n          !directories.some(\n            (d) => pathname.startsWith(d) || d.startsWith(pathname)\n          )\n        )\n      },\n    })\n    const fileWatchTimes = new Map()\n    let enabledTypeScript = await verifyTypeScript(opts)\n    let previousClientRouterFilters: any\n    let previousConflictingPagePaths: Set<string> = new Set()\n\n    const routeTypesFilePath = path.join(distDir, 'types', 'routes.d.ts')\n    const validatorFilePath = path.join(distDir, 'types', 'validator.ts')\n\n    wp.on('aggregated', async () => {\n      let writeEnvDefinitions = false\n      let typescriptStatusFromLastAggregation = enabledTypeScript\n      let middlewareMatchers: ProxyMatcher[] | undefined\n      const routedPages: string[] = []\n      const knownFiles = wp.getTimeInfoEntries()\n      const appPaths: Record<string, string[]> = {}\n      const pageNameSet = new Set<string>()\n      const conflictingAppPagePaths = new Set<string>()\n      const appPageFilePaths = new Map<string, string>()\n      const pagesPageFilePaths = new Map<string, string>()\n      const appRouteHandlers: Array<{ route: string; filePath: string }> = []\n      const pageApiRoutes: Array<{ route: string; filePath: string }> = []\n\n      const pageRoutes: Array<{ route: string; filePath: string }> = []\n      const appRoutes: Array<{ route: string; filePath: string }> = []\n      const layoutRoutes: Array<{ route: string; filePath: string }> = []\n      const slots: Array<{ name: string; parent: string }> = []\n\n      let envChange = false\n      let tsconfigChange = false\n      let conflictingPageChange = 0\n      let hasRootAppNotFound = false\n\n      const { appFiles, pageFiles, staticMetadataFiles } = opts.fsChecker\n\n      appFiles.clear()\n      pageFiles.clear()\n      staticMetadataFiles.clear()\n      devPageFiles.clear()\n\n      const sortedKnownFiles: string[] = [...knownFiles.keys()].sort(\n        sortByPageExts(nextConfig.pageExtensions)\n      )\n\n      let proxyFilePath: string | undefined\n      let middlewareFilePath: string | undefined\n\n      for (const fileName of sortedKnownFiles) {\n        if (\n          !files.includes(fileName) &&\n          !directories.some((d) => fileName.startsWith(d))\n        ) {\n          continue\n        }\n\n        const { name: fileBaseName, dir: fileDir } = path.parse(fileName)\n\n        const isAtConventionLevel =\n          fileDir === dir || fileDir === path.join(dir, 'src')\n\n        if (isAtConventionLevel && fileBaseName === MIDDLEWARE_FILENAME) {\n          middlewareFilePath = fileName\n        }\n        if (isAtConventionLevel && fileBaseName === PROXY_FILENAME) {\n          proxyFilePath = fileName\n        }\n\n        if (middlewareFilePath) {\n          if (proxyFilePath) {\n            const cwd = process.cwd()\n\n            throw new Error(\n              `Both ${MIDDLEWARE_FILENAME} file \"./${path.relative(cwd, middlewareFilePath)}\" and ${PROXY_FILENAME} file \"./${path.relative(cwd, proxyFilePath)}\" are detected. Please use \"./${path.relative(cwd, proxyFilePath)}\" only. Learn more: https://nextjs.org/docs/messages/middleware-to-proxy`\n            )\n          }\n          Log.warnOnce(\n            `The \"${MIDDLEWARE_FILENAME}\" file convention is deprecated. Please use \"${PROXY_FILENAME}\" instead. Learn more: https://nextjs.org/docs/messages/middleware-to-proxy`\n          )\n        }\n\n        const meta = knownFiles.get(fileName)\n\n        const watchTime = fileWatchTimes.get(fileName)\n        // If the file is showing up for the first time or the meta.timestamp is changed since last time\n        const watchTimeChange =\n          watchTime === undefined ||\n          (watchTime && watchTime !== meta?.timestamp)\n        fileWatchTimes.set(fileName, meta?.timestamp)\n\n        if (envFiles.includes(fileName)) {\n          if (watchTimeChange) {\n            envChange = true\n          }\n          continue\n        }\n\n        if (tsconfigPaths.includes(fileName)) {\n          if (fileName.endsWith('tsconfig.json')) {\n            enabledTypeScript = true\n          }\n          if (watchTimeChange) {\n            tsconfigChange = true\n          }\n          continue\n        }\n\n        if (\n          meta?.accuracy === undefined ||\n          !validFileMatcher.isPageFile(fileName)\n        ) {\n          continue\n        }\n\n        const isAppPath = Boolean(\n          appDir &&\n            normalizePathSep(fileName).startsWith(\n              normalizePathSep(appDir) + '/'\n            )\n        )\n        const isPagePath = Boolean(\n          pagesDir &&\n            normalizePathSep(fileName).startsWith(\n              normalizePathSep(pagesDir) + '/'\n            )\n        )\n\n        const rootFile = absolutePathToPage(fileName, {\n          dir: dir,\n          extensions: nextConfig.pageExtensions,\n          keepIndex: false,\n          pagesType: PAGE_TYPES.ROOT,\n        })\n\n        if (isMiddlewareFile(rootFile)) {\n          const getStaticInfoIncludingLayouts = (\n            require('../../../build/get-static-info-including-layouts') as typeof import('../../../build/get-static-info-including-layouts')\n          ).getStaticInfoIncludingLayouts\n          const staticInfo = await getStaticInfoIncludingLayouts({\n            pageFilePath: fileName,\n            config: nextConfig,\n            appDir: appDir,\n            page: rootFile,\n            isDev: true,\n            isInsideAppDir: isAppPath,\n            pageExtensions: nextConfig.pageExtensions,\n          })\n          if (nextConfig.output === 'export') {\n            Log.error(\n              'Middleware cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export'\n            )\n            continue\n          }\n          serverFields.actualMiddlewareFile = rootFile\n\n          await propagateServerField(\n            opts,\n            'actualMiddlewareFile',\n            serverFields.actualMiddlewareFile\n          )\n          middlewareMatchers = staticInfo.middleware?.matchers || [\n            { regexp: '^/.*$', originalSource: '/:path*' },\n          ]\n          continue\n        }\n        if (isInstrumentationHookFile(rootFile)) {\n          serverFields.actualInstrumentationHookFile = rootFile\n          await propagateServerField(\n            opts,\n            'actualInstrumentationHookFile',\n            serverFields.actualInstrumentationHookFile\n          )\n          continue\n        }\n\n        if (fileName.endsWith('.ts') || fileName.endsWith('.tsx')) {\n          enabledTypeScript = true\n        }\n\n        if (!(isAppPath || isPagePath)) {\n          continue\n        }\n\n        // Collect all current filenames for the TS plugin to use\n        devPageFiles.add(fileName)\n\n        let pageName = absolutePathToPage(fileName, {\n          dir: isAppPath ? appDir! : pagesDir!,\n          extensions: nextConfig.pageExtensions,\n          keepIndex: isAppPath,\n          pagesType: isAppPath ? PAGE_TYPES.APP : PAGE_TYPES.PAGES,\n        })\n\n        if (\n          isAppPath &&\n          appDir &&\n          isMetadataRouteFile(\n            fileName.replace(appDir, ''),\n            nextConfig.pageExtensions,\n            true\n          )\n        ) {\n          const getPageStaticInfo = (\n            require('../../../build/analysis/get-page-static-info') as typeof import('../../../build/analysis/get-page-static-info')\n          ).getPageStaticInfo\n          const staticInfo = await getPageStaticInfo({\n            pageFilePath: fileName,\n            nextConfig: {},\n            page: pageName,\n            isDev: true,\n            pageType: PAGE_TYPES.APP,\n          })\n\n          pageName = normalizeMetadataPageToRoute(\n            pageName,\n            !!(staticInfo.generateSitemaps || staticInfo.generateImageMetadata)\n          )\n        }\n\n        if (\n          !isAppPath &&\n          pageName.startsWith('/api/') &&\n          nextConfig.output === 'export'\n        ) {\n          Log.error(\n            'API Routes cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export'\n          )\n          continue\n        }\n\n        if (isAppPath) {\n          const isRootNotFound = validFileMatcher.isRootNotFound(fileName)\n          hasRootAppNotFound = true\n\n          if (isRootNotFound) {\n            continue\n          }\n\n          // Ignore files/directories starting with `_` in the app directory\n          if (normalizePathSep(pageName).includes('/_')) {\n            continue\n          }\n\n          // Record parallel route slots for layout typing\n          // May run multiple times (e.g. if a parallel route\n          // has both a layout and a page, and children) but that's fine\n          const segments = normalizePathSep(pageName).split('/')\n          for (let i = segments.length - 1; i >= 0; i--) {\n            const segment = segments[i]\n            if (isParallelRouteSegment(segment)) {\n              const parentPath = normalizeAppPath(\n                segments.slice(0, i).join('/')\n              )\n\n              const slotName = segment.slice(1)\n              // check if the slot already exists\n              if (\n                slots.some(\n                  (s) => s.name === slotName && s.parent === parentPath\n                )\n              )\n                continue\n\n              slots.push({\n                name: slotName,\n                parent: parentPath,\n              })\n              break\n            }\n          }\n\n          // Record layouts\n          if (validFileMatcher.isAppLayoutPage(fileName)) {\n            layoutRoutes.push({\n              route: ensureLeadingSlash(\n                normalizeAppPath(normalizePathSep(pageName)).replace(\n                  /\\/layout$/,\n                  ''\n                )\n              ),\n              filePath: fileName,\n            })\n          }\n\n          if (!validFileMatcher.isAppRouterPage(fileName)) {\n            continue\n          }\n\n          const originalPageName = pageName\n          pageName = normalizeAppPath(pageName).replace(/%5F/g, '_')\n          if (!appPaths[pageName]) {\n            appPaths[pageName] = []\n          }\n          appPaths[pageName].push(\n            opts.turbo\n              ? // Turbopack outputs the correct path which is normalized with the `_`.\n                originalPageName.replace(/%5F/g, '_')\n              : originalPageName\n          )\n\n          if (useFileSystemPublicRoutes) {\n            // Static metadata files will be served from filesystem.\n            if (appDir && isStaticMetadataFile(fileName.replace(appDir, ''))) {\n              staticMetadataFiles.set(pageName, fileName)\n            } else {\n              appFiles.add(pageName)\n            }\n          }\n\n          if (validFileMatcher.isAppRouterRoute(fileName)) {\n            appRouteHandlers.push({\n              route: normalizePathSep(pageName),\n              filePath: fileName,\n            })\n          } else {\n            appRoutes.push({\n              route: normalizePathSep(pageName),\n              filePath: fileName,\n            })\n          }\n\n          if (routedPages.includes(pageName)) {\n            continue\n          }\n        } else {\n          if (useFileSystemPublicRoutes) {\n            pageFiles.add(pageName)\n            // always add to nextDataRoutes for now but in future only add\n            // entries that actually use getStaticProps/getServerSideProps\n            opts.fsChecker.nextDataRoutes.add(pageName)\n          }\n\n          if (pageName.startsWith('/api/')) {\n            pageApiRoutes.push({\n              route: normalizePathSep(pageName),\n              filePath: fileName,\n            })\n          } else {\n            pageRoutes.push({\n              route: normalizePathSep(pageName),\n              filePath: fileName,\n            })\n          }\n        }\n\n        // Record pages\n        if (isAppPath) {\n          appPageFilePaths.set(pageName, fileName)\n        } else {\n          pagesPageFilePaths.set(pageName, fileName)\n        }\n\n        if (appDir && pageNameSet.has(pageName)) {\n          conflictingAppPagePaths.add(pageName)\n        } else {\n          pageNameSet.add(pageName)\n        }\n\n        /**\n         * If there is a middleware that is not declared in the root we will\n         * warn without adding it so it doesn't make its way into the system.\n         */\n        if (/[\\\\\\\\/]_middleware$/.test(pageName)) {\n          nestedMiddleware.push(pageName)\n          continue\n        }\n\n        routedPages.push(pageName)\n      }\n\n      const numConflicting = conflictingAppPagePaths.size\n      conflictingPageChange = numConflicting - previousConflictingPagePaths.size\n\n      if (conflictingPageChange !== 0) {\n        if (numConflicting > 0) {\n          let errorMessage = `Conflicting app and page file${\n            numConflicting === 1 ? ' was' : 's were'\n          } found, please remove the conflicting files to continue:\\n`\n\n          for (const p of conflictingAppPagePaths) {\n            const appPath = path.relative(dir, appPageFilePaths.get(p)!)\n            const pagesPath = path.relative(dir, pagesPageFilePaths.get(p)!)\n            errorMessage += `  \"${pagesPath}\" - \"${appPath}\"\\n`\n          }\n          hotReloader.setHmrServerError(new Error(errorMessage))\n        } else if (numConflicting === 0) {\n          hotReloader.clearHmrServerError()\n          await propagateServerField(opts, 'reloadMatchers', undefined)\n        }\n      }\n\n      previousConflictingPagePaths = conflictingAppPagePaths\n\n      let clientRouterFilters: any\n      if (nextConfig.experimental.clientRouterFilter) {\n        clientRouterFilters = createClientRouterFilter(\n          Object.keys(appPaths),\n          nextConfig.experimental.clientRouterFilterRedirects\n            ? ((nextConfig as any)._originalRedirects || []).filter(\n                (r: any) => !r.internal\n              )\n            : [],\n          nextConfig.experimental.clientRouterFilterAllowedRate\n        )\n\n        if (\n          !previousClientRouterFilters ||\n          JSON.stringify(previousClientRouterFilters) !==\n            JSON.stringify(clientRouterFilters)\n        ) {\n          envChange = true\n          previousClientRouterFilters = clientRouterFilters\n        }\n      }\n\n      if (envChange || tsconfigChange) {\n        if (envChange) {\n          writeEnvDefinitions = true\n\n          await propagateServerField(opts, 'loadEnvConfig', [\n            { dev: true, forceReload: true },\n          ])\n        }\n\n        if (hotReloader.turbopackProject) {\n          const hasRewrites =\n            opts.fsChecker.rewrites.afterFiles.length > 0 ||\n            opts.fsChecker.rewrites.beforeFiles.length > 0 ||\n            opts.fsChecker.rewrites.fallback.length > 0\n\n          const rootPath =\n            opts.nextConfig.turbopack?.root ||\n            opts.nextConfig.outputFileTracingRoot ||\n            opts.dir\n          await hotReloader.turbopackProject.update({\n            defineEnv: createDefineEnv({\n              isTurbopack: true,\n              clientRouterFilters,\n              config: nextConfig,\n              dev: true,\n              distDir,\n              fetchCacheKeyPrefix:\n                opts.nextConfig.experimental.fetchCacheKeyPrefix,\n              hasRewrites,\n              // TODO: Implement\n              middlewareMatchers: undefined,\n              projectPath: opts.dir,\n              rewrites: opts.fsChecker.rewrites,\n            }),\n            rootPath,\n            projectPath: normalizePath(path.relative(rootPath, dir)),\n          })\n        } else {\n          let tsconfigResult:\n            | UnwrapPromise<\n                ReturnType<\n                  typeof import('../../../build/load-jsconfig').default\n                >\n              >\n            | undefined\n          // This is not relevant for Turbopack because tsconfig/jsconfig is handled internally.\n          if (tsconfigChange) {\n            try {\n              const loadJsConfig = (\n                require('../../../build/load-jsconfig') as typeof import('../../../build/load-jsconfig')\n              ).default\n              tsconfigResult = await loadJsConfig(dir, nextConfig)\n            } catch (_) {\n              /* do we want to log if there are syntax errors in tsconfig while editing? */\n            }\n          }\n\n          hotReloader.activeWebpackConfigs?.forEach((config, idx) => {\n            const isClient = idx === 0\n            const isNodeServer = idx === 1\n            const isEdgeServer = idx === 2\n            const hasRewrites =\n              opts.fsChecker.rewrites.afterFiles.length > 0 ||\n              opts.fsChecker.rewrites.beforeFiles.length > 0 ||\n              opts.fsChecker.rewrites.fallback.length > 0\n\n            if (tsconfigChange) {\n              config.resolve?.plugins?.forEach((plugin: any) => {\n                // look for the JsConfigPathsPlugin and update with\n                // the latest paths/baseUrl config\n                if (plugin instanceof JsConfigPathsPlugin && tsconfigResult) {\n                  const { resolvedBaseUrl, jsConfig } = tsconfigResult\n                  const currentResolvedBaseUrl = plugin.resolvedBaseUrl\n                  const resolvedUrlIndex = config.resolve?.modules?.findIndex(\n                    (item) => item === currentResolvedBaseUrl?.baseUrl\n                  )\n\n                  if (resolvedBaseUrl) {\n                    if (\n                      resolvedBaseUrl.baseUrl !==\n                      currentResolvedBaseUrl?.baseUrl\n                    ) {\n                      // remove old baseUrl and add new one\n                      if (resolvedUrlIndex && resolvedUrlIndex > -1) {\n                        config.resolve?.modules?.splice(resolvedUrlIndex, 1)\n                      }\n\n                      // If the resolvedBaseUrl is implicit we only remove the previous value.\n                      // Only add the baseUrl if it's explicitly set in tsconfig/jsconfig\n                      if (!resolvedBaseUrl.isImplicit) {\n                        config.resolve?.modules?.push(resolvedBaseUrl.baseUrl)\n                      }\n                    }\n                  }\n\n                  if (jsConfig?.compilerOptions?.paths && resolvedBaseUrl) {\n                    Object.keys(plugin.paths).forEach((key) => {\n                      delete plugin.paths[key]\n                    })\n                    Object.assign(plugin.paths, jsConfig.compilerOptions.paths)\n                    plugin.resolvedBaseUrl = resolvedBaseUrl\n                  }\n                }\n              })\n            }\n\n            if (envChange) {\n              config.plugins?.forEach((plugin: any) => {\n                // we look for the DefinePlugin definitions so we can\n                // update them on the active compilers\n                if (\n                  plugin &&\n                  typeof plugin.definitions === 'object' &&\n                  plugin.definitions.__NEXT_DEFINE_ENV\n                ) {\n                  const newDefine = getDefineEnv({\n                    isTurbopack: false,\n                    clientRouterFilters,\n                    config: nextConfig,\n                    dev: true,\n                    distDir,\n                    fetchCacheKeyPrefix:\n                      opts.nextConfig.experimental.fetchCacheKeyPrefix,\n                    hasRewrites,\n                    isClient,\n                    isEdgeServer,\n                    isNodeServer,\n                    middlewareMatchers: undefined,\n                    projectPath: opts.dir,\n                    rewrites: opts.fsChecker.rewrites,\n                  })\n\n                  Object.keys(plugin.definitions).forEach((key) => {\n                    if (!(key in newDefine)) {\n                      delete plugin.definitions[key]\n                    }\n                  })\n                  Object.assign(plugin.definitions, newDefine)\n                }\n              })\n            }\n          })\n        }\n        await hotReloader.invalidate({\n          reloadAfterInvalidation: envChange,\n        })\n      }\n\n      if (nestedMiddleware.length > 0) {\n        Log.error(\n          new NestedMiddlewareError(\n            nestedMiddleware,\n            dir,\n            (pagesDir || appDir)!\n          ).message\n        )\n        nestedMiddleware = []\n      }\n\n      // Make sure to sort parallel routes to make the result deterministic.\n      serverFields.appPathRoutes = Object.fromEntries(\n        Object.entries(appPaths).map(([k, v]) => [k, v.sort()])\n      )\n      await propagateServerField(\n        opts,\n        'appPathRoutes',\n        serverFields.appPathRoutes\n      )\n\n      // TODO: pass this to fsChecker/next-dev-server?\n      serverFields.middleware = middlewareMatchers\n        ? {\n            match: null as any,\n            page: '/',\n            matchers: middlewareMatchers,\n          }\n        : undefined\n\n      await propagateServerField(opts, 'middleware', serverFields.middleware)\n      serverFields.hasAppNotFound = hasRootAppNotFound\n\n      opts.fsChecker.middlewareMatcher = serverFields.middleware?.matchers\n        ? getMiddlewareRouteMatcher(serverFields.middleware?.matchers)\n        : undefined\n\n      const interceptionRoutes = generateInterceptionRoutesRewrites(\n        Object.keys(appPaths),\n        opts.nextConfig.basePath\n      ).map((item) =>\n        buildCustomRoute(\n          'before_files_rewrite',\n          item,\n          opts.nextConfig.basePath,\n          opts.nextConfig.experimental.caseSensitiveRoutes\n        )\n      )\n\n      opts.fsChecker.rewrites.beforeFiles.push(...interceptionRoutes)\n\n      const exportPathMap =\n        (typeof nextConfig.exportPathMap === 'function' &&\n          (await nextConfig.exportPathMap?.(\n            {},\n            {\n              dev: true,\n              dir: opts.dir,\n              outDir: null,\n              distDir: distDir,\n              buildId: 'development',\n            }\n          ))) ||\n        {}\n\n      const exportPathMapEntries = Object.entries(exportPathMap || {})\n\n      if (exportPathMapEntries.length > 0) {\n        opts.fsChecker.exportPathMapRoutes = exportPathMapEntries.map(\n          ([key, value]) =>\n            buildCustomRoute(\n              'before_files_rewrite',\n              {\n                source: key,\n                destination: `${value.page}${\n                  value.query ? '?' : ''\n                }${qs.stringify(value.query)}`,\n              },\n              opts.nextConfig.basePath,\n              opts.nextConfig.experimental.caseSensitiveRoutes\n            )\n        )\n      }\n\n      try {\n        // we serve a separate manifest with all pages for the client in\n        // dev mode so that we can match a page after a rewrite on the client\n        // before it has been built and is populated in the _buildManifest\n        const sortedRoutes = getSortedRoutes(routedPages)\n\n        opts.fsChecker.dynamicRoutes = sortedRoutes.map(\n          (page): FilesystemDynamicRoute => {\n            const regex = getNamedRouteRegex(page, {\n              prefixRouteKeys: true,\n            })\n            return {\n              regex: regex.re.toString(),\n              namedRegex: regex.namedRegex,\n              routeKeys: regex.routeKeys,\n              match: getRouteMatcher(regex),\n              page,\n            }\n          }\n        )\n\n        const dataRoutes: typeof opts.fsChecker.dynamicRoutes = []\n\n        for (const page of sortedRoutes) {\n          const route = buildDataRoute(page, 'development')\n          const routeRegex = getNamedRouteRegex(route.page, {\n            prefixRouteKeys: true,\n          })\n          dataRoutes.push({\n            ...route,\n            regex: routeRegex.re.toString(),\n            namedRegex: routeRegex.namedRegex,\n            routeKeys: routeRegex.routeKeys,\n            match: getRouteMatcher({\n              // TODO: fix this in the manifest itself, must also be fixed in\n              // upstream builder that relies on this\n              re: opts.nextConfig.i18n\n                ? new RegExp(\n                    route.dataRouteRegex.replace(\n                      `/development/`,\n                      `/development/(?<nextLocale>[^/]+?)/`\n                    )\n                  )\n                : new RegExp(route.dataRouteRegex),\n              groups: routeRegex.groups,\n            }),\n          })\n        }\n        opts.fsChecker.dynamicRoutes.unshift(...dataRoutes)\n\n        // For Turbopack ADDED_PAGE and REMOVED_PAGE are implemented in hot-reloader-turbopack.ts\n        // in order to avoid a race condition where ADDED_PAGE and REMOVED_PAGE are sent before Turbopack picked up the file change.\n        if (!opts.turbo) {\n          // Reload the matchers. The filesystem would have been written to,\n          // and the matchers need to re-scan it to update the router.\n          // Reloading the matchers should happen before `ADDED_PAGE` or `REMOVED_PAGE` is sent over the websocket\n          // otherwise it sends the event too early.\n          await propagateServerField(opts, 'reloadMatchers', undefined)\n\n          if (\n            !prevSortedRoutes?.every((val, idx) => val === sortedRoutes[idx])\n          ) {\n            const addedRoutes = sortedRoutes.filter(\n              (route) => !prevSortedRoutes.includes(route)\n            )\n            const removedRoutes = prevSortedRoutes.filter(\n              (route) => !sortedRoutes.includes(route)\n            )\n\n            // emit the change so clients fetch the update\n            hotReloader.send({\n              type: HMR_MESSAGE_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE,\n              data: [\n                {\n                  devPagesManifest: true,\n                },\n              ],\n            })\n\n            addedRoutes.forEach((route) => {\n              hotReloader.send({\n                type: HMR_MESSAGE_SENT_TO_BROWSER.ADDED_PAGE,\n                data: [route],\n              })\n            })\n\n            removedRoutes.forEach((route) => {\n              hotReloader.send({\n                type: HMR_MESSAGE_SENT_TO_BROWSER.REMOVED_PAGE,\n                data: [route],\n              })\n            })\n          }\n        }\n        prevSortedRoutes = sortedRoutes\n\n        if (enabledTypeScript) {\n          // Using === false to make the check clearer.\n          if (typescriptStatusFromLastAggregation === false) {\n            // we tolerate the error here as this is best effort\n            // and the manual install command will be shown\n            await verifyTypeScript(opts)\n              .then(() => {\n                tsconfigChange = true\n              })\n              .catch(() => {})\n          }\n\n          if (writeEnvDefinitions && nextConfig.experimental?.typedEnv) {\n            // TODO: The call to propagateServerField 'loadEnvConfig' causes the env to be loaded twice on env file changes.\n            const loadEnvConfig = (\n              require('@next/env') as typeof import('@next/env')\n            ).loadEnvConfig\n            const { loadedEnvFiles } = loadEnvConfig(\n              dir,\n              process.env.NODE_ENV === 'development',\n              // Silent as it's the second time `loadEnvConfig` is called in this pass.\n              undefined,\n              true\n            )\n\n            const createEnvDefinitions = (\n              require('../experimental/create-env-definitions') as typeof import('../experimental/create-env-definitions')\n            ).createEnvDefinitions\n            await createEnvDefinitions({\n              distDir,\n              loadedEnvFiles: [\n                ...loadedEnvFiles,\n                {\n                  path: nextConfig.configFileName,\n                  env: nextConfig.env,\n                  contents: '',\n                },\n              ],\n            })\n          }\n\n          const routeTypesManifest = await createRouteTypesManifest({\n            dir,\n            pageRoutes,\n            appRoutes,\n            layoutRoutes,\n            slots,\n            redirects: opts.nextConfig.redirects,\n            rewrites: opts.nextConfig.rewrites,\n            // Ensure relative paths in validator.ts are computed from validatorFilePath,\n            // matching behavior of build and CLI typegen.\n            validatorFilePath,\n            appRouteHandlers,\n            pageApiRoutes,\n          })\n\n          await writeRouteTypesManifest(\n            routeTypesManifest,\n            routeTypesFilePath,\n            opts.nextConfig\n          )\n          await writeValidatorFile(routeTypesManifest, validatorFilePath)\n        }\n\n        if (!resolved) {\n          resolve()\n          resolved = true\n        }\n      } catch (e) {\n        if (!resolved) {\n          reject(e)\n          resolved = true\n        } else {\n          Log.warn('Failed to reload dynamic routes:', e)\n        }\n      }\n    })\n\n    wp.watch({ directories: [dir], startTime: 0 })\n  })\n\n  const clientPagesManifestPath = `/_next/${CLIENT_STATIC_FILES_PATH}/development/${DEV_CLIENT_PAGES_MANIFEST}`\n  opts.fsChecker.devVirtualFsItems.add(clientPagesManifestPath)\n\n  const devMiddlewareManifestPath = `/_next/${CLIENT_STATIC_FILES_PATH}/development/${DEV_CLIENT_MIDDLEWARE_MANIFEST}`\n  opts.fsChecker.devVirtualFsItems.add(devMiddlewareManifestPath)\n\n  const devTurbopackMiddlewareManifestPath = `/_next/${CLIENT_STATIC_FILES_PATH}/development/${TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST}`\n  opts.fsChecker.devVirtualFsItems.add(devTurbopackMiddlewareManifestPath)\n\n  async function requestHandler(req: IncomingMessage, res: ServerResponse) {\n    const parsedUrl = url.parse(req.url || '/')\n\n    if (parsedUrl.pathname?.includes(clientPagesManifestPath)) {\n      res.statusCode = 200\n      res.setHeader('Content-Type', JSON_CONTENT_TYPE_HEADER)\n      res.end(\n        JSON.stringify({\n          pages: prevSortedRoutes.filter(\n            (route) => !opts.fsChecker.appFiles.has(route)\n          ),\n        })\n      )\n      return { finished: true }\n    }\n\n    if (\n      parsedUrl.pathname?.includes(devMiddlewareManifestPath) ||\n      parsedUrl.pathname?.includes(devTurbopackMiddlewareManifestPath)\n    ) {\n      res.statusCode = 200\n      res.setHeader('Content-Type', JSON_CONTENT_TYPE_HEADER)\n      res.end(JSON.stringify(serverFields.middleware?.matchers || []))\n      return { finished: true }\n    }\n    return { finished: false }\n  }\n\n  function logErrorWithOriginalStack(\n    err: unknown,\n    type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ) {\n    if (err instanceof Error) {\n      err.message = deobfuscateText(err.message)\n    }\n    if (err instanceof ModuleBuildError) {\n      // Errors that may come from issues from the user's code\n      Log.error(err.message)\n    } else if (err instanceof TurbopackInternalError) {\n      // An internal Turbopack error that has been handled by next-swc, written\n      // to disk and a simplified message shown to user on the Rust side.\n    } else if (type === 'warning') {\n      Log.warn(err)\n    } else if (type === 'app-dir') {\n      Log.error(err)\n    } else if (type) {\n      Log.error(`${type}:`, err)\n    } else {\n      Log.error(err)\n    }\n  }\n\n  return {\n    serverFields,\n    hotReloader,\n    requestHandler,\n    logErrorWithOriginalStack,\n\n    async ensureMiddleware(requestUrl?: string) {\n      if (!serverFields.actualMiddlewareFile) return\n      return hotReloader.ensurePage({\n        page: serverFields.actualMiddlewareFile,\n        clientOnly: false,\n        definition: undefined,\n        url: requestUrl,\n      })\n    },\n  }\n}\n\nexport async function setupDevBundler(opts: SetupOpts) {\n  const isSrcDir = path\n    .relative(opts.dir, opts.pagesDir || opts.appDir || '')\n    .startsWith('src')\n\n  const result = await startWatcher({\n    ...opts,\n    isSrcDir,\n  })\n\n  opts.telemetry.record(\n    eventCliSession(opts.nextConfig, {\n      webpackVersion: 5,\n      isSrcDir,\n      turboFlag: !!opts.turbo,\n      cliCommand: 'dev',\n      appDir: !!opts.appDir,\n      pagesDir: !!opts.pagesDir,\n      isCustomServer: !!opts.isCustomServer,\n      hasNowJson: !!(await findUp('now.json', { cwd: opts.dir })),\n    })\n  )\n\n  // Track build features for dev server here:\n  opts.telemetry.record({\n    eventName: EVENT_BUILD_FEATURE_USAGE,\n    payload: {\n      featureName: 'turbopackFileSystemCache',\n      invocationCount: isFileSystemCacheEnabledForDev(opts.nextConfig) ? 1 : 0,\n    },\n  })\n\n  return result\n}\n\nexport type DevBundler = Awaited<ReturnType<typeof setupDevBundler>>\n\n// Returns a trace rewritten through Turbopack's sourcemaps\n"],"names":["createDefineEnv","fs","url","path","qs","Watchpack","findUp","buildCustomRoute","Log","setGlobal","createValidFileMatcher","EVENT_BUILD_FEATURE_USAGE","eventCliSession","getSortedRoutes","sortByPageExts","verifyTypeScriptSetup","verifyPartytownSetup","getNamedRouteRegex","normalizeAppPath","buildDataRoute","getRouteMatcher","normalizePathSep","createClientRouterFilter","absolutePathToPage","generateInterceptionRoutesRewrites","CLIENT_STATIC_FILES_PATH","DEV_CLIENT_PAGES_MANIFEST","DEV_CLIENT_MIDDLEWARE_MANIFEST","PHASE_DEVELOPMENT_SERVER","TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST","ROUTES_MANIFEST","PRERENDER_MANIFEST","getMiddlewareRouteMatcher","isMiddlewareFile","NestedMiddlewareError","isInstrumentationHookFile","getPossibleMiddlewareFilenames","getPossibleInstrumentationHookFilenames","devPageFiles","HMR_MESSAGE_SENT_TO_BROWSER","PAGE_TYPES","generateEncryptionKeyBase64","isMetadataRouteFile","isStaticMetadataFile","normalizeMetadataPageToRoute","JsConfigPathsPlugin","store","consoleStore","isFileSystemCacheEnabledForDev","ModuleBuildError","getDefineEnv","TurbopackInternalError","normalizePath","JSON_CONTENT_TYPE_HEADER","MIDDLEWARE_FILENAME","PROXY_FILENAME","createRouteTypesManifest","writeRouteTypesManifest","writeValidatorFile","isParallelRouteSegment","ensureLeadingSlash","Lockfile","deobfuscateText","verifyTypeScript","opts","verifyResult","dir","distDir","nextConfig","intentDirs","pagesDir","appDir","filter","Boolean","typeCheckPreflight","tsconfigPath","typescript","disableStaticImages","images","hasAppDir","hasPagesDir","isolatedDevBuild","experimental","version","propagateServerField","field","args","renderServer","instance","startWatcher","resetFetch","useFileSystemPublicRoutes","join","lockfile","lockDistDir","mkdirSync","recursive","acquireWithRetriesOrExit","validFileMatcher","pageExtensions","serverFields","setState","logging","hotReloader","turbo","createHotReloaderTurbopack","require","HotReloaderWebpack","default","isSrcDir","config","buildId","encryptionKey","isBuild","telemetry","rewrites","fsChecker","previewProps","prerenderManifest","preview","onDevServerCleanup","start","distTypesDir","appRoutes","pageRoutes","layoutRoutes","appRouteHandlerRoutes","redirectRoutes","rewriteRoutes","appPagePaths","Set","pagesRouterPagePaths","layoutPaths","appRouteHandlers","pageApiRoutes","filePathToRoute","Map","routesManifestPath","routesManifest","caseSensitive","caseSensitiveRoutes","basePath","redirects","headers","i18n","undefined","skipProxyUrlNormalize","promises","writeFile","JSON","stringify","prerenderManifestPath","nextScriptWorkers","ensureCallback","ensure","item","type","ensurePage","clientOnly","page","itemPath","isApp","definition","resolved","prevSortedRoutes","Promise","resolve","reject","readdir","_","files","length","pages","app","directories","rootDir","nestedMiddleware","envFiles","map","file","push","tsconfigPaths","wp","aggregateTimeout","ignored","pathname","some","startsWith","d","fileWatchTimes","enabledTypeScript","previousClientRouterFilters","previousConflictingPagePaths","routeTypesFilePath","validatorFilePath","on","writeEnvDefinitions","typescriptStatusFromLastAggregation","middlewareMatchers","routedPages","knownFiles","getTimeInfoEntries","appPaths","pageNameSet","conflictingAppPagePaths","appPageFilePaths","pagesPageFilePaths","slots","envChange","tsconfigChange","conflictingPageChange","hasRootAppNotFound","appFiles","pageFiles","staticMetadataFiles","clear","sortedKnownFiles","keys","sort","proxyFilePath","middlewareFilePath","fileName","includes","name","fileBaseName","fileDir","parse","isAtConventionLevel","cwd","process","Error","relative","warnOnce","meta","get","watchTime","watchTimeChange","timestamp","set","endsWith","accuracy","isPageFile","isAppPath","isPagePath","rootFile","extensions","keepIndex","pagesType","ROOT","staticInfo","getStaticInfoIncludingLayouts","pageFilePath","isDev","isInsideAppDir","output","error","actualMiddlewareFile","middleware","matchers","regexp","originalSource","actualInstrumentationHookFile","add","pageName","APP","PAGES","replace","getPageStaticInfo","pageType","generateSitemaps","generateImageMetadata","isRootNotFound","segments","split","i","segment","parentPath","slice","slotName","s","parent","isAppLayoutPage","route","filePath","isAppRouterPage","originalPageName","isAppRouterRoute","nextDataRoutes","has","test","numConflicting","size","errorMessage","p","appPath","pagesPath","setHmrServerError","clearHmrServerError","clientRouterFilters","clientRouterFilter","Object","clientRouterFilterRedirects","_originalRedirects","r","internal","clientRouterFilterAllowedRate","dev","forceReload","turbopackProject","hasRewrites","afterFiles","beforeFiles","fallback","rootPath","turbopack","root","outputFileTracingRoot","update","defineEnv","isTurbopack","fetchCacheKeyPrefix","projectPath","tsconfigResult","loadJsConfig","activeWebpackConfigs","forEach","idx","isClient","isNodeServer","isEdgeServer","plugins","plugin","jsConfig","resolvedBaseUrl","currentResolvedBaseUrl","resolvedUrlIndex","modules","findIndex","baseUrl","splice","isImplicit","compilerOptions","paths","key","assign","definitions","__NEXT_DEFINE_ENV","newDefine","invalidate","reloadAfterInvalidation","message","appPathRoutes","fromEntries","entries","k","v","match","hasAppNotFound","middlewareMatcher","interceptionRoutes","exportPathMap","outDir","exportPathMapEntries","exportPathMapRoutes","value","source","destination","query","sortedRoutes","dynamicRoutes","regex","prefixRouteKeys","re","toString","namedRegex","routeKeys","dataRoutes","routeRegex","RegExp","dataRouteRegex","groups","unshift","every","val","addedRoutes","removedRoutes","send","DEV_PAGES_MANIFEST_UPDATE","data","devPagesManifest","ADDED_PAGE","REMOVED_PAGE","then","catch","typedEnv","loadEnvConfig","loadedEnvFiles","env","NODE_ENV","createEnvDefinitions","configFileName","contents","routeTypesManifest","e","warn","watch","startTime","clientPagesManifestPath","devVirtualFsItems","devMiddlewareManifestPath","devTurbopackMiddlewareManifestPath","requestHandler","req","res","parsedUrl","statusCode","setHeader","end","finished","logErrorWithOriginalStack","err","ensureMiddleware","requestUrl","setupDevBundler","result","record","webpackVersion","turboFlag","cliCommand","isCustomServer","hasNowJson","eventName","payload","featureName","invocationCount"],"mappings":"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","ignoreList":[0]}