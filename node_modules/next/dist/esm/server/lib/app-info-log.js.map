{"version":3,"sources":["../../../src/server/lib/app-info-log.ts"],"sourcesContent":["import { loadEnvConfig } from '@next/env'\nimport * as Log from '../../build/output/log'\nimport { bold, purple, strikethrough } from '../../lib/picocolors'\nimport {\n  PHASE_DEVELOPMENT_SERVER,\n  PHASE_PRODUCTION_BUILD,\n} from '../../shared/lib/constants'\nimport loadConfig, { type ConfiguredExperimentalFeature } from '../config'\nimport { experimentalSchema } from '../config-schema'\n\nexport function logStartInfo({\n  networkUrl,\n  appUrl,\n  envInfo,\n  experimentalFeatures,\n  logBundler,\n  cacheComponents,\n}: {\n  networkUrl: string | null\n  appUrl: string | null\n  envInfo?: string[]\n  experimentalFeatures?: ConfiguredExperimentalFeature[]\n  logBundler: boolean\n  cacheComponents?: boolean\n}) {\n  let versionSuffix = ''\n  const parts = []\n\n  if (logBundler) {\n    if (process.env.TURBOPACK) {\n      parts.push('Turbopack')\n    } else if (process.env.NEXT_RSPACK) {\n      parts.push('Rspack')\n    } else {\n      parts.push('webpack')\n    }\n  }\n\n  if (cacheComponents) {\n    parts.push('Cache Components')\n  }\n\n  if (parts.length > 0) {\n    versionSuffix = ` (${parts.join(', ')})`\n  }\n\n  Log.bootstrap(\n    `${bold(\n      purple(`${Log.prefixes.ready} Next.js ${process.env.__NEXT_VERSION}`)\n    )}${versionSuffix}`\n  )\n  if (appUrl) {\n    Log.bootstrap(`- Local:        ${appUrl}`)\n  }\n  if (networkUrl) {\n    Log.bootstrap(`- Network:      ${networkUrl}`)\n  }\n  if (envInfo?.length) Log.bootstrap(`- Environments: ${envInfo.join(', ')}`)\n\n  if (experimentalFeatures?.length) {\n    Log.bootstrap(`- Experiments (use with caution):`)\n    for (const exp of experimentalFeatures) {\n      const isValid = Object.prototype.hasOwnProperty.call(\n        experimentalSchema,\n        exp.key\n      )\n      if (isValid) {\n        const symbol =\n          typeof exp.value === 'boolean'\n            ? exp.value === true\n              ? bold('✓')\n              : bold('⨯')\n            : '·'\n\n        const suffix =\n          typeof exp.value === 'number' || typeof exp.value === 'string'\n            ? `: ${JSON.stringify(exp.value)}`\n            : ''\n\n        const reason = exp.reason ? ` (${exp.reason})` : ''\n\n        Log.bootstrap(`  ${symbol} ${exp.key}${suffix}${reason}`)\n      } else {\n        Log.bootstrap(\n          `  ? ${strikethrough(exp.key)} (invalid experimental key)`\n        )\n      }\n    }\n  }\n\n  // New line after the bootstrap info\n  Log.info('')\n}\n\nexport async function getStartServerInfo({\n  dir,\n  dev,\n  debugPrerender,\n}: {\n  dir: string\n  dev: boolean\n  debugPrerender?: boolean\n}): Promise<{\n  envInfo?: string[]\n  experimentalFeatures?: ConfiguredExperimentalFeature[]\n  cacheComponents?: boolean\n}> {\n  let experimentalFeatures: ConfiguredExperimentalFeature[] = []\n  let cacheComponents = false\n  const config = await loadConfig(\n    dev ? PHASE_DEVELOPMENT_SERVER : PHASE_PRODUCTION_BUILD,\n    dir,\n    {\n      reportExperimentalFeatures(features) {\n        experimentalFeatures = features.sort(({ key: a }, { key: b }) =>\n          a.localeCompare(b)\n        )\n      },\n      debugPrerender,\n      silent: false,\n    }\n  )\n\n  cacheComponents = !!config.cacheComponents\n\n  // we need to reset env if we are going to create\n  // the worker process with the esm loader so that the\n  // initial env state is correct\n  let envInfo: string[] = []\n  const { loadedEnvFiles } = loadEnvConfig(dir, true, console, false)\n  if (loadedEnvFiles.length > 0) {\n    envInfo = loadedEnvFiles.map((f) => f.path)\n  }\n\n  return {\n    envInfo,\n    experimentalFeatures,\n    cacheComponents,\n  }\n}\n"],"names":["loadEnvConfig","Log","bold","purple","strikethrough","PHASE_DEVELOPMENT_SERVER","PHASE_PRODUCTION_BUILD","loadConfig","experimentalSchema","logStartInfo","networkUrl","appUrl","envInfo","experimentalFeatures","logBundler","cacheComponents","versionSuffix","parts","process","env","TURBOPACK","push","NEXT_RSPACK","length","join","bootstrap","prefixes","ready","__NEXT_VERSION","exp","isValid","Object","prototype","hasOwnProperty","call","key","symbol","value","suffix","JSON","stringify","reason","info","getStartServerInfo","dir","dev","debugPrerender","config","reportExperimentalFeatures","features","sort","a","b","localeCompare","silent","loadedEnvFiles","console","map","f","path"],"mappings":"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","ignoreList":[0]}