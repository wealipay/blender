{"version":3,"sources":["../../../src/server/dev/messages.ts"],"sourcesContent":["import { InvariantError } from '../../shared/lib/invariant-error'\nimport {\n  HMR_MESSAGE_SENT_TO_BROWSER,\n  type BinaryHmrMessageSentToBrowser,\n} from './hot-reloader-types'\n\nexport const FAST_REFRESH_RUNTIME_RELOAD =\n  'Fast Refresh had to perform a full reload due to a runtime error.'\n\nconst textEncoder = new TextEncoder()\n\nexport function createBinaryHmrMessageData(\n  message: BinaryHmrMessageSentToBrowser\n): Uint8Array {\n  switch (message.type) {\n    case HMR_MESSAGE_SENT_TO_BROWSER.REACT_DEBUG_CHUNK: {\n      const { requestId, chunk } = message\n      const requestIdBytes = textEncoder.encode(requestId)\n      const requestIdLength = requestIdBytes.length\n\n      if (requestIdLength > 255) {\n        throw new InvariantError(\n          'Request ID is too long for the binary HMR message.'\n        )\n      }\n\n      const chunkLength = chunk ? chunk.length : 0\n      const totalLength = 2 + requestIdLength + chunkLength\n      const data = new Uint8Array(totalLength)\n      const view = new DataView(data.buffer)\n\n      view.setUint8(0, HMR_MESSAGE_SENT_TO_BROWSER.REACT_DEBUG_CHUNK)\n      view.setUint8(1, requestIdLength)\n      textEncoder.encodeInto(requestId, data.subarray(2, 2 + requestIdLength))\n\n      if (chunk) {\n        data.set(chunk, 2 + requestIdLength)\n      }\n\n      return data\n    }\n    default: {\n      throw new InvariantError(\n        `Invalid binary HMR message of type ${message.type}`\n      )\n    }\n  }\n}\n"],"names":["InvariantError","HMR_MESSAGE_SENT_TO_BROWSER","FAST_REFRESH_RUNTIME_RELOAD","textEncoder","TextEncoder","createBinaryHmrMessageData","message","type","REACT_DEBUG_CHUNK","requestId","chunk","requestIdBytes","encode","requestIdLength","length","chunkLength","totalLength","data","Uint8Array","view","DataView","buffer","setUint8","encodeInto","subarray","set"],"mappings":"AAAA,SAASA,cAAc,QAAQ,mCAAkC;AACjE,SACEC,2BAA2B,QAEtB,uBAAsB;AAE7B,OAAO,MAAMC,8BACX,oEAAmE;AAErE,MAAMC,cAAc,IAAIC;AAExB,OAAO,SAASC,2BACdC,OAAsC;IAEtC,OAAQA,QAAQC,IAAI;QAClB,KAAKN,4BAA4BO,iBAAiB;YAAE;gBAClD,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAE,GAAGJ;gBAC7B,MAAMK,iBAAiBR,YAAYS,MAAM,CAACH;gBAC1C,MAAMI,kBAAkBF,eAAeG,MAAM;gBAE7C,IAAID,kBAAkB,KAAK;oBACzB,MAAM,qBAEL,CAFK,IAAIb,eACR,uDADI,qBAAA;+BAAA;oCAAA;sCAAA;oBAEN;gBACF;gBAEA,MAAMe,cAAcL,QAAQA,MAAMI,MAAM,GAAG;gBAC3C,MAAME,cAAc,IAAIH,kBAAkBE;gBAC1C,MAAME,OAAO,IAAIC,WAAWF;gBAC5B,MAAMG,OAAO,IAAIC,SAASH,KAAKI,MAAM;gBAErCF,KAAKG,QAAQ,CAAC,GAAGrB,4BAA4BO,iBAAiB;gBAC9DW,KAAKG,QAAQ,CAAC,GAAGT;gBACjBV,YAAYoB,UAAU,CAACd,WAAWQ,KAAKO,QAAQ,CAAC,GAAG,IAAIX;gBAEvD,IAAIH,OAAO;oBACTO,KAAKQ,GAAG,CAACf,OAAO,IAAIG;gBACtB;gBAEA,OAAOI;YACT;QACA;YAAS;gBACP,MAAM,qBAEL,CAFK,IAAIjB,eACR,CAAC,mCAAmC,EAAEM,QAAQC,IAAI,EAAE,GADhD,qBAAA;2BAAA;gCAAA;kCAAA;gBAEN;YACF;IACF;AACF","ignoreList":[0]}