{"version":3,"sources":["../../../src/lib/typescript/writeConfigurationDefaults.ts"],"sourcesContent":["import { readFileSync, writeFileSync } from 'fs'\nimport { bold, cyan, white } from '../picocolors'\nimport * as CommentJson from 'next/dist/compiled/comment-json'\nimport semver from 'next/dist/compiled/semver'\nimport os from 'os'\nimport type { CompilerOptions } from 'typescript'\nimport * as Log from '../../build/output/log'\n\ntype DesiredCompilerOptionsShape = {\n  [K in keyof CompilerOptions]:\n    | { suggested: any; reason?: string }\n    | {\n        parsedValue?: any\n        parsedValues?: Array<any>\n        value: any\n        reason: string\n      }\n}\n\nfunction getDesiredCompilerOptions(\n  typescriptVersion: string,\n  userTsConfig?: Record<string, any>\n): DesiredCompilerOptionsShape {\n  // ModuleKind\n  const moduleKindESNext = 'esnext'\n  const moduleKindES2020 = 'es2020'\n  const moduleKindPreserve = 'preserve'\n  const moduleKindNodeNext = 'nodenext'\n  const moduleKindNode16 = 'node16'\n  const moduleKindCommonJS = 'commonjs'\n  const moduleKindAMD = 'amd'\n\n  // ModuleResolutionKind\n  const moduleResolutionKindBundler = 'bundler'\n  const moduleResolutionKindNode10 = 'node10'\n  const moduleResolutionKindNode12 = 'node12'\n  const moduleResolutionKindNodeJs = 'node'\n\n  // Jsx\n  const jsxEmitReactJSX = 'react-jsx'\n\n  return {\n    target: {\n      suggested: 'ES2017',\n      reason:\n        'For top-level `await`. Note: Next.js only polyfills for the esmodules target.',\n    },\n    // These are suggested values and will be set when not present in the\n    // tsconfig.json\n    lib: { suggested: ['dom', 'dom.iterable', 'esnext'] },\n    allowJs: { suggested: true },\n    skipLibCheck: { suggested: true },\n    strict: { suggested: false },\n    noEmit: { suggested: true },\n    incremental: { suggested: true },\n\n    // These values are required and cannot be changed by the user\n    // Keep this in sync with the webpack config\n    // 'parsedValue' matches the output value from ts.parseJsonConfigFileContent()\n    module: {\n      parsedValue: moduleKindESNext,\n      // All of these values work:\n      parsedValues: [\n        semver.gte(typescriptVersion, '5.4.0') && moduleKindPreserve,\n        moduleKindES2020,\n        moduleKindESNext,\n        moduleKindCommonJS,\n        moduleKindAMD,\n        moduleKindNodeNext,\n        moduleKindNode16,\n      ],\n      value: 'esnext',\n      reason: 'for dynamic import() support',\n    },\n    // TODO: Semver check not needed once Next.js repo uses 5.4.\n    ...(semver.gte(typescriptVersion, '5.4.0') &&\n    userTsConfig?.compilerOptions?.module?.toLowerCase() === moduleKindPreserve\n      ? {\n          // TypeScript 5.4 introduced `Preserve`. Using `Preserve` implies\n          // - `moduleResolution` is `Bundler`\n          // - `esModuleInterop` is `true`\n          // - `resolveJsonModule` is `true`\n          // This means that if the user is using Preserve, they don't need these options\n        }\n      : {\n          esModuleInterop: {\n            value: true,\n            reason: 'requirement for SWC / babel',\n          },\n          moduleResolution: {\n            // In TypeScript 5.0, `NodeJs` has renamed to `Node10`\n            parsedValue: moduleResolutionKindBundler,\n            // All of these values work:\n            parsedValues: [\n              moduleResolutionKindNode10,\n              moduleResolutionKindNodeJs,\n              // only newer TypeScript versions have this field, it\n              // will be filtered for new versions of TypeScript\n              moduleResolutionKindNode12,\n              moduleKindNode16,\n              moduleKindNodeNext,\n              moduleResolutionKindBundler,\n            ].filter((val) => typeof val !== 'undefined'),\n            value: 'node',\n            reason: 'to match webpack resolution',\n          },\n          resolveJsonModule: {\n            value: true,\n            reason: 'to match webpack resolution',\n          },\n        }),\n    ...(userTsConfig?.compilerOptions?.verbatimModuleSyntax === true\n      ? undefined\n      : {\n          isolatedModules: {\n            value: true,\n            reason: 'requirement for SWC / Babel',\n          },\n        }),\n    jsx: {\n      parsedValue: jsxEmitReactJSX,\n      value: 'react-jsx',\n      reason: 'next.js uses the React automatic runtime',\n    },\n  } satisfies DesiredCompilerOptionsShape\n}\n\nexport function getRequiredConfiguration(\n  typescript: typeof import('typescript')\n): Partial<import('typescript').CompilerOptions> {\n  const res: Partial<import('typescript').CompilerOptions> = {}\n  const typescriptVersion = typescript.version\n\n  const desiredCompilerOptions = getDesiredCompilerOptions(typescriptVersion)\n  for (const optionKey of Object.keys(desiredCompilerOptions)) {\n    const ev = desiredCompilerOptions[optionKey]\n    if (!('value' in ev)) {\n      continue\n    }\n\n    const value = ev.parsedValue ?? ev.value\n\n    // Convert string values back to TypeScript enum values\n    if (optionKey === 'module' && typeof value === 'string') {\n      const moduleMap: Record<string, import('typescript').ModuleKind> = {\n        esnext: typescript.ModuleKind.ESNext,\n        es2020: typescript.ModuleKind.ES2020,\n        ...(typescript.ModuleKind.Preserve !== undefined\n          ? { preserve: typescript.ModuleKind.Preserve }\n          : {}),\n        nodenext: typescript.ModuleKind.NodeNext,\n        node16: typescript.ModuleKind.Node16,\n        commonjs: typescript.ModuleKind.CommonJS,\n        amd: typescript.ModuleKind.AMD,\n      }\n      res[optionKey] = moduleMap[value.toLowerCase()] ?? value\n    } else if (optionKey === 'moduleResolution' && typeof value === 'string') {\n      const moduleResolutionMap: Record<\n        string,\n        import('typescript').ModuleResolutionKind\n      > = {\n        bundler: typescript.ModuleResolutionKind.Bundler,\n        node10: typescript.ModuleResolutionKind.Node10,\n        node12: (typescript.ModuleResolutionKind as any).Node12,\n        node: typescript.ModuleResolutionKind.NodeJs,\n      }\n      res[optionKey] = moduleResolutionMap[value.toLowerCase()] ?? value\n    } else if (optionKey === 'jsx' && typeof value === 'string') {\n      const jsxMap: Record<string, import('typescript').JsxEmit> = {\n        'react-jsx': typescript.JsxEmit.ReactJSX,\n      }\n      res[optionKey] = jsxMap[value.toLowerCase()] ?? value\n    } else {\n      res[optionKey] = value\n    }\n  }\n\n  return res\n}\n\nconst localDevTestFilesExcludeAction =\n  'NEXT_PRIVATE_LOCAL_DEV_TEST_FILES_EXCLUDE'\n\nexport async function writeConfigurationDefaults(\n  typescriptVersion: string,\n  tsConfigPath: string,\n  isFirstTimeSetup: boolean,\n  hasAppDir: boolean,\n  distDir: string,\n  hasPagesDir: boolean,\n  isolatedDevBuild: boolean | undefined\n): Promise<void> {\n  if (isFirstTimeSetup) {\n    writeFileSync(tsConfigPath, '{}' + os.EOL)\n  }\n\n  const userTsConfigContent = readFileSync(tsConfigPath, {\n    encoding: 'utf8',\n  })\n  const userTsConfig = CommentJson.parse(userTsConfigContent)\n\n  // Bail automatic setup when the user has extended or referenced another config\n  if ('extends' in userTsConfig || 'references' in userTsConfig) {\n    return\n  }\n\n  if (userTsConfig?.compilerOptions == null) {\n    userTsConfig.compilerOptions = {}\n    isFirstTimeSetup = true\n  }\n\n  const desiredCompilerOptions = getDesiredCompilerOptions(\n    typescriptVersion,\n    userTsConfig\n  )\n\n  const suggestedActions: string[] = []\n  const requiredActions: string[] = []\n  for (const optionKey in desiredCompilerOptions) {\n    const check = desiredCompilerOptions[optionKey]\n    if ('suggested' in check) {\n      if (!(optionKey in userTsConfig?.compilerOptions)) {\n        userTsConfig.compilerOptions[optionKey] = check.suggested\n        suggestedActions.push(\n          cyan(optionKey) +\n            ' was set to ' +\n            bold(check.suggested) +\n            (check.reason ? ` (${check.reason})` : '')\n        )\n      }\n    } else if ('value' in check) {\n      let existingValue = userTsConfig?.compilerOptions?.[optionKey]\n\n      if (typeof existingValue === 'string') {\n        existingValue = existingValue.toLowerCase()\n      }\n\n      const shouldWriteRequiredValue = () => {\n        // Check if the option has multiple allowed values\n        if (check.parsedValues) {\n          return !check.parsedValues.includes(existingValue)\n        }\n\n        // Check if the option has a single parsed value\n        if (check.parsedValue) {\n          return check.parsedValue !== existingValue\n        }\n\n        // Fall back to direct value comparison\n        return check.value !== existingValue\n      }\n\n      if (shouldWriteRequiredValue()) {\n        if (!userTsConfig.compilerOptions) {\n          userTsConfig.compilerOptions = {}\n        }\n        userTsConfig.compilerOptions[optionKey] = check.value\n        requiredActions.push(\n          cyan(optionKey) +\n            ' was set to ' +\n            bold(check.value) +\n            ` (${check.reason})`\n        )\n      }\n    } else {\n      const _: never = check\n    }\n  }\n\n  const nextAppTypes: string[] = [`${distDir}/types/**/*.ts`]\n\n  // When isolatedDevBuild is enabled, Next.js uses different distDir paths:\n  // - Development: \"{distDir}/dev\"\n  // - Production: \"{distDir}\"\n  // To prevent tsconfig updates when switching between dev/build modes,\n  // we proactively include both type paths regardless of current environment.\n  if (isolatedDevBuild !== false) {\n    nextAppTypes.push(\n      process.env.NODE_ENV === 'development'\n        ? // In dev, distDir is \"{distDir}/dev\", which is already in the array above, but we also need \"{distDir}/types\".\n          // Here we remove \"/dev\" at the end of distDir for consistency.\n          `${distDir.replace(/\\/dev$/, '')}/types/**/*.ts`\n        : // In build, distDir is \"{distDir}\", which is already in the array above, but we also need \"{distDir}/dev/types\".\n          // Here we add \"/dev\" at the end of distDir for consistency.\n          `${distDir}/dev/types/**/*.ts`\n    )\n    // Sort the array to ensure consistent order.\n    nextAppTypes.sort((a, b) => a.length - b.length)\n  }\n\n  if (!('include' in userTsConfig)) {\n    userTsConfig.include = hasAppDir\n      ? ['next-env.d.ts', ...nextAppTypes, '**/*.mts', '**/*.ts', '**/*.tsx']\n      : ['next-env.d.ts', '**/*.mts', '**/*.ts', '**/*.tsx']\n    suggestedActions.push(\n      cyan('include') +\n        ' was set to ' +\n        bold(\n          hasAppDir\n            ? `['next-env.d.ts', ${nextAppTypes.map((type) => `'${type}'`).join(', ')}, '**/*.mts', '**/*.ts', '**/*.tsx']`\n            : `['next-env.d.ts', '**/*.mts', '**/*.ts', '**/*.tsx']`\n        )\n    )\n  } else if (hasAppDir) {\n    const missingFromResolved = []\n    for (const type of nextAppTypes) {\n      if (!userTsConfig.include.includes(type)) {\n        missingFromResolved.push(type)\n      }\n    }\n\n    if (missingFromResolved.length > 0) {\n      if (!Array.isArray(userTsConfig.include)) {\n        userTsConfig.include = []\n      }\n\n      missingFromResolved.forEach((item) => {\n        userTsConfig.include.push(item)\n        suggestedActions.push(\n          cyan('include') + ' was updated to add ' + bold(`'${item}'`)\n        )\n      })\n    }\n  }\n\n  // Enable the Next.js typescript plugin.\n  if (hasAppDir) {\n    // Check if the config or the resolved config has the plugin already.\n    const plugins = [\n      ...(Array.isArray(userTsConfig?.plugins) ? userTsConfig.plugins : []),\n      ...(userTsConfig.compilerOptions &&\n      Array.isArray(userTsConfig.compilerOptions.plugins)\n        ? userTsConfig.compilerOptions.plugins\n        : []),\n    ]\n    const hasNextPlugin = plugins.some(\n      ({ name }: { name: string }) => name === 'next'\n    )\n\n    // If the TS config extends on another config, we can't add the `plugin` field\n    // because that will override the parent config's plugins.\n    // Instead we have to show a message to the user to add the plugin manually.\n    if (\n      !userTsConfig.compilerOptions ||\n      (plugins.length &&\n        !hasNextPlugin &&\n        'extends' in userTsConfig &&\n        (!userTsConfig.compilerOptions ||\n          !userTsConfig.compilerOptions.plugins))\n    ) {\n      Log.info(\n        `\\nYour ${bold(\n          'tsconfig.json'\n        )} extends another configuration, which means we cannot add the Next.js TypeScript plugin automatically. To improve your development experience, we recommend adding the Next.js plugin (\\`${cyan(\n          '\"plugins\": [{ \"name\": \"next\" }]'\n        )}\\`) manually to your TypeScript configuration. Learn more: https://nextjs.org/docs/app/api-reference/config/typescript#the-typescript-plugin\\n`\n      )\n    } else if (!hasNextPlugin) {\n      if (!('plugins' in userTsConfig.compilerOptions)) {\n        userTsConfig.compilerOptions.plugins = []\n      }\n      userTsConfig.compilerOptions.plugins.push({ name: 'next' })\n      suggestedActions.push(\n        cyan('plugins') + ' was updated to add ' + bold(`{ name: 'next' }`)\n      )\n    }\n\n    // If `strict` is set to `false` and `strictNullChecks` is set to `false`,\n    // then set `strictNullChecks` to `true`.\n    if (\n      hasPagesDir &&\n      hasAppDir &&\n      !userTsConfig?.compilerOptions?.strict &&\n      !('strictNullChecks' in userTsConfig?.compilerOptions)\n    ) {\n      userTsConfig.compilerOptions.strictNullChecks = true\n      suggestedActions.push(\n        cyan('strictNullChecks') + ' was set to ' + bold(`true`)\n      )\n    }\n  }\n\n  if (!('exclude' in userTsConfig)) {\n    userTsConfig.exclude = ['node_modules']\n    suggestedActions.push(\n      cyan('exclude') + ' was set to ' + bold(`['node_modules']`)\n    )\n  }\n\n  // During local development inside Next.js repo, exclude the test files coverage by the local tsconfig\n  if (process.env.NEXT_PRIVATE_LOCAL_DEV && userTsConfig.exclude) {\n    const tsGlob = '**/*.test.ts'\n    const tsxGlob = '**/*.test.tsx'\n    let hasUpdates = false\n    if (!userTsConfig.exclude.includes(tsGlob)) {\n      userTsConfig.exclude.push(tsGlob)\n      hasUpdates = true\n    }\n    if (!userTsConfig.exclude.includes(tsxGlob)) {\n      userTsConfig.exclude.push(tsxGlob)\n      hasUpdates = true\n    }\n\n    if (hasUpdates) {\n      requiredActions.push(localDevTestFilesExcludeAction)\n    }\n  }\n\n  if (suggestedActions.length < 1 && requiredActions.length < 1) {\n    return\n  }\n\n  writeFileSync(\n    tsConfigPath,\n    CommentJson.stringify(userTsConfig, null, 2) + os.EOL\n  )\n\n  Log.info('')\n  if (isFirstTimeSetup) {\n    Log.info(\n      `We detected TypeScript in your project and created a ${cyan(\n        'tsconfig.json'\n      )} file for you.`\n    )\n    return\n  }\n\n  Log.info(\n    `We detected TypeScript in your project and reconfigured your ${cyan(\n      'tsconfig.json'\n    )} file for you.${\n      userTsConfig.compilerOptions?.strict\n        ? ''\n        : ` Strict-mode is set to ${cyan('false')} by default.`\n    }`\n  )\n\n  if (suggestedActions.length) {\n    Log.info(\n      `The following suggested values were added to your ${cyan(\n        'tsconfig.json'\n      )}. These values ${cyan('can be changed')} to fit your project's needs:\\n`\n    )\n\n    suggestedActions.forEach((action) => Log.info(`\\t- ${action}`))\n\n    Log.info('')\n  }\n\n  const requiredActionsToBeLogged = process.env.NEXT_PRIVATE_LOCAL_DEV\n    ? requiredActions.filter(\n        (action) => action !== localDevTestFilesExcludeAction\n      )\n    : requiredActions\n\n  if (requiredActionsToBeLogged.length) {\n    Log.info(\n      `The following ${white('mandatory changes')} were made to your ${cyan(\n        'tsconfig.json'\n      )}:\\n`\n    )\n\n    requiredActionsToBeLogged.forEach((action) => Log.info(`\\t- ${action}`))\n\n    Log.info('')\n  }\n}\n"],"names":["readFileSync","writeFileSync","bold","cyan","white","CommentJson","semver","os","Log","getDesiredCompilerOptions","typescriptVersion","userTsConfig","moduleKindESNext","moduleKindES2020","moduleKindPreserve","moduleKindNodeNext","moduleKindNode16","moduleKindCommonJS","moduleKindAMD","moduleResolutionKindBundler","moduleResolutionKindNode10","moduleResolutionKindNode12","moduleResolutionKindNodeJs","jsxEmitReactJSX","target","suggested","reason","lib","allowJs","skipLibCheck","strict","noEmit","incremental","module","parsedValue","parsedValues","gte","value","compilerOptions","toLowerCase","esModuleInterop","moduleResolution","filter","val","resolveJsonModule","verbatimModuleSyntax","undefined","isolatedModules","jsx","getRequiredConfiguration","typescript","res","version","desiredCompilerOptions","optionKey","Object","keys","ev","moduleMap","esnext","ModuleKind","ESNext","es2020","ES2020","Preserve","preserve","nodenext","NodeNext","node16","Node16","commonjs","CommonJS","amd","AMD","moduleResolutionMap","bundler","ModuleResolutionKind","Bundler","node10","Node10","node12","Node12","node","NodeJs","jsxMap","JsxEmit","ReactJSX","localDevTestFilesExcludeAction","writeConfigurationDefaults","tsConfigPath","isFirstTimeSetup","hasAppDir","distDir","hasPagesDir","isolatedDevBuild","EOL","userTsConfigContent","encoding","parse","suggestedActions","requiredActions","check","push","existingValue","shouldWriteRequiredValue","includes","_","nextAppTypes","process","env","NODE_ENV","replace","sort","a","b","length","include","map","type","join","missingFromResolved","Array","isArray","forEach","item","plugins","hasNextPlugin","some","name","info","strictNullChecks","exclude","NEXT_PRIVATE_LOCAL_DEV","tsGlob","tsxGlob","hasUpdates","stringify","action","requiredActionsToBeLogged"],"mappings":"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","ignoreList":[0]}