{"version":3,"sources":["../../src/export/worker.ts"],"sourcesContent":["import type {\n  ExportPagesInput,\n  ExportPageInput,\n  ExportPageResult,\n  ExportRouteResult,\n  WorkerRenderOpts,\n  ExportPagesResult,\n  ExportPathEntry,\n} from './types'\n\nimport '../server/node-environment'\n\nprocess.env.NEXT_IS_EXPORT_WORKER = 'true'\n\nimport { extname, join, dirname, sep } from 'path'\nimport fs from 'fs/promises'\nimport { loadComponents } from '../server/load-components'\nimport { isDynamicRoute } from '../shared/lib/router/utils/is-dynamic'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { trace } from '../trace'\nimport { setHttpClientAndAgentOptions } from '../server/setup-http-agent-env'\nimport { addRequestMeta } from '../server/request-meta'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { createRequestResponseMocks } from '../server/lib/mock-request'\nimport { isAppRouteRoute } from '../lib/is-app-route-route'\nimport { hasNextSupport } from '../server/ci-info'\nimport { exportAppRoute } from './routes/app-route'\nimport { exportAppPage } from './routes/app-page'\nimport { exportPagesPage } from './routes/pages'\nimport { getParams } from './helpers/get-params'\nimport { createIncrementalCache } from './helpers/create-incremental-cache'\nimport { isPostpone } from '../server/lib/router-utils/is-postpone'\nimport { isDynamicUsageError } from './helpers/is-dynamic-usage-error'\nimport { isBailoutToCSRError } from '../shared/lib/lazy-dynamic/bailout-to-csr'\nimport {\n  turborepoTraceAccess,\n  TurborepoAccessTraceResult,\n} from '../build/turborepo-access-trace'\nimport type { Params } from '../server/request/params'\nimport {\n  createOpaqueFallbackRouteParams,\n  type OpaqueFallbackRouteParams,\n} from '../server/request/fallback-params'\nimport { needsExperimentalReact } from '../lib/needs-experimental-react'\nimport type { AppRouteRouteModule } from '../server/route-modules/app-route/module.compiled'\nimport { isStaticGenBailoutError } from '../client/components/static-generation-bailout'\nimport type { PagesRenderContext, PagesSharedContext } from '../server/render'\nimport type { AppSharedContext } from '../server/app-render/app-render'\nimport { MultiFileWriter } from '../lib/multi-file-writer'\nimport { createRenderResumeDataCache } from '../server/resume-data-cache/resume-data-cache'\nimport { installGlobalBehaviors } from '../server/node-environment-extensions/global-behaviors'\n;(globalThis as any).__NEXT_DATA__ = {\n  nextExport: true,\n}\n\nclass TimeoutError extends Error {\n  code = 'NEXT_EXPORT_TIMEOUT_ERROR'\n}\n\nclass ExportPageError extends Error {\n  code = 'NEXT_EXPORT_PAGE_ERROR'\n}\n\nasync function exportPageImpl(\n  input: ExportPageInput,\n  fileWriter: MultiFileWriter\n): Promise<ExportRouteResult | undefined> {\n  const {\n    exportPath,\n    distDir,\n    pagesDataDir,\n    buildExport = false,\n    subFolders = false,\n    optimizeCss,\n    disableOptimizedLoading,\n    debugOutput = false,\n    enableExperimentalReact,\n    trailingSlash,\n    sriEnabled,\n    renderOpts: commonRenderOpts,\n    outDir: commonOutDir,\n    buildId,\n    renderResumeDataCache,\n  } = input\n\n  if (enableExperimentalReact) {\n    process.env.__NEXT_EXPERIMENTAL_REACT = 'true'\n  }\n\n  const {\n    path,\n    page,\n\n    // The parameters that are currently unknown.\n    _fallbackRouteParams = [],\n\n    // Check if this is an `app/` page.\n    _isAppDir: isAppDir = false,\n\n    // Check if this should error when dynamic usage is detected.\n    _isDynamicError: isDynamicError = false,\n\n    // If this page supports partial prerendering, then we need to pass that to\n    // the renderOpts.\n    _isRoutePPREnabled: isRoutePPREnabled,\n\n    // Configure the rendering of the page to allow that an empty static shell\n    // is generated while rendering using PPR and Cache Components.\n    _allowEmptyStaticShell: allowEmptyStaticShell = false,\n\n    // Pull the original query out.\n    query: originalQuery = {},\n  } = exportPath\n\n  const fallbackRouteParams: OpaqueFallbackRouteParams | null =\n    createOpaqueFallbackRouteParams(_fallbackRouteParams)\n\n  let query = { ...originalQuery }\n  const pathname = normalizeAppPath(page)\n  const isDynamic = isDynamicRoute(page)\n  const outDir = isAppDir ? join(distDir, 'server/app') : commonOutDir\n\n  const filePath = normalizePagePath(path)\n\n  let updatedPath = exportPath._ssgPath || path\n  let locale = exportPath._locale || commonRenderOpts.locale\n\n  if (commonRenderOpts.locale) {\n    const localePathResult = normalizeLocalePath(path, commonRenderOpts.locales)\n\n    if (localePathResult.detectedLocale) {\n      updatedPath = localePathResult.pathname\n      locale = localePathResult.detectedLocale\n    }\n  }\n\n  // We need to show a warning if they try to provide query values\n  // for an auto-exported page since they won't be available\n  const hasOrigQueryValues = Object.keys(originalQuery).length > 0\n\n  // Check if the page is a specified dynamic route\n  const { pathname: nonLocalizedPath } = normalizeLocalePath(\n    path,\n    commonRenderOpts.locales\n  )\n\n  let params: Params | undefined\n\n  if (isDynamic && page !== nonLocalizedPath) {\n    const normalizedPage = isAppDir ? normalizeAppPath(page) : page\n\n    params = getParams(normalizedPage, updatedPath)\n  }\n\n  const { req, res } = createRequestResponseMocks({ url: updatedPath })\n\n  // If this is a status code page, then set the response code.\n  for (const statusCode of [404, 500]) {\n    if (\n      [\n        `/${statusCode}`,\n        `/${statusCode}.html`,\n        `/${statusCode}/index.html`,\n      ].some((p) => p === updatedPath || `/${locale}${p}` === updatedPath)\n    ) {\n      res.statusCode = statusCode\n    }\n  }\n\n  // Ensure that the URL has a trailing slash if it's configured.\n  if (trailingSlash && !req.url?.endsWith('/')) {\n    req.url += '/'\n  }\n\n  if (\n    locale &&\n    buildExport &&\n    commonRenderOpts.domainLocales &&\n    commonRenderOpts.domainLocales.some(\n      (dl) => dl.defaultLocale === locale || dl.locales?.includes(locale || '')\n    )\n  ) {\n    addRequestMeta(req, 'isLocaleDomain', true)\n  }\n\n  const getHtmlFilename = (p: string) =>\n    subFolders ? `${p}${sep}index.html` : `${p}.html`\n\n  let htmlFilename = getHtmlFilename(filePath)\n\n  // dynamic routes can provide invalid extensions e.g. /blog/[...slug] returns an\n  // extension of `.slug]`\n  const pageExt = isDynamic || isAppDir ? '' : extname(page)\n  const pathExt = isDynamic || isAppDir ? '' : extname(path)\n\n  // force output 404.html for backwards compat\n  if (path === '/404.html') {\n    htmlFilename = path\n  }\n  // Make sure page isn't a folder with a dot in the name e.g. `v1.2`\n  else if (pageExt !== pathExt && pathExt !== '') {\n    const isBuiltinPaths = ['/500', '/404'].some(\n      (p) => p === path || p === path + '.html'\n    )\n    // If the ssg path has .html extension, and it's not builtin paths, use it directly\n    // Otherwise, use that as the filename instead\n    const isHtmlExtPath = !isBuiltinPaths && path.endsWith('.html')\n    htmlFilename = isHtmlExtPath ? getHtmlFilename(path) : path\n  } else if (path === '/') {\n    // If the path is the root, just use index.html\n    htmlFilename = 'index.html'\n  }\n\n  const baseDir = join(outDir, dirname(htmlFilename))\n  let htmlFilepath = join(outDir, htmlFilename)\n\n  await fs.mkdir(baseDir, { recursive: true })\n\n  const components = await loadComponents({\n    distDir,\n    page,\n    isAppPath: isAppDir,\n    isDev: false,\n    sriEnabled,\n    needsManifestsForLegacyReasons: true,\n  })\n\n  // Handle App Routes.\n  if (isAppDir && isAppRouteRoute(page)) {\n    return exportAppRoute(\n      req,\n      res,\n      params,\n      page,\n      components.routeModule as AppRouteRouteModule,\n      commonRenderOpts.incrementalCache,\n      commonRenderOpts.cacheLifeProfiles,\n      htmlFilepath,\n      fileWriter,\n      commonRenderOpts.cacheComponents,\n      commonRenderOpts.experimental,\n      buildId\n    )\n  }\n\n  const renderOpts: WorkerRenderOpts = {\n    ...components,\n    ...commonRenderOpts,\n    params,\n    optimizeCss,\n    disableOptimizedLoading,\n    locale,\n    supportsDynamicResponse: false,\n    // During the export phase in next build, we always enable the streaming metadata since if there's\n    // any dynamic access in metadata we can determine it in the build phase.\n    // If it's static, then it won't affect anything.\n    // If it's dynamic, then it can be handled when request hits the route.\n    serveStreamingMetadata: true,\n    allowEmptyStaticShell,\n    experimental: {\n      ...commonRenderOpts.experimental,\n      isRoutePPREnabled,\n    },\n    renderResumeDataCache,\n  }\n\n  // Handle App Pages\n  if (isAppDir) {\n    const sharedContext: AppSharedContext = { buildId }\n\n    return exportAppPage(\n      req,\n      res,\n      page,\n      path,\n      pathname,\n      query,\n      fallbackRouteParams,\n      renderOpts,\n      htmlFilepath,\n      debugOutput,\n      isDynamicError,\n      fileWriter,\n      sharedContext\n    )\n  }\n\n  const sharedContext: PagesSharedContext = {\n    buildId,\n    deploymentId: commonRenderOpts.deploymentId,\n    customServer: undefined,\n  }\n\n  const renderContext: PagesRenderContext = {\n    isFallback: exportPath._pagesFallback ?? false,\n    isDraftMode: false,\n    developmentNotFoundSourcePage: undefined,\n  }\n\n  return exportPagesPage(\n    req,\n    res,\n    path,\n    page,\n    query,\n    params,\n    htmlFilepath,\n    htmlFilename,\n    pagesDataDir,\n    buildExport,\n    isDynamic,\n    sharedContext,\n    renderContext,\n    hasOrigQueryValues,\n    renderOpts,\n    components,\n    fileWriter\n  )\n}\n\nexport async function exportPages(\n  input: ExportPagesInput\n): Promise<ExportPagesResult> {\n  const {\n    exportPaths,\n    dir,\n    distDir,\n    outDir,\n    cacheHandler,\n    cacheMaxMemorySize,\n    fetchCacheKeyPrefix,\n    pagesDataDir,\n    renderOpts,\n    nextConfig,\n    options,\n    renderResumeDataCachesByPage = {},\n  } = input\n\n  installGlobalBehaviors(nextConfig)\n\n  if (nextConfig.enablePrerenderSourceMaps) {\n    try {\n      // Same as `next dev`\n      // Limiting the stack trace to a useful amount of frames is handled by ignore-listing.\n      // TODO: How high can we go without severely impacting CPU/memory?\n      Error.stackTraceLimit = 50\n    } catch {}\n  }\n\n  // If the fetch cache was enabled, we need to create an incremental\n  // cache instance for this page.\n  const incrementalCache = await createIncrementalCache({\n    cacheHandler,\n    cacheMaxMemorySize,\n    fetchCacheKeyPrefix,\n    distDir,\n    dir,\n    // skip writing to disk in minimal mode for now, pending some\n    // changes to better support it\n    flushToDisk: !hasNextSupport,\n    cacheHandlers: nextConfig.cacheHandlers,\n  })\n\n  renderOpts.incrementalCache = incrementalCache\n\n  const maxConcurrency =\n    nextConfig.experimental.staticGenerationMaxConcurrency ?? 8\n  const results: ExportPagesResult = []\n\n  const exportPageWithRetry = async (\n    exportPath: ExportPathEntry,\n    maxAttempts: number\n  ) => {\n    const { page, path } = exportPath\n    const pageKey = page !== path ? `${page}: ${path}` : path\n    let attempt = 0\n    let result\n\n    const hasDebuggerAttached =\n      // Also tests for `inspect-brk`\n      process.env.NODE_OPTIONS?.includes('--inspect')\n\n    const renderResumeDataCache = renderResumeDataCachesByPage[page]\n      ? createRenderResumeDataCache(renderResumeDataCachesByPage[page])\n      : undefined\n\n    while (attempt < maxAttempts) {\n      try {\n        result = await Promise.race<ExportPageResult | undefined>([\n          exportPage({\n            exportPath,\n            distDir,\n            outDir,\n            pagesDataDir,\n            renderOpts,\n            trailingSlash: nextConfig.trailingSlash,\n            subFolders: nextConfig.trailingSlash && !options.buildExport,\n            buildExport: options.buildExport,\n            optimizeCss: nextConfig.experimental.optimizeCss,\n            disableOptimizedLoading:\n              nextConfig.experimental.disableOptimizedLoading,\n            parentSpanId: input.parentSpanId,\n            httpAgentOptions: nextConfig.httpAgentOptions,\n            debugOutput: options.debugOutput,\n            enableExperimentalReact: needsExperimentalReact(nextConfig),\n            sriEnabled: Boolean(nextConfig.experimental.sri?.algorithm),\n            buildId: input.buildId,\n            renderResumeDataCache,\n          }),\n          hasDebuggerAttached\n            ? // With a debugger attached, exporting can take infinitely if we paused script execution.\n              new Promise(() => {})\n            : // If exporting the page takes longer than the timeout, reject the promise.\n              new Promise((_, reject) => {\n                setTimeout(() => {\n                  reject(new TimeoutError())\n                }, nextConfig.staticPageGenerationTimeout * 1000)\n              }),\n        ])\n\n        // If there was an error in the export, throw it immediately. In the catch block, we might retry the export,\n        // or immediately fail the build, depending on user configuration. We might also continue on and attempt other pages.\n        if (result && 'error' in result) {\n          throw new ExportPageError()\n        }\n\n        // If the export succeeds, break out of the retry loop\n        break\n      } catch (err) {\n        // The only error that should be caught here is an ExportError, as `exportPage` doesn't throw and instead returns an object with an `error` property.\n        // This is an overly cautious check to ensure that we don't accidentally catch an unexpected error.\n        if (!(err instanceof ExportPageError || err instanceof TimeoutError)) {\n          throw err\n        }\n\n        if (err instanceof TimeoutError) {\n          // If the export times out, we will restart the worker up to 3 times.\n          maxAttempts = 3\n        }\n\n        // We've reached the maximum number of attempts\n        if (attempt >= maxAttempts - 1) {\n          // Log a message if we've reached the maximum number of attempts.\n          // We only care to do this if maxAttempts was configured.\n          if (maxAttempts > 1) {\n            console.info(\n              `Failed to build ${pageKey} after ${maxAttempts} attempts.`\n            )\n          }\n          // If prerenderEarlyExit is enabled, we'll exit the build immediately.\n          if (nextConfig.experimental.prerenderEarlyExit) {\n            console.error(\n              `Export encountered an error on ${pageKey}, exiting the build.`\n            )\n            process.exit(1)\n          } else {\n            // Otherwise, this is a no-op. The build will continue, and a summary of failed pages will be displayed at the end.\n          }\n        } else {\n          // Otherwise, we have more attempts to make. Wait before retrying\n          if (err instanceof TimeoutError) {\n            console.info(\n              `Failed to build ${pageKey} (attempt ${attempt + 1} of ${maxAttempts}) because it took more than ${nextConfig.staticPageGenerationTimeout} seconds. Retrying again shortly.`\n            )\n          } else {\n            console.info(\n              `Failed to build ${pageKey} (attempt ${attempt + 1} of ${maxAttempts}). Retrying again shortly.`\n            )\n          }\n\n          // Exponential backoff with random jitter to avoid thundering herd on retries\n          const baseDelay = 500 // 500ms\n          const maxDelay = 2000 // 2 seconds\n          const delay = Math.min(baseDelay * Math.pow(2, attempt), maxDelay)\n          const jitter = Math.random() * 0.3 * delay // Add up to 30% random jitter\n          await new Promise((r) => setTimeout(r, delay + jitter))\n        }\n      }\n\n      attempt++\n    }\n\n    return { result, path, page, pageKey }\n  }\n\n  for (let i = 0; i < exportPaths.length; i += maxConcurrency) {\n    const subset = exportPaths.slice(i, i + maxConcurrency)\n\n    const subsetResults = await Promise.all(\n      subset.map((exportPath) =>\n        exportPageWithRetry(\n          exportPath,\n          nextConfig.experimental.staticGenerationRetryCount ?? 1\n        )\n      )\n    )\n\n    results.push(...subsetResults)\n  }\n\n  return results\n}\n\nasync function exportPage(\n  input: ExportPageInput\n): Promise<ExportPageResult | undefined> {\n  trace('export-page', input.parentSpanId).setAttribute(\n    'path',\n    input.exportPath.path\n  )\n\n  // Configure the http agent.\n  setHttpClientAndAgentOptions({\n    httpAgentOptions: input.httpAgentOptions,\n  })\n\n  const fileWriter = new MultiFileWriter({\n    writeFile: (filePath, data) => fs.writeFile(filePath, data),\n    mkdir: (dir) => fs.mkdir(dir, { recursive: true }),\n  })\n\n  const exportPageSpan = trace('export-page-worker', input.parentSpanId)\n\n  const start = Date.now()\n\n  const turborepoAccessTraceResult = new TurborepoAccessTraceResult()\n\n  // Export the page.\n  let result: ExportRouteResult | undefined\n  try {\n    result = await exportPageSpan.traceAsyncFn(() =>\n      turborepoTraceAccess(\n        () => exportPageImpl(input, fileWriter),\n        turborepoAccessTraceResult\n      )\n    )\n\n    // Wait for all the files to flush to disk.\n    await fileWriter.wait()\n\n    // If there was no result, then we can exit early.\n    if (!result) return\n\n    // If there was an error, then we can exit early.\n    if ('error' in result) {\n      return { error: result.error, duration: Date.now() - start }\n    }\n  } catch (err) {\n    console.error(\n      `Error occurred prerendering page \"${input.exportPath.path}\". Read more: https://nextjs.org/docs/messages/prerender-error`\n    )\n\n    // bailoutToCSRError errors should not leak to the user as they are not actionable; they're\n    // a framework signal\n    if (!isBailoutToCSRError(err)) {\n      // A static generation bailout error is a framework signal to fail static generation but\n      // and will encode a reason in the error message. If there is a message, we'll print it.\n      // Otherwise there's nothing to show as we don't want to leak an error internal error stack to the user.\n      // TODO: Always log the full error. ignore-listing will take care of hiding internal stacks.\n      if (isStaticGenBailoutError(err)) {\n        if (err.message) {\n          console.error(`Error: ${err.message}`)\n        }\n      } else {\n        console.error(err)\n      }\n    }\n\n    return { error: true, duration: Date.now() - start }\n  }\n\n  // Notify the parent process that we processed a page (used by the progress activity indicator)\n  process.send?.([3, { type: 'activity' }])\n\n  // Otherwise we can return the result.\n  return {\n    ...result,\n    duration: Date.now() - start,\n    turborepoAccessTraceResult: turborepoAccessTraceResult.serialize(),\n  }\n}\n\nprocess.on('unhandledRejection', (err: unknown) => {\n  // if it's a postpone error, it'll be handled later\n  // when the postponed promise is actually awaited.\n  if (isPostpone(err)) {\n    return\n  }\n\n  // we don't want to log these errors\n  if (isDynamicUsageError(err)) {\n    return\n  }\n\n  console.error(err)\n})\n\nprocess.on('rejectionHandled', () => {\n  // It is ok to await a Promise late in Next.js as it allows for better\n  // prefetching patterns to avoid waterfalls. We ignore logging these.\n  // We should've already errored in anyway unhandledRejection.\n})\n\nconst FATAL_UNHANDLED_NEXT_API_EXIT_CODE = 78\n\nprocess.on('uncaughtException', (err) => {\n  if (isDynamicUsageError(err)) {\n    console.error(\n      'A Next.js API that uses exceptions to signal framework behavior was uncaught. This suggests improper usage of a Next.js API. The original error is printed below and the build will now exit.'\n    )\n    console.error(err)\n    process.exit(FATAL_UNHANDLED_NEXT_API_EXIT_CODE)\n  } else {\n    console.error(err)\n  }\n})\n"],"names":["process","env","NEXT_IS_EXPORT_WORKER","extname","join","dirname","sep","fs","loadComponents","isDynamicRoute","normalizePagePath","normalizeLocalePath","trace","setHttpClientAndAgentOptions","addRequestMeta","normalizeAppPath","createRequestResponseMocks","isAppRouteRoute","hasNextSupport","exportAppRoute","exportAppPage","exportPagesPage","getParams","createIncrementalCache","isPostpone","isDynamicUsageError","isBailoutToCSRError","turborepoTraceAccess","TurborepoAccessTraceResult","createOpaqueFallbackRouteParams","needsExperimentalReact","isStaticGenBailoutError","MultiFileWriter","createRenderResumeDataCache","installGlobalBehaviors","globalThis","__NEXT_DATA__","nextExport","TimeoutError","Error","code","ExportPageError","exportPageImpl","input","fileWriter","req","exportPath","distDir","pagesDataDir","buildExport","subFolders","optimizeCss","disableOptimizedLoading","debugOutput","enableExperimentalReact","trailingSlash","sriEnabled","renderOpts","commonRenderOpts","outDir","commonOutDir","buildId","renderResumeDataCache","__NEXT_EXPERIMENTAL_REACT","path","page","_fallbackRouteParams","_isAppDir","isAppDir","_isDynamicError","isDynamicError","_isRoutePPREnabled","isRoutePPREnabled","_allowEmptyStaticShell","allowEmptyStaticShell","query","originalQuery","fallbackRouteParams","pathname","isDynamic","filePath","updatedPath","_ssgPath","locale","_locale","localePathResult","locales","detectedLocale","hasOrigQueryValues","Object","keys","length","nonLocalizedPath","params","normalizedPage","res","url","statusCode","some","p","endsWith","domainLocales","dl","defaultLocale","includes","getHtmlFilename","htmlFilename","pageExt","pathExt","isBuiltinPaths","isHtmlExtPath","baseDir","htmlFilepath","mkdir","recursive","components","isAppPath","isDev","needsManifestsForLegacyReasons","routeModule","incrementalCache","cacheLifeProfiles","cacheComponents","experimental","supportsDynamicResponse","serveStreamingMetadata","sharedContext","deploymentId","customServer","undefined","renderContext","isFallback","_pagesFallback","isDraftMode","developmentNotFoundSourcePage","exportPages","exportPaths","dir","cacheHandler","cacheMaxMemorySize","fetchCacheKeyPrefix","nextConfig","options","renderResumeDataCachesByPage","enablePrerenderSourceMaps","stackTraceLimit","flushToDisk","cacheHandlers","maxConcurrency","staticGenerationMaxConcurrency","results","exportPageWithRetry","maxAttempts","pageKey","attempt","result","hasDebuggerAttached","NODE_OPTIONS","Promise","race","exportPage","parentSpanId","httpAgentOptions","Boolean","sri","algorithm","_","reject","setTimeout","staticPageGenerationTimeout","err","console","info","prerenderEarlyExit","error","exit","baseDelay","maxDelay","delay","Math","min","pow","jitter","random","r","i","subset","slice","subsetResults","all","map","staticGenerationRetryCount","push","setAttribute","writeFile","data","exportPageSpan","start","Date","now","turborepoAccessTraceResult","traceAsyncFn","wait","duration","message","send","type","serialize","on","FATAL_UNHANDLED_NEXT_API_EXIT_CODE"],"mappings":"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","ignoreList":[0]}