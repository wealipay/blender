{"version":3,"sources":["../../../src/client/dev/on-demand-entries-client.ts"],"sourcesContent":["import Router from '../router'\nimport { sendMessage } from './hot-reloader/pages/websocket'\n\nexport default async () => {\n  // Never send pings when using Turbopack as it's not used.\n  // Pings were originally used to keep track of active routes in on-demand-entries with webpack.\n  if (process.env.TURBOPACK) {\n    return\n  }\n\n  Router.ready(() => {\n    setInterval(() => {\n      // when notFound: true is returned we should use the notFoundPage\n      // as the Router.pathname will point to the 404 page but we want\n      // to ping the source page that returned notFound: true instead\n      const notFoundSrcPage = self.__NEXT_DATA__.notFoundSrcPage\n      const pathname =\n        (Router.pathname === '/404' || Router.pathname === '/_error') &&\n        notFoundSrcPage\n          ? notFoundSrcPage\n          : Router.pathname\n\n      sendMessage(JSON.stringify({ event: 'ping', page: pathname }))\n    }, 2500)\n  })\n}\n"],"names":["process","env","TURBOPACK","Router","ready","setInterval","notFoundSrcPage","self","__NEXT_DATA__","pathname","sendMessage","JSON","stringify","event","page"],"mappings":";;;;+BAGA;;;eAAA;;;;iEAHmB;2BACS;MAE5B,WAAe;IACb,0DAA0D;IAC1D,+FAA+F;IAC/F,IAAIA,QAAQC,GAAG,CAACC,SAAS,EAAE;QACzB;IACF;IAEAC,eAAM,CAACC,KAAK,CAAC;QACXC,YAAY;YACV,iEAAiE;YACjE,gEAAgE;YAChE,+DAA+D;YAC/D,MAAMC,kBAAkBC,KAAKC,aAAa,CAACF,eAAe;YAC1D,MAAMG,WACJ,AAACN,CAAAA,eAAM,CAACM,QAAQ,KAAK,UAAUN,eAAM,CAACM,QAAQ,KAAK,SAAQ,KAC3DH,kBACIA,kBACAH,eAAM,CAACM,QAAQ;YAErBC,IAAAA,sBAAW,EAACC,KAAKC,SAAS,CAAC;gBAAEC,OAAO;gBAAQC,MAAML;YAAS;QAC7D,GAAG;IACL;AACF","ignoreList":[0]}