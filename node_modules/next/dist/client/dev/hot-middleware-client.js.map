{"version":3,"sources":["../../../src/client/dev/hot-middleware-client.ts"],"sourcesContent":["import { HMR_MESSAGE_SENT_TO_BROWSER } from '../../server/dev/hot-reloader-types'\nimport type {\n  NextRouter,\n  PrivateRouteInfo,\n} from '../../shared/lib/router/router'\nimport connect from './hot-reloader/pages/hot-reloader-pages'\nimport { sendMessage } from './hot-reloader/pages/websocket'\n\n// Define a local type for the window.next object\ninterface NextWindow {\n  next?: {\n    router?: NextRouter & {\n      components: { [pathname: string]: PrivateRouteInfo }\n    }\n  }\n  __nextDevClientId?: string\n  location: Location\n}\n\ndeclare const window: NextWindow\n\nlet reloading = false\n\nexport default () => {\n  const devClient = connect()\n\n  devClient.subscribeToHmrEvent((message) => {\n    if (reloading) return\n\n    // Retrieve the router if it's available\n    const router = window.next?.router\n\n    // Determine if we're on an error page or the router is not initialized\n    const isOnErrorPage =\n      !router || router.pathname === '/404' || router.pathname === '/_error'\n\n    switch (message.type) {\n      case HMR_MESSAGE_SENT_TO_BROWSER.RELOAD_PAGE: {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-reload-page',\n            clientId: window.__nextDevClientId,\n          })\n        )\n        reloading = true\n        return window.location.reload()\n      }\n      case HMR_MESSAGE_SENT_TO_BROWSER.REMOVED_PAGE: {\n        const [page] = message.data\n\n        // Check if the removed page is the current page\n        const isCurrentPage = page === router?.pathname\n\n        // We enter here if the removed page is currently being viewed\n        // or if we happen to be on an error page.\n        if (isCurrentPage || isOnErrorPage) {\n          sendMessage(\n            JSON.stringify({\n              event: 'client-removed-page',\n              clientId: window.__nextDevClientId,\n              page,\n            })\n          )\n          return window.location.reload()\n        }\n        return\n      }\n      case HMR_MESSAGE_SENT_TO_BROWSER.ADDED_PAGE: {\n        const [page] = message.data\n\n        // Check if the added page is the current page\n        const isCurrentPage = page === router?.pathname\n\n        // Check if the page component is not yet loaded\n        const isPageNotLoaded =\n          page !== null && typeof router?.components?.[page] === 'undefined'\n\n        // We enter this block if the newly added page is the one currently being viewed\n        // but hasn't been loaded yet, or if we're on an error page.\n        if ((isCurrentPage && isPageNotLoaded) || isOnErrorPage) {\n          sendMessage(\n            JSON.stringify({\n              event: 'client-added-page',\n              clientId: window.__nextDevClientId,\n              page,\n            })\n          )\n          return window.location.reload()\n        }\n        return\n      }\n      case HMR_MESSAGE_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE: {\n        return\n      }\n      default: {\n        message satisfies never\n      }\n    }\n  })\n\n  return devClient\n}\n"],"names":["reloading","devClient","connect","subscribeToHmrEvent","message","router","window","next","isOnErrorPage","pathname","type","HMR_MESSAGE_SENT_TO_BROWSER","RELOAD_PAGE","sendMessage","JSON","stringify","event","clientId","__nextDevClientId","location","reload","REMOVED_PAGE","page","data","isCurrentPage","ADDED_PAGE","isPageNotLoaded","components","DEV_PAGES_MANIFEST_UPDATE"],"mappings":";;;;+BAuBA;;;eAAA;;;;kCAvB4C;2EAKxB;2BACQ;AAe5B,IAAIA,YAAY;MAEhB,WAAe;IACb,MAAMC,YAAYC,IAAAA,yBAAO;IAEzBD,UAAUE,mBAAmB,CAAC,CAACC;QAC7B,IAAIJ,WAAW;QAEf,wCAAwC;QACxC,MAAMK,SAASC,OAAOC,IAAI,EAAEF;QAE5B,uEAAuE;QACvE,MAAMG,gBACJ,CAACH,UAAUA,OAAOI,QAAQ,KAAK,UAAUJ,OAAOI,QAAQ,KAAK;QAE/D,OAAQL,QAAQM,IAAI;YAClB,KAAKC,6CAA2B,CAACC,WAAW;gBAAE;oBAC5CC,IAAAA,sBAAW,EACTC,KAAKC,SAAS,CAAC;wBACbC,OAAO;wBACPC,UAAUX,OAAOY,iBAAiB;oBACpC;oBAEFlB,YAAY;oBACZ,OAAOM,OAAOa,QAAQ,CAACC,MAAM;gBAC/B;YACA,KAAKT,6CAA2B,CAACU,YAAY;gBAAE;oBAC7C,MAAM,CAACC,KAAK,GAAGlB,QAAQmB,IAAI;oBAE3B,gDAAgD;oBAChD,MAAMC,gBAAgBF,SAASjB,QAAQI;oBAEvC,8DAA8D;oBAC9D,0CAA0C;oBAC1C,IAAIe,iBAAiBhB,eAAe;wBAClCK,IAAAA,sBAAW,EACTC,KAAKC,SAAS,CAAC;4BACbC,OAAO;4BACPC,UAAUX,OAAOY,iBAAiB;4BAClCI;wBACF;wBAEF,OAAOhB,OAAOa,QAAQ,CAACC,MAAM;oBAC/B;oBACA;gBACF;YACA,KAAKT,6CAA2B,CAACc,UAAU;gBAAE;oBAC3C,MAAM,CAACH,KAAK,GAAGlB,QAAQmB,IAAI;oBAE3B,8CAA8C;oBAC9C,MAAMC,gBAAgBF,SAASjB,QAAQI;oBAEvC,gDAAgD;oBAChD,MAAMiB,kBACJJ,SAAS,QAAQ,OAAOjB,QAAQsB,YAAY,CAACL,KAAK,KAAK;oBAEzD,gFAAgF;oBAChF,4DAA4D;oBAC5D,IAAI,AAACE,iBAAiBE,mBAAoBlB,eAAe;wBACvDK,IAAAA,sBAAW,EACTC,KAAKC,SAAS,CAAC;4BACbC,OAAO;4BACPC,UAAUX,OAAOY,iBAAiB;4BAClCI;wBACF;wBAEF,OAAOhB,OAAOa,QAAQ,CAACC,MAAM;oBAC/B;oBACA;gBACF;YACA,KAAKT,6CAA2B,CAACiB,yBAAyB;gBAAE;oBAC1D;gBACF;YACA;gBAAS;oBACPxB;gBACF;QACF;IACF;IAEA,OAAOH;AACT","ignoreList":[0]}