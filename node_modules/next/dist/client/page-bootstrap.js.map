{"version":3,"sources":["../../src/client/page-bootstrap.ts"],"sourcesContent":["import '../lib/require-instrumentation-client'\nimport { hydrate, router } from './'\nimport initOnDemandEntries from './dev/on-demand-entries-client'\nimport { displayContent } from './dev/fouc'\nimport {\n  connectHMR,\n  addMessageListener,\n} from './dev/hot-reloader/pages/websocket'\nimport {\n  assign,\n  urlQueryToSearchParams,\n} from '../shared/lib/router/utils/querystring'\nimport { HMR_MESSAGE_SENT_TO_BROWSER } from '../server/dev/hot-reloader-types'\nimport { RuntimeErrorHandler } from './dev/runtime-error-handler'\nimport { REACT_REFRESH_FULL_RELOAD_FROM_ERROR } from './dev/hot-reloader/shared'\nimport { performFullReload } from './dev/hot-reloader/pages/hot-reloader-pages'\nimport { dispatcher } from 'next/dist/compiled/next-devtools'\n\nexport function pageBootstrap(assetPrefix: string) {\n  connectHMR({ assetPrefix, path: '/_next/webpack-hmr' })\n\n  return hydrate({ beforeRender: displayContent }).then(() => {\n    initOnDemandEntries()\n\n    let reloading = false\n\n    addMessageListener((message) => {\n      if (reloading) return\n\n      switch (message.type) {\n        case HMR_MESSAGE_SENT_TO_BROWSER.SERVER_ERROR: {\n          const errorObject = JSON.parse(message.errorJSON)\n          const error = new Error(errorObject.message)\n          error.stack = errorObject.stack\n          throw error\n        }\n        case HMR_MESSAGE_SENT_TO_BROWSER.RELOAD_PAGE: {\n          reloading = true\n          window.location.reload()\n          break\n        }\n        case HMR_MESSAGE_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE: {\n          fetch(\n            `${assetPrefix}/_next/static/development/_devPagesManifest.json`\n          )\n            .then((res) => res.json())\n            .then((manifest) => {\n              window.__DEV_PAGES_MANIFEST = manifest\n            })\n            .catch((err) => {\n              console.log(`Failed to fetch devPagesManifest`, err)\n            })\n          break\n        }\n        case HMR_MESSAGE_SENT_TO_BROWSER.MIDDLEWARE_CHANGES: {\n          return window.location.reload()\n        }\n        case HMR_MESSAGE_SENT_TO_BROWSER.CLIENT_CHANGES: {\n          // This is used in `../server/dev/turbopack-utils.ts`.\n          const isOnErrorPage = window.next.router.pathname === '/_error'\n          // On the error page we want to reload the page when a page was changed\n          if (isOnErrorPage) {\n            if (RuntimeErrorHandler.hadRuntimeError) {\n              console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n            }\n            reloading = true\n            performFullReload(null)\n          }\n          break\n        }\n        case HMR_MESSAGE_SENT_TO_BROWSER.SERVER_ONLY_CHANGES: {\n          if (RuntimeErrorHandler.hadRuntimeError) {\n            console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n            performFullReload(null)\n          }\n\n          const { pages } = message\n\n          // Make sure to reload when the dev-overlay is showing for an\n          // API route\n          // TODO: Fix `__NEXT_PAGE` type\n          if (pages.includes(router.query.__NEXT_PAGE as string)) {\n            return window.location.reload()\n          }\n\n          if (!router.clc && pages.includes(router.pathname)) {\n            console.log('Refreshing page data due to server-side change')\n            dispatcher.buildingIndicatorShow()\n            const clearIndicator = dispatcher.buildingIndicatorHide\n\n            router\n              .replace(\n                router.pathname +\n                  '?' +\n                  String(\n                    assign(\n                      urlQueryToSearchParams(router.query),\n                      new URLSearchParams(location.search)\n                    )\n                  ),\n                router.asPath,\n                { scroll: false }\n              )\n              .catch(() => {\n                // trigger hard reload when failing to refresh data\n                // to show error overlay properly\n                location.reload()\n              })\n              .finally(clearIndicator)\n          }\n          break\n        }\n        case HMR_MESSAGE_SENT_TO_BROWSER.ADDED_PAGE:\n        case HMR_MESSAGE_SENT_TO_BROWSER.REMOVED_PAGE:\n        case HMR_MESSAGE_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES:\n        case HMR_MESSAGE_SENT_TO_BROWSER.SYNC:\n        case HMR_MESSAGE_SENT_TO_BROWSER.BUILT:\n        case HMR_MESSAGE_SENT_TO_BROWSER.BUILDING:\n        case HMR_MESSAGE_SENT_TO_BROWSER.TURBOPACK_MESSAGE:\n        case HMR_MESSAGE_SENT_TO_BROWSER.TURBOPACK_CONNECTED:\n        case HMR_MESSAGE_SENT_TO_BROWSER.ISR_MANIFEST:\n        case HMR_MESSAGE_SENT_TO_BROWSER.DEVTOOLS_CONFIG:\n        case HMR_MESSAGE_SENT_TO_BROWSER.REACT_DEBUG_CHUNK:\n        case HMR_MESSAGE_SENT_TO_BROWSER.REQUEST_CURRENT_ERROR_STATE:\n        case HMR_MESSAGE_SENT_TO_BROWSER.REQUEST_PAGE_METADATA:\n        case HMR_MESSAGE_SENT_TO_BROWSER.CACHE_INDICATOR:\n          // Most of these action types are handled in\n          // src/client/dev/hot-reloader/pages/hot-reloader-pages.ts and\n          // src/client/dev/hot-reloader/app/hot-reloader-app.tsx\n          break\n        default:\n          message satisfies never\n      }\n    })\n  })\n}\n"],"names":["pageBootstrap","assetPrefix","connectHMR","path","hydrate","beforeRender","displayContent","then","initOnDemandEntries","reloading","addMessageListener","message","type","HMR_MESSAGE_SENT_TO_BROWSER","SERVER_ERROR","errorObject","JSON","parse","errorJSON","error","Error","stack","RELOAD_PAGE","window","location","reload","DEV_PAGES_MANIFEST_UPDATE","fetch","res","json","manifest","__DEV_PAGES_MANIFEST","catch","err","console","log","MIDDLEWARE_CHANGES","CLIENT_CHANGES","isOnErrorPage","next","router","pathname","RuntimeErrorHandler","hadRuntimeError","warn","REACT_REFRESH_FULL_RELOAD_FROM_ERROR","performFullReload","SERVER_ONLY_CHANGES","pages","includes","query","__NEXT_PAGE","clc","dispatcher","buildingIndicatorShow","clearIndicator","buildingIndicatorHide","replace","String","assign","urlQueryToSearchParams","URLSearchParams","search","asPath","scroll","finally","ADDED_PAGE","REMOVED_PAGE","SERVER_COMPONENT_CHANGES","SYNC","BUILT","BUILDING","TURBOPACK_MESSAGE","TURBOPACK_CONNECTED","ISR_MANIFEST","DEVTOOLS_CONFIG","REACT_DEBUG_CHUNK","REQUEST_CURRENT_ERROR_STATE","REQUEST_PAGE_METADATA","CACHE_INDICATOR"],"mappings":"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","ignoreList":[0]}