{"version":3,"sources":["../../../src/build/turbopack-build/impl.ts"],"sourcesContent":["import path from 'path'\nimport { validateTurboNextConfig } from '../../lib/turbopack-warning'\nimport { isFileSystemCacheEnabledForBuild } from '../../shared/lib/turbopack/utils'\nimport { NextBuildContext } from '../build-context'\nimport { createDefineEnv, loadBindings } from '../swc'\nimport {\n  handleRouteType,\n  rawEntrypointsToEntrypoints,\n} from '../handle-entrypoints'\nimport { TurbopackManifestLoader } from '../../shared/lib/turbopack/manifest-loader'\nimport { promises as fs } from 'fs'\nimport { PHASE_PRODUCTION_BUILD } from '../../shared/lib/constants'\nimport loadConfig from '../../server/config'\nimport { hasCustomExportOutput } from '../../export/utils'\nimport { Telemetry } from '../../telemetry/storage'\nimport { setGlobal } from '../../trace'\nimport { isCI } from '../../server/ci-info'\nimport { backgroundLogCompilationEvents } from '../../shared/lib/turbopack/compilation-events'\nimport { getSupportedBrowsers, printBuildErrors } from '../utils'\nimport { normalizePath } from '../../lib/normalize-path'\nimport type { RawEntrypoints, TurbopackResult } from '../swc/types'\n\nexport async function turbopackBuild(): Promise<{\n  duration: number\n  buildTraceContext: undefined\n  shutdownPromise: Promise<void>\n}> {\n  await validateTurboNextConfig({\n    dir: NextBuildContext.dir!,\n    isDev: false,\n  })\n\n  const config = NextBuildContext.config!\n  const dir = NextBuildContext.dir!\n  const distDir = NextBuildContext.distDir!\n  const buildId = NextBuildContext.buildId!\n  const encryptionKey = NextBuildContext.encryptionKey!\n  const previewProps = NextBuildContext.previewProps!\n  const hasRewrites = NextBuildContext.hasRewrites!\n  const rewrites = NextBuildContext.rewrites!\n  const noMangling = NextBuildContext.noMangling!\n  const currentNodeJsVersion = process.versions.node\n\n  const startTime = process.hrtime()\n  const bindings = await loadBindings(config?.experimental?.useWasmBinary)\n  const dev = false\n\n  const supportedBrowsers = getSupportedBrowsers(dir, dev)\n\n  const persistentCaching = isFileSystemCacheEnabledForBuild(config)\n  const rootPath = config.turbopack?.root || config.outputFileTracingRoot || dir\n  const project = await bindings.turbo.createProject(\n    {\n      rootPath: config.turbopack?.root || config.outputFileTracingRoot || dir,\n      projectPath: normalizePath(path.relative(rootPath, dir) || '.'),\n      distDir,\n      nextConfig: config,\n      watch: {\n        enable: false,\n      },\n      dev,\n      env: process.env as Record<string, string>,\n      defineEnv: createDefineEnv({\n        isTurbopack: true,\n        clientRouterFilters: NextBuildContext.clientRouterFilters!,\n        config,\n        dev,\n        distDir,\n        projectPath: dir,\n        fetchCacheKeyPrefix: config.experimental.fetchCacheKeyPrefix,\n        hasRewrites,\n        // Implemented separately in Turbopack, doesn't have to be passed here.\n        middlewareMatchers: undefined,\n        rewrites,\n      }),\n      buildId,\n      encryptionKey,\n      previewProps,\n      browserslistQuery: supportedBrowsers.join(', '),\n      noMangling,\n      currentNodeJsVersion,\n    },\n    {\n      persistentCaching,\n      memoryLimit: config.experimental?.turbopackMemoryLimit,\n      dependencyTracking: persistentCaching,\n      isCi: isCI,\n      isShortSession: true,\n    }\n  )\n  try {\n    backgroundLogCompilationEvents(project)\n\n    // Write an empty file in a known location to signal this was built with Turbopack\n    await fs.writeFile(path.join(distDir, 'turbopack'), '')\n\n    await fs.mkdir(path.join(distDir, 'server'), { recursive: true })\n    await fs.mkdir(path.join(distDir, 'static', buildId), {\n      recursive: true,\n    })\n    await fs.writeFile(\n      path.join(distDir, 'package.json'),\n      '{\"type\": \"commonjs\"}'\n    )\n\n    let appDirOnly = NextBuildContext.appDirOnly!\n    const entrypoints = await project.writeAllEntrypointsToDisk(appDirOnly)\n    printBuildErrors(entrypoints, dev)\n\n    let routes = entrypoints.routes\n    if (!routes) {\n      // This should never ever happen, there should be an error issue, or the bindings call should\n      // have thrown.\n      throw new Error(`Turbopack build failed`)\n    }\n\n    const hasPagesEntries = Array.from(routes.values()).some((route) => {\n      if (route.type === 'page' || route.type === 'page-api') {\n        return true\n      }\n      return false\n    })\n    // If there's no pages entries, then we are in app-dir-only mode\n    if (!hasPagesEntries) {\n      appDirOnly = true\n    }\n\n    const manifestLoader = new TurbopackManifestLoader({\n      buildId,\n      distDir,\n      encryptionKey,\n    })\n\n    const currentEntrypoints = await rawEntrypointsToEntrypoints(\n      entrypoints as TurbopackResult<RawEntrypoints>\n    )\n\n    const promises: Promise<void>[] = []\n\n    if (!appDirOnly) {\n      for (const [page, route] of currentEntrypoints.page) {\n        promises.push(\n          handleRouteType({\n            page,\n            route,\n            manifestLoader,\n          })\n        )\n      }\n    }\n\n    for (const [page, route] of currentEntrypoints.app) {\n      promises.push(\n        handleRouteType({\n          page,\n          route,\n          manifestLoader,\n        })\n      )\n    }\n\n    await Promise.all(promises)\n\n    await Promise.all([\n      // Only load pages router manifests if not app-only\n      ...(!appDirOnly\n        ? [\n            manifestLoader.loadBuildManifest('_app'),\n            manifestLoader.loadPagesManifest('_app'),\n            manifestLoader.loadFontManifest('_app'),\n            manifestLoader.loadPagesManifest('_document'),\n            manifestLoader.loadClientBuildManifest('_error'),\n            manifestLoader.loadBuildManifest('_error'),\n            manifestLoader.loadPagesManifest('_error'),\n            manifestLoader.loadFontManifest('_error'),\n          ]\n        : []),\n      entrypoints.instrumentation &&\n        manifestLoader.loadMiddlewareManifest(\n          'instrumentation',\n          'instrumentation'\n        ),\n      entrypoints.middleware &&\n        (await manifestLoader.loadMiddlewareManifest(\n          'middleware',\n          'middleware'\n        )),\n    ])\n\n    manifestLoader.writeManifests({\n      devRewrites: undefined,\n      productionRewrites: rewrites,\n      entrypoints: currentEntrypoints,\n    })\n\n    const shutdownPromise = project.shutdown()\n\n    const time = process.hrtime(startTime)\n    return {\n      duration: time[0] + time[1] / 1e9,\n      buildTraceContext: undefined,\n      shutdownPromise,\n    }\n  } catch (err) {\n    await project.shutdown()\n    throw err\n  }\n}\n\nlet shutdownPromise: Promise<void> | undefined\nexport async function workerMain(workerData: {\n  buildContext: typeof NextBuildContext\n}): Promise<\n  Omit<Awaited<ReturnType<typeof turbopackBuild>>, 'shutdownPromise'>\n> {\n  // setup new build context from the serialized data passed from the parent\n  Object.assign(NextBuildContext, workerData.buildContext)\n\n  /// load the config because it's not serializable\n  NextBuildContext.config = await loadConfig(\n    PHASE_PRODUCTION_BUILD,\n    NextBuildContext.dir!,\n    {\n      debugPrerender: NextBuildContext.debugPrerender,\n      reactProductionProfiling: NextBuildContext.reactProductionProfiling,\n    }\n  )\n\n  // Matches handling in build/index.ts\n  // https://github.com/vercel/next.js/blob/84f347fc86f4efc4ec9f13615c215e4b9fb6f8f0/packages/next/src/build/index.ts#L815-L818\n  // Ensures the `config.distDir` option is matched.\n  if (hasCustomExportOutput(NextBuildContext.config)) {\n    NextBuildContext.config.distDir = '.next'\n  }\n\n  // Clone the telemetry for worker\n  const telemetry = new Telemetry({\n    distDir: NextBuildContext.config.distDir,\n  })\n  setGlobal('telemetry', telemetry)\n\n  const {\n    shutdownPromise: resultShutdownPromise,\n    buildTraceContext,\n    duration,\n  } = await turbopackBuild()\n  shutdownPromise = resultShutdownPromise\n  return {\n    buildTraceContext,\n    duration,\n  }\n}\n\nexport async function waitForShutdown(): Promise<void> {\n  if (shutdownPromise) {\n    await shutdownPromise\n  }\n}\n"],"names":["turbopackBuild","waitForShutdown","workerMain","config","validateTurboNextConfig","dir","NextBuildContext","isDev","distDir","buildId","encryptionKey","previewProps","hasRewrites","rewrites","noMangling","currentNodeJsVersion","process","versions","node","startTime","hrtime","bindings","loadBindings","experimental","useWasmBinary","dev","supportedBrowsers","getSupportedBrowsers","persistentCaching","isFileSystemCacheEnabledForBuild","rootPath","turbopack","root","outputFileTracingRoot","project","turbo","createProject","projectPath","normalizePath","path","relative","nextConfig","watch","enable","env","defineEnv","createDefineEnv","isTurbopack","clientRouterFilters","fetchCacheKeyPrefix","middlewareMatchers","undefined","browserslistQuery","join","memoryLimit","turbopackMemoryLimit","dependencyTracking","isCi","isCI","isShortSession","backgroundLogCompilationEvents","fs","writeFile","mkdir","recursive","appDirOnly","entrypoints","writeAllEntrypointsToDisk","printBuildErrors","routes","Error","hasPagesEntries","Array","from","values","some","route","type","manifestLoader","TurbopackManifestLoader","currentEntrypoints","rawEntrypointsToEntrypoints","promises","page","push","handleRouteType","app","Promise","all","loadBuildManifest","loadPagesManifest","loadFontManifest","loadClientBuildManifest","instrumentation","loadMiddlewareManifest","middleware","writeManifests","devRewrites","productionRewrites","shutdownPromise","shutdown","time","duration","buildTraceContext","err","workerData","Object","assign","buildContext","loadConfig","PHASE_PRODUCTION_BUILD","debugPrerender","reactProductionProfiling","hasCustomExportOutput","telemetry","Telemetry","setGlobal","resultShutdownPromise"],"mappings":"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","ignoreList":[0]}