{"version":3,"sources":["../../../../src/build/babel/plugins/next-page-config.ts"],"sourcesContent":["import { types as BabelTypes } from 'next/dist/compiled/babel/core'\nimport type {\n  PluginObj,\n  PluginPass,\n  Visitor,\n  NodePath,\n} from 'next/dist/compiled/babel/core'\n\nconst CONFIG_KEY = 'config'\n\nfunction errorMessage(state: any, details: string): string {\n  const pageName =\n    (state.filename || '').split(state.cwd || '').pop() || 'unknown'\n  return `Invalid page config export found. ${details} in file ${pageName}. See: https://nextjs.org/docs/messages/invalid-page-config`\n}\n\ninterface ConfigState extends PluginPass {\n  bundleDropped?: boolean\n}\n\n// config to parsing pageConfig for client bundles\nexport default function nextPageConfig({\n  types: t,\n}: {\n  types: typeof BabelTypes\n}): PluginObj {\n  return {\n    visitor: {\n      Program: {\n        enter(path, state) {\n          path.traverse(\n            {\n              ExportDeclaration(exportPath, exportState) {\n                if (\n                  BabelTypes.isExportNamedDeclaration(exportPath.node) &&\n                  exportPath.node.specifiers?.some((specifier) => {\n                    return (\n                      (t.isIdentifier(specifier.exported)\n                        ? specifier.exported.name\n                        : specifier.exported.value) === CONFIG_KEY\n                    )\n                  }) &&\n                  BabelTypes.isStringLiteral(\n                    (exportPath.node as BabelTypes.ExportNamedDeclaration)\n                      .source\n                  )\n                ) {\n                  throw new Error(\n                    errorMessage(\n                      exportState,\n                      'Expected object but got export from'\n                    )\n                  )\n                }\n              },\n              ExportNamedDeclaration(\n                exportPath: NodePath<BabelTypes.ExportNamedDeclaration>,\n                exportState: any\n              ) {\n                if (\n                  exportState.bundleDropped ||\n                  (!exportPath.node.declaration &&\n                    exportPath.node.specifiers.length === 0)\n                ) {\n                  return\n                }\n\n                const declarations: BabelTypes.VariableDeclarator[] = [\n                  ...((\n                    exportPath.node\n                      .declaration as BabelTypes.VariableDeclaration\n                  )?.declarations || []),\n                  exportPath.scope.getBinding(CONFIG_KEY)?.path\n                    .node as BabelTypes.VariableDeclarator,\n                ].filter(Boolean)\n\n                for (const specifier of exportPath.node.specifiers) {\n                  if (\n                    (t.isIdentifier(specifier.exported)\n                      ? specifier.exported.name\n                      : specifier.exported.value) === CONFIG_KEY\n                  ) {\n                    // export {} from 'somewhere'\n                    if (BabelTypes.isStringLiteral(exportPath.node.source)) {\n                      throw new Error(\n                        errorMessage(\n                          exportState,\n                          `Expected object but got import`\n                        )\n                      )\n                      // import hello from 'world'\n                      // export { hello as config }\n                    } else if (\n                      BabelTypes.isIdentifier(\n                        (specifier as BabelTypes.ExportSpecifier).local\n                      )\n                    ) {\n                      if (\n                        BabelTypes.isImportSpecifier(\n                          exportPath.scope.getBinding(\n                            (specifier as BabelTypes.ExportSpecifier).local.name\n                          )?.path.node\n                        )\n                      ) {\n                        throw new Error(\n                          errorMessage(\n                            exportState,\n                            `Expected object but got import`\n                          )\n                        )\n                      }\n                    }\n                  }\n                }\n\n                for (const declaration of declarations) {\n                  if (\n                    !BabelTypes.isIdentifier(declaration.id, {\n                      name: CONFIG_KEY,\n                    })\n                  ) {\n                    continue\n                  }\n\n                  let { init } = declaration\n                  if (BabelTypes.isTSAsExpression(init)) {\n                    init = init.expression\n                  }\n\n                  if (!BabelTypes.isObjectExpression(init)) {\n                    const got = init ? init.type : 'undefined'\n                    throw new Error(\n                      errorMessage(\n                        exportState,\n                        `Expected object but got ${got}`\n                      )\n                    )\n                  }\n\n                  for (const prop of init.properties) {\n                    if (BabelTypes.isSpreadElement(prop)) {\n                      throw new Error(\n                        errorMessage(\n                          exportState,\n                          `Property spread is not allowed`\n                        )\n                      )\n                    }\n                  }\n                }\n              },\n            },\n            state\n          )\n        },\n      },\n    } as Visitor<ConfigState>,\n  }\n}\n"],"names":["nextPageConfig","CONFIG_KEY","errorMessage","state","details","pageName","filename","split","cwd","pop","types","t","visitor","Program","enter","path","traverse","ExportDeclaration","exportPath","exportState","BabelTypes","isExportNamedDeclaration","node","specifiers","some","specifier","isIdentifier","exported","name","value","isStringLiteral","source","Error","ExportNamedDeclaration","bundleDropped","declaration","length","declarations","scope","getBinding","filter","Boolean","local","isImportSpecifier","id","init","isTSAsExpression","expression","isObjectExpression","got","type","prop","properties","isSpreadElement"],"mappings":"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","ignoreList":[0]}