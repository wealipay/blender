{"version":3,"sources":["../../../../src/build/babel/loader/get-config.ts"],"sourcesContent":["import { readFileSync } from 'node:fs'\nimport { inspect } from 'node:util'\nimport JSON5 from 'next/dist/compiled/json5'\n\nimport { createConfigItem, loadOptions } from 'next/dist/compiled/babel/core'\nimport loadFullConfig from 'next/dist/compiled/babel/core-lib-config'\n\nimport type {\n  NextBabelLoaderOptionDefaultPresets,\n  NextBabelLoaderOptions,\n  NextJsLoaderContext,\n} from './types'\nimport {\n  consumeIterator,\n  type SourceMap,\n  type BabelLoaderTransformOptions,\n} from './util'\nimport * as Log from '../../output/log'\nimport { isReactCompilerRequired } from '../../swc'\n\n/**\n * An internal (non-exported) type used by babel.\n */\nexport type ResolvedBabelConfig = {\n  options: BabelLoaderTransformOptions\n  passes: BabelPluginPasses\n  externalDependencies: ReadonlyArray<string>\n}\n\nexport type BabelPlugin = unknown\nexport type BabelPluginPassList = ReadonlyArray<BabelPlugin>\nexport type BabelPluginPasses = ReadonlyArray<BabelPluginPassList>\n\nconst nextDistPath =\n  /(next[\\\\/]dist[\\\\/]shared[\\\\/]lib)|(next[\\\\/]dist[\\\\/]client)|(next[\\\\/]dist[\\\\/]pages)/\n\n/**\n * The properties defined here are the conditions with which subsets of inputs\n * can be identified that are able to share a common Babel config.  For example,\n * in dev mode, different transforms must be applied to a source file depending\n * on whether you're compiling for the client or for the server - thus `isServer`\n * is germane.\n *\n * However, these characteristics need not protect against circumstances that\n * will not be encountered in Next.js.  For example, a source file may be\n * transformed differently depending on whether we're doing a production compile\n * or for HMR in dev mode.  However, those two circumstances will never be\n * encountered within the context of a single V8 context (and, thus, shared\n * cache).  Therefore, hasReactRefresh is _not_ germane to caching.\n *\n * NOTE: This approach does not support multiple `.babelrc` files in a\n * single project.  A per-cache-key config will be generated once and,\n * if `.babelrc` is present, that config will be used for any subsequent\n * transformations.\n */\ninterface CharacteristicsGermaneToCaching {\n  isStandalone: boolean\n  isServer: boolean | undefined\n  isPageFile: boolean | undefined\n  isNextDist: boolean\n  hasModuleExports: boolean\n  hasReactCompiler: boolean\n  fileExt: string\n  configFilePath: string | undefined\n}\n\nfunction shouldSkipBabel(\n  transformMode: 'standalone' | 'default',\n  configFilePath: string | undefined,\n  hasReactCompiler: boolean\n) {\n  return (\n    transformMode === 'standalone' &&\n    configFilePath == null &&\n    !hasReactCompiler\n  )\n}\n\nconst fileExtensionRegex = /\\.([a-z]+)$/\nasync function getCacheCharacteristics(\n  loaderOptions: NextBabelLoaderOptions,\n  source: string,\n  filename: string\n): Promise<CharacteristicsGermaneToCaching> {\n  let isStandalone, isServer, pagesDir\n  switch (loaderOptions.transformMode) {\n    case 'default':\n      isStandalone = false\n      isServer = loaderOptions.isServer\n      pagesDir = loaderOptions.pagesDir\n      break\n    case 'standalone':\n      isStandalone = true\n      break\n    default:\n      throw new Error(\n        `unsupported transformMode in loader options: ${inspect(loaderOptions)}`\n      )\n  }\n\n  const isPageFile = pagesDir != null && filename.startsWith(pagesDir)\n  const isNextDist = nextDistPath.test(filename)\n  const hasModuleExports = source.indexOf('module.exports') !== -1\n  const fileExt = fileExtensionRegex.exec(filename)?.[1] || 'unknown'\n\n  let {\n    reactCompilerPlugins,\n    reactCompilerExclude,\n    configFile: configFilePath,\n    transformMode,\n  } = loaderOptions\n\n  // Compute `hasReactCompiler` as part of the cache characteristics / key,\n  // rather than inside of `getFreshConfig`:\n  // - `isReactCompilerRequired` depends on the file contents\n  // - `node_modules` and `reactCompilerExclude` depend on the file path, which\n  //   isn't part of the cache characteristics\n  let hasReactCompiler =\n    reactCompilerPlugins != null &&\n    reactCompilerPlugins.length !== 0 &&\n    !loaderOptions.isServer &&\n    !/[/\\\\]node_modules[/\\\\]/.test(filename) &&\n    // Assumption: `reactCompilerExclude` is cheap because it should only\n    // operate on the file path and *not* the file contents (it's sync)\n    !reactCompilerExclude?.(filename)\n\n  // `isReactCompilerRequired` is expensive to run (parses/visits with SWC), so\n  // only run it if there's a good chance we might be able to skip calling Babel\n  // entirely (speculatively call `shouldSkipBabel`).\n  //\n  // Otherwise, we can let react compiler handle this logic for us. It should\n  // behave equivalently.\n  if (\n    hasReactCompiler &&\n    shouldSkipBabel(transformMode, configFilePath, /*hasReactCompiler*/ false)\n  ) {\n    hasReactCompiler &&= await isReactCompilerRequired(filename)\n  }\n\n  return {\n    isStandalone,\n    isServer,\n    isPageFile,\n    isNextDist,\n    hasModuleExports,\n    hasReactCompiler,\n    fileExt,\n    configFilePath,\n  }\n}\n\n/**\n * Return an array of Babel plugins, conditioned upon loader options and\n * source file characteristics.\n */\nfunction getPlugins(\n  loaderOptions: NextBabelLoaderOptionDefaultPresets,\n  cacheCharacteristics: CharacteristicsGermaneToCaching\n) {\n  const { isServer, isPageFile, isNextDist, hasModuleExports } =\n    cacheCharacteristics\n\n  const { development, hasReactRefresh } = loaderOptions\n\n  const applyCommonJsItem = hasModuleExports\n    ? createConfigItem(\n        require('../plugins/commonjs') as typeof import('../plugins/commonjs'),\n        { type: 'plugin' }\n      )\n    : null\n  const reactRefreshItem = hasReactRefresh\n    ? createConfigItem(\n        [\n          require('next/dist/compiled/react-refresh/babel') as typeof import('next/dist/compiled/react-refresh/babel'),\n          { skipEnvCheck: true },\n        ],\n        { type: 'plugin' }\n      )\n    : null\n  const pageConfigItem =\n    !isServer && isPageFile\n      ? createConfigItem(\n          [\n            require('../plugins/next-page-config') as typeof import('../plugins/next-page-config'),\n          ],\n          {\n            type: 'plugin',\n          }\n        )\n      : null\n  const disallowExportAllItem =\n    !isServer && isPageFile\n      ? createConfigItem(\n          [\n            require('../plugins/next-page-disallow-re-export-all-exports') as typeof import('../plugins/next-page-disallow-re-export-all-exports'),\n          ],\n          { type: 'plugin' }\n        )\n      : null\n  const transformDefineItem = createConfigItem(\n    [\n      require.resolve('next/dist/compiled/babel/plugin-transform-define'),\n      {\n        'process.env.NODE_ENV': development ? 'development' : 'production',\n        'typeof window': isServer ? 'undefined' : 'object',\n        'process.browser': isServer ? false : true,\n      },\n      'next-js-transform-define-instance',\n    ],\n    { type: 'plugin' }\n  )\n  const nextSsgItem =\n    !isServer && isPageFile\n      ? createConfigItem([require.resolve('../plugins/next-ssg-transform')], {\n          type: 'plugin',\n        })\n      : null\n  const commonJsItem = isNextDist\n    ? createConfigItem(\n        require('next/dist/compiled/babel/plugin-transform-modules-commonjs') as typeof import('next/dist/compiled/babel/plugin-transform-modules-commonjs'),\n        { type: 'plugin' }\n      )\n    : null\n  const nextFontUnsupported = createConfigItem(\n    [\n      require('../plugins/next-font-unsupported') as typeof import('../plugins/next-font-unsupported'),\n    ],\n    { type: 'plugin' }\n  )\n\n  return [\n    reactRefreshItem,\n    pageConfigItem,\n    disallowExportAllItem,\n    applyCommonJsItem,\n    transformDefineItem,\n    nextSsgItem,\n    commonJsItem,\n    nextFontUnsupported,\n  ].filter(Boolean)\n}\n\nconst isJsonFile = /\\.(json|babelrc)$/\nconst isJsFile = /\\.js$/\n\n/**\n * While this function does block execution while reading from disk, it\n * should not introduce any issues.  The function is only invoked when\n * generating a fresh config, and only a small handful of configs should\n * be generated during compilation.\n */\nfunction getCustomBabelConfig(configFilePath: string) {\n  if (isJsonFile.exec(configFilePath)) {\n    const babelConfigRaw = readFileSync(configFilePath, 'utf8')\n    return JSON5.parse(babelConfigRaw)\n  } else if (isJsFile.exec(configFilePath)) {\n    return require(configFilePath)\n  }\n  throw new Error(\n    'The Next.js Babel loader does not support .mjs or .cjs config files.'\n  )\n}\n\nlet babelConfigWarned = false\n/**\n * Check if custom babel configuration from user only contains options that\n * can be migrated into latest Next.js features supported by SWC.\n *\n * This raises soft warning messages only, not making any errors yet.\n */\nfunction checkCustomBabelConfigDeprecation(\n  config: Record<string, any> | undefined\n) {\n  if (!config || Object.keys(config).length === 0) {\n    return\n  }\n\n  const { plugins, presets, ...otherOptions } = config\n  if (Object.keys(otherOptions ?? {}).length > 0) {\n    return\n  }\n\n  if (babelConfigWarned) {\n    return\n  }\n\n  babelConfigWarned = true\n\n  const isPresetReadyToDeprecate =\n    !presets ||\n    presets.length === 0 ||\n    (presets.length === 1 && presets[0] === 'next/babel')\n  const pluginReasons = []\n  const unsupportedPlugins = []\n\n  if (Array.isArray(plugins)) {\n    for (const plugin of plugins) {\n      const pluginName = Array.isArray(plugin) ? plugin[0] : plugin\n\n      // [NOTE]: We cannot detect if the user uses babel-plugin-macro based transform plugins,\n      // such as `styled-components/macro` in here.\n      switch (pluginName) {\n        case 'styled-components':\n        case 'babel-plugin-styled-components':\n          pluginReasons.push(\n            `\\t- 'styled-components' can be enabled via 'compiler.styledComponents' in 'next.config.js'`\n          )\n          break\n        case '@emotion/babel-plugin':\n          pluginReasons.push(\n            `\\t- '@emotion/babel-plugin' can be enabled via 'compiler.emotion' in 'next.config.js'`\n          )\n          break\n        case 'babel-plugin-relay':\n          pluginReasons.push(\n            `\\t- 'babel-plugin-relay' can be enabled via 'compiler.relay' in 'next.config.js'`\n          )\n          break\n        case 'react-remove-properties':\n          pluginReasons.push(\n            `\\t- 'react-remove-properties' can be enabled via 'compiler.reactRemoveProperties' in 'next.config.js'`\n          )\n          break\n        case 'transform-remove-console':\n          pluginReasons.push(\n            `\\t- 'transform-remove-console' can be enabled via 'compiler.removeConsole' in 'next.config.js'`\n          )\n          break\n        default:\n          unsupportedPlugins.push(pluginName)\n          break\n      }\n    }\n  }\n\n  if (isPresetReadyToDeprecate && unsupportedPlugins.length === 0) {\n    Log.warn(\n      `It looks like there is a custom Babel configuration that can be removed${\n        pluginReasons.length > 0 ? ':' : '.'\n      }`\n    )\n\n    if (pluginReasons.length > 0) {\n      Log.warn(`Next.js supports the following features natively: `)\n      Log.warn(pluginReasons.join(''))\n      Log.warn(\n        `For more details configuration options, please refer https://nextjs.org/docs/architecture/nextjs-compiler#supported-features`\n      )\n    }\n  }\n}\n\n/**\n * Generate a new, flat Babel config, ready to be handed to Babel-traverse.\n * This config should have no unresolved overrides, presets, etc.\n *\n * The config returned by this function is cached, so the function should not\n * depend on file-specific configuration or configuration that could change\n * across invocations without a process restart.\n */\nasync function getFreshConfig(\n  ctx: NextJsLoaderContext,\n  cacheCharacteristics: CharacteristicsGermaneToCaching,\n  loaderOptions: NextBabelLoaderOptions,\n  target: string\n): Promise<ResolvedBabelConfig | null> {\n  const { transformMode } = loaderOptions\n  const { hasReactCompiler, configFilePath, fileExt } = cacheCharacteristics\n\n  let customConfig = configFilePath && getCustomBabelConfig(configFilePath)\n  if (shouldSkipBabel(transformMode, configFilePath, hasReactCompiler)) {\n    // Optimization: There's nothing useful to do, bail out and skip babel on\n    // this file\n    return null\n  }\n\n  checkCustomBabelConfigDeprecation(customConfig)\n\n  // We can assume that `reactCompilerPlugins` does not change without a process\n  // restart (it's safe to cache), as it's specified in the `next.config.js`,\n  // which always causes a full restart of `next dev` if changed.\n  const reactCompilerPluginsIfEnabled = hasReactCompiler\n    ? (loaderOptions.reactCompilerPlugins ?? [])\n    : []\n\n  let isServer, pagesDir, srcDir, development\n  if (transformMode === 'default') {\n    isServer = loaderOptions.isServer\n    pagesDir = loaderOptions.pagesDir\n    srcDir = loaderOptions.srcDir\n    development = loaderOptions.development\n  }\n\n  let options: BabelLoaderTransformOptions = {\n    babelrc: false,\n    cloneInputAst: false,\n\n    // Use placeholder file info. `updateBabelConfigWithFileDetails` will\n    // replace this after caching.\n    filename: `basename.${fileExt}`,\n    inputSourceMap: undefined,\n    sourceFileName: `basename.${fileExt}`,\n\n    // Set the default sourcemap behavior based on Webpack's mapping flag,\n    // but allow users to override if they want.\n    sourceMaps:\n      loaderOptions.sourceMaps === undefined\n        ? ctx.sourceMap\n        : loaderOptions.sourceMaps,\n  }\n\n  const baseCaller = {\n    name: 'next-babel-turbo-loader',\n    supportsStaticESM: true,\n    supportsDynamicImport: true,\n\n    // Provide plugins with insight into webpack target.\n    // https://github.com/babel/babel-loader/issues/787\n    target,\n\n    // Webpack 5 supports TLA behind a flag. We enable it by default\n    // for Babel, and then webpack will throw an error if the experimental\n    // flag isn't enabled.\n    supportsTopLevelAwait: true,\n\n    isServer,\n    srcDir,\n    pagesDir,\n    isDev: development,\n\n    transformMode,\n\n    ...loaderOptions.caller,\n  }\n\n  options.plugins = [\n    ...(transformMode === 'default'\n      ? getPlugins(loaderOptions, cacheCharacteristics)\n      : []),\n    ...reactCompilerPluginsIfEnabled,\n    ...(customConfig?.plugins || []),\n  ]\n\n  // target can be provided in babelrc\n  options.target = isServer ? undefined : customConfig?.target\n\n  // env can be provided in babelrc\n  options.env = customConfig?.env\n\n  options.presets = (() => {\n    // If presets is defined the user will have next/babel in their babelrc\n    if (customConfig?.presets) {\n      return customConfig.presets\n    }\n\n    // If presets is not defined the user will likely have \"env\" in their babelrc\n    if (customConfig) {\n      return undefined\n    }\n\n    // If no custom config is provided the default is to use next/babel\n    return ['next/babel']\n  })()\n\n  options.overrides = loaderOptions.overrides\n\n  options.caller = {\n    ...baseCaller,\n    hasJsxRuntime:\n      transformMode === 'default' ? loaderOptions.hasJsxRuntime : undefined,\n  }\n\n  // Babel does strict checks on the config so undefined is not allowed\n  if (typeof options.target === 'undefined') {\n    delete options.target\n  }\n\n  Object.defineProperty(options.caller, 'onWarning', {\n    enumerable: false,\n    writable: false,\n    value: (reason: any) => {\n      if (!(reason instanceof Error)) {\n        reason = new Error(reason)\n      }\n      ctx.emitWarning(reason)\n    },\n  })\n\n  const loadedOptions = loadOptions(options)\n  const config = consumeIterator(loadFullConfig(loadedOptions))\n\n  return config\n}\n\n/**\n * Each key returned here corresponds with a Babel config that can be shared.\n * The conditions of permissible sharing between files is dependent on specific\n * file attributes and Next.js compiler states: `CharacteristicsGermaneToCaching`.\n */\nfunction getCacheKey(cacheCharacteristics: CharacteristicsGermaneToCaching) {\n  const {\n    isStandalone,\n    isServer,\n    isPageFile,\n    isNextDist,\n    hasModuleExports,\n    hasReactCompiler,\n    fileExt,\n    configFilePath,\n  } = cacheCharacteristics\n\n  const flags =\n    0 |\n    (isStandalone ? 0b000001 : 0) |\n    (isServer ? 0b000010 : 0) |\n    (isPageFile ? 0b000100 : 0) |\n    (isNextDist ? 0b001000 : 0) |\n    (hasModuleExports ? 0b010000 : 0) |\n    (hasReactCompiler ? 0b100000 : 0)\n\n  // separate strings with null bytes, assuming null bytes are not valid in file\n  // paths\n  return `${configFilePath || ''}\\x00${fileExt}\\x00${flags}`\n}\n\nconst configCache: Map<any, ResolvedBabelConfig | null> = new Map()\nconst configFiles: Set<string> = new Set()\n\n/**\n * Applies file-specific values to a potentially-cached configuration object.\n */\nfunction updateBabelConfigWithFileDetails(\n  cachedConfig: ResolvedBabelConfig | null | undefined,\n  loaderOptions: NextBabelLoaderOptions,\n  filename: string,\n  inputSourceMap: SourceMap | undefined\n): ResolvedBabelConfig | null {\n  if (cachedConfig == null) {\n    return null\n  }\n  return {\n    ...cachedConfig,\n    options: {\n      ...cachedConfig.options,\n      cwd: loaderOptions.cwd,\n      root: loaderOptions.cwd,\n      filename,\n      inputSourceMap,\n      // Ensure that Webpack will get a full absolute path in the sourcemap\n      // so that it can properly map the module back to its internal cached\n      // modules.\n      sourceFileName: filename,\n    },\n  }\n}\n\nexport default async function getConfig(\n  ctx: NextJsLoaderContext,\n  {\n    source,\n    target,\n    loaderOptions,\n    filename,\n    inputSourceMap,\n  }: {\n    source: string\n    loaderOptions: NextBabelLoaderOptions\n    target: string\n    filename: string\n    inputSourceMap?: SourceMap | undefined\n  }\n): Promise<ResolvedBabelConfig | null> {\n  const cacheCharacteristics = await getCacheCharacteristics(\n    loaderOptions,\n    source,\n    filename\n  )\n\n  if (loaderOptions.configFile) {\n    // Ensures webpack invalidates the cache for this loader when the config file changes\n    ctx.addDependency(loaderOptions.configFile)\n  }\n\n  const cacheKey = getCacheKey(cacheCharacteristics)\n  const cachedConfig = configCache.get(cacheKey)\n  if (cachedConfig !== undefined) {\n    return updateBabelConfigWithFileDetails(\n      cachedConfig,\n      loaderOptions,\n      filename,\n      inputSourceMap\n    )\n  }\n\n  if (loaderOptions.configFile && !configFiles.has(loaderOptions.configFile)) {\n    configFiles.add(loaderOptions.configFile)\n    Log.info(\n      `Using external babel configuration from ${loaderOptions.configFile}`\n    )\n  }\n\n  const freshConfig = await getFreshConfig(\n    ctx,\n    cacheCharacteristics,\n    loaderOptions,\n    target\n  )\n\n  configCache.set(cacheKey, freshConfig)\n\n  return updateBabelConfigWithFileDetails(\n    freshConfig,\n    loaderOptions,\n    filename,\n    inputSourceMap\n  )\n}\n"],"names":["getConfig","nextDistPath","shouldSkipBabel","transformMode","configFilePath","hasReactCompiler","fileExtensionRegex","getCacheCharacteristics","loaderOptions","source","filename","isStandalone","isServer","pagesDir","Error","inspect","isPageFile","startsWith","isNextDist","test","hasModuleExports","indexOf","fileExt","exec","reactCompilerPlugins","reactCompilerExclude","configFile","length","isReactCompilerRequired","getPlugins","cacheCharacteristics","development","hasReactRefresh","applyCommonJsItem","createConfigItem","require","type","reactRefreshItem","skipEnvCheck","pageConfigItem","disallowExportAllItem","transformDefineItem","resolve","nextSsgItem","commonJsItem","nextFontUnsupported","filter","Boolean","isJsonFile","isJsFile","getCustomBabelConfig","babelConfigRaw","readFileSync","JSON5","parse","babelConfigWarned","checkCustomBabelConfigDeprecation","config","Object","keys","plugins","presets","otherOptions","isPresetReadyToDeprecate","pluginReasons","unsupportedPlugins","Array","isArray","plugin","pluginName","push","Log","warn","join","getFreshConfig","ctx","target","customConfig","reactCompilerPluginsIfEnabled","srcDir","options","babelrc","cloneInputAst","inputSourceMap","undefined","sourceFileName","sourceMaps","sourceMap","baseCaller","name","supportsStaticESM","supportsDynamicImport","supportsTopLevelAwait","isDev","caller","env","overrides","hasJsxRuntime","defineProperty","enumerable","writable","value","reason","emitWarning","loadedOptions","loadOptions","consumeIterator","loadFullConfig","getCacheKey","flags","configCache","Map","configFiles","Set","updateBabelConfigWithFileDetails","cachedConfig","cwd","root","addDependency","cacheKey","get","has","add","info","freshConfig","set"],"mappings":"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","ignoreList":[0]}