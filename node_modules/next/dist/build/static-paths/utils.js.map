{"version":3,"sources":["../../../src/build/static-paths/utils.ts"],"sourcesContent":["import type { DynamicParamTypes } from '../../shared/lib/app-router-types'\nimport type { FallbackRouteParam } from './types'\n\n/**\n * Encodes a parameter value using the provided encoder.\n *\n * @param value - The value to encode.\n * @param encoder - The encoder to use.\n * @returns The encoded value.\n */\nexport function encodeParam(\n  value: string | string[],\n  encoder: (value: string) => string\n) {\n  let replaceValue: string\n  if (Array.isArray(value)) {\n    replaceValue = value.map(encoder).join('/')\n  } else {\n    replaceValue = encoder(value)\n  }\n\n  return replaceValue\n}\n\n/**\n * Normalizes a pathname to a consistent format.\n *\n * @param pathname - The pathname to normalize.\n * @returns The normalized pathname.\n */\nexport function normalizePathname(pathname: string) {\n  return pathname.replace(/\\\\/g, '/').replace(/(?!^)\\/$/, '')\n}\n\n/**\n * Creates a fallback route param.\n *\n * @param paramName - The name of the param.\n * @param isParallelRouteParam - Whether this is a parallel route param or\n * descends from a parallel route param.\n * @returns The fallback route param.\n */\nexport function createFallbackRouteParam(\n  paramName: string,\n  paramType: DynamicParamTypes,\n  isParallelRouteParam: boolean\n): FallbackRouteParam {\n  return { paramName, paramType, isParallelRouteParam }\n}\n"],"names":["createFallbackRouteParam","encodeParam","normalizePathname","value","encoder","replaceValue","Array","isArray","map","join","pathname","replace","paramName","paramType","isParallelRouteParam"],"mappings":";;;;;;;;;;;;;;;;IA0CgBA,wBAAwB;eAAxBA;;IAhCAC,WAAW;eAAXA;;IAoBAC,iBAAiB;eAAjBA;;;AApBT,SAASD,YACdE,KAAwB,EACxBC,OAAkC;IAElC,IAAIC;IACJ,IAAIC,MAAMC,OAAO,CAACJ,QAAQ;QACxBE,eAAeF,MAAMK,GAAG,CAACJ,SAASK,IAAI,CAAC;IACzC,OAAO;QACLJ,eAAeD,QAAQD;IACzB;IAEA,OAAOE;AACT;AAQO,SAASH,kBAAkBQ,QAAgB;IAChD,OAAOA,SAASC,OAAO,CAAC,OAAO,KAAKA,OAAO,CAAC,YAAY;AAC1D;AAUO,SAASX,yBACdY,SAAiB,EACjBC,SAA4B,EAC5BC,oBAA6B;IAE7B,OAAO;QAAEF;QAAWC;QAAWC;IAAqB;AACtD","ignoreList":[0]}